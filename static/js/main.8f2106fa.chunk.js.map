{"version":3,"sources":["img/Game1/Celular Base.svg","img/Game1/Mão dedão.svg","img/Game1/Mão palma.svg","img/Game1/Celular Sala.svg","img/Game2/parabens_vitoria-persistente.svg","img/Game2/parabens_vitoria-primeira.svg","img/Game2/símbolo_feedback errado.svg","img/Game2/bloco.svg","img/Game2/blocoButton.svg","img/Game3/shelf.svg","img/Game3/cart.svg","img/Game3/ingredients-list.svg","img/Game3/recipe-bg.svg","img/Game3/ingredients-list-full.svg","img/Game3/recipe-bg-round.svg","img/Game3/check.svg","img/Game3/checkbox.svg","img/Game3/list-icon.svg","img/Game3/checkout.svg","img/Game3/wallet.svg","img/Game3/hourglass-full.svg","img/Game3/hourglass-empty.svg","img/Game3/chashier-table.svg","img/Game3/cashier-bg.svg","img/Game3/bigBlob.svg","img/Game3/kitchen.svg","img/Game3/ingredients-list-rotated.svg","img/Game3/Tomate_lista.svg","img/avatar1.svg","img/i-home.svg","img/i-notification.svg","img/i-settings.svg","img/lampada_apagada.svg","img/lampada_acesa.svg","img/ícone_jogo1.svg","img/bg-forma-azul.svg","img/bg-forma-verde.svg","img/bg-forma-azul2.svg","img/Score Baixo_blob.svg","img/bg-forma-laranja.svg","img/placeholders/CL32_ml.png","img/apagar.svg","img/confirmar.svg","_constants/alert.constants.js","_constants/user.constants.js","_constants/header.constants.js","apiValues.js","_constants/api.constants.js","_helpers/apiConstantBuilder.js","_constants/game.constants.js","_constants/music.constants.js","_actions/alert.actions.js","_helpers/history.js","_reducers/authentication.reducer.js","_helpers/reducerBuilder.js","_reducers/api.reducers.js","_reducers/apiGame.reducer.js","_reducers/index.js","_reducers/registration.reducer.js","_reducers/users.reducer.js","_reducers/alert.reducer.js","_reducers/header.reducer.js","_reducers/music.reducer.js","_helpers/store.js","_helpers/auth-header.js","_helpers/generalFunctions.js","_services/api.services.js","_services/user.services.js","_services/apiGame.services.js","_actions/user.actions.js","_actions/header.actions.js","_actions/apiGame.actions.js","_actions/api.actions.js","_actions/music.actions.js","_components/UserHeader/index.js","_components/DefaultHeader/index.js","_components/AppHeader/index.js","pages/Home/index.js","sounds/pwu.mp3","_components/Button/index.js","_components/Init/index.js","pages/Game2/components/Result/index.js","_components/RoomSelect/index.js","_components/Sala/index.js","_components/Character/index.js","pages/Game1/initialState.js","pages/Game1/initialDialog.js","pages/Game1/stub.js","_components/Dropdown/index.js","_components/FullscreenOverlay/index.js","_components/Phone/index.js","_components/Menu/index.js","_components/DialogCharacter/index.js","_components/DialogHistory/index.js","sounds/writerLetter3.flac","_components/Writer/index.js","_components/Conversa/index.js","pages/Game1/index.js","_components/AcusationLamp/index.js","pages/Game2/initialState.js","pages/Game2/index.js","pages/Game3/initialState.js","_components/Timer/index.js","_components/Aisle/index.js","_components/DialogBox/index.js","pages/Game3/components/DialogCharacter/index.js","pages/Game3/components/ChefDialog/index.js","pages/Game3/components/IngredientList/index.js","pages/Game3/components/Intro/index.js","_components/TimerAnounce/index.js","_components/Recipe/index.js","pages/Game3/components/Tutorial/index.js","pages/Game3/components/Payment/index.js","pages/Game3/components/ShopCart/index.js","pages/Game3/index.js","pages/Game4/components/Intro/index.js","pages/Game4/initialState.js","pages/Game4/components/FeedbackPanel/index.js","pages/Game4/index.js","_components/DressingCharacter/index.js","_components/Wardrobe/index.js","pages/Game5/initialState.js","pages/Game5/stub.js","pages/Game5/index.js","pages/Game6/initialState.js","pages/Game6/stub.js","pages/Game6/components/Cellphone/index.js","pages/Game6/index.js","_components/PrivateRoute/index.js","pages/Login/index.js","pages/UserSpace/index.js","pages/Register/index.js","_components/UserInfo/index.js","pages/UsersCRUD/index.js","pages/Mission/index.js","pages/Character/index.js","pages/Question/index.js","pages/EditMission/index.js","pages/Missions/index.js","pages/CreateCharacter/index.js","pages/CreateLocation/index.js","pages/CreateQuestion/index.js","pages/CreateMission/components/EditMissionCharacter.js","pages/CreateMission/components/EditNewMissionCharacter.js","pages/CreateMission/missionCharacterInitialState.js","pages/CreateMission/Game1Data/index.js","pages/CreateMission/Game2Data/index.js","pages/CreateMission/index.js","pages/EditCharacter/index.js","pages/Characters/index.js","pages/Questions/index.js","pages/Questionnaires/index.js","pages/PlaySessions/index.js","_components/Config/index.js","_components/ConfigWindow/index.js","_components/GameConfig/index.js","pages/GameContext/index.js","TestPage.js","rootUrl.js","App.js","reportWebVitals.js","index.js","pages/Game3/index.module.scss","_components/Recipe/index.module.scss","_components/Aisle/index.module.scss","_components/Button/index.module.scss","pages/Game3/components/Tutorial/index.module.scss"],"names":["alertConstants","userConstants","headerConstants","NORMAL","HIDDEN","OVERLAY","apiValues","apiConstants","map","value","UPDATE_REQUEST","apiDataType","UPDATE_SUCCESS","UPDATE_FAILURE","CREATE_REQUEST","CREATE_SUCCESS","CREATE_FAILURE","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","GETBYID_REQUEST","GETBYID_SUCCESS","GETBYID_FAILURE","FIND_REQUEST","FIND_SUCCESS","FIND_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","gameConstants","musicConstants","alertActions","success","message","type","error","clear","createBrowserHistory","user","JSON","parse","localStorage","getItem","initialState","loggedIn","loading","items","apiReducers","Object","keys","forEach","apiType","constants","toLowerCase","state","action","creating","data","updating","index","findIndex","item","id","copy","slice","deleting","filter","deleteError","rootReducer","combineReducers","authentication","loggingIn","logginFailure","registration","registering","users","userCopy","roles","alert","header","title","subtitle","newTitle","newSubtitle","newState","music","url","volume","game","loggerMiddleware","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","authHeader","jwt","numberToMoney","n","units","tens","hundreds","chunks","chunk","ints","i","word","words","string","toString","parseInt","split","length","push","reverse","parseFloat","replace","join","goRound","max","Math","abs","shuffle","array","temporaryValue","randomIndex","currentIndex","shuffledArray","floor","random","zeroFill","s","size","preventSingleWordBreak","sentence","api","axios","create","baseURL","getByIdBuilder","routeName","method","headers","then","handleResponse","findBuilder","query","createBuilder","updateBuilder","deleteBuilder","response","status","location","reload","Promise","reject","statusText","apiServices","getAll","getById","find","update","delete","userService","login","email","password","identifier","setItem","stringify","logout","register","console","log","getRoles","removeItem","apiGameServices","params","userActions","dispatch","failure","request","resolve","messages","headerActions","requester","service","route","payload","gameActions","info","getByIdConstructor","findData","findConstructor","createData","createConstructor","updateData","updateConstructor","deleteData","deleteConstructor","getAllConstructor","apiActions","musicActions","v","UserHeader","pageInfo","headerInfo","useSelector","React","useState","view","setState","useDispatch","useAlert","className","onClick","show","src","home","alt","notifications","settings","avatar","style","position","backgroundColor","top","margin","width","height","DefaultHeader","AppHeader","props","isLogged","Home","to","BUTTON_DIRECTIONS","freeze","LEFT","CENTER","RIGHT","COLOR_SCHEMES","COR_1","COR_2","COR_3","COR_4","Button","children","blink","direction","colorScheme","stayAsPill","showArrow","sfx","Audio","sound","styles","btn","onPointerEnter","play","Iniciar","label","Voltar","Init","icon","name","description","nameTranslate","descriptionTranslate","onStart","onBack","ready","CircularProgress","Result","gameEndState","str","RoomSelect","buttonList","onChange","showInBtnFormat","useEffect","lang","num","Sala","roomData","img","setCurrentChar","background","Character","zDepth","character","dragPosition","showNameOnHover","characterAssets","asset","bodyPart","image","initialValue","back","scene","endGame","currentLocationIndex","locations","jobs","countries","names","contactsTemplate","contactsAtSession","dialogs","questionsAsked","result","totalFields","mainError","feedback","dialogHistory","answers","preSpeech","currentChar","characterFeeling","showContacts","maxQuestions","shouldMinimize","shouldCloseDialog","wrongContacts","tracking","question","stub","backgroundAssets","characters","answer","Dropdown","defaultText","optionList","disabled","option","FullscreenOverlay","showCloseBtn","shouldExit","onClickClose","onReadyToExit","bgRGBA","closeRGB","closeHoverRGB","Error","onAnimationEnd","event","target","currentTarget","r","g","b","a","Phone","modifyContact","contacts","onFinish","onAddContact","onMinimize","maximized","_shouldMinimize","smallPhone","palma","bigPhone","dedao","contact","key","showName","e","showJob","job","showCountry","country","_contatoTemplate","display","Menu","onButtonClick","color","fontSize","button","hasOwnProperty","active","DialogCharacter","feeling","characterImg","DialogHistory","dialog","speaker","text","Writer","characterTime","onWritten","afterWrittenTime","timeoutID","setTimeout","audio","clearTimeout","substring","Conversa","showDialogHistory","onClearDialogHistory","callAfterWritterForEveryMsg","msPerCharacter","waitAfterWritten","prevDialogHistory","charPreSpeech","convOptions","charFeeling","afterWriter","onExited","onConvoChoiceMade","convoChoosen","querFechar","currentAnswer","flexGrow","updateState","Game1","play_sessionsActions","match","missions","mission","missionData","userId","currentPlaySession","play_sessions","language","backgroundAudio","trackPlayerInput","getClickedObject","actions","tag","nodeName","class","innerHTML","includes","clickTime","Date","document","addEventListener","removeEventListener","Set","missionCharacters","reduce","acc","missionCharacter","flat","sort","hasEmptyField","onStartGame","convOption","updatedState","close","shouldCloseConvo","onMenuButtonClick","indexOf","c","closeDialog","restart","hasPlayed","onPhoneFinish","missionContact","contactAtSession","gabarito","contactTemplate","changeRoomPopUp","onGoNextRoom","metrics","metric","metricTranslate","translate","count","t","score","toFixed","obj","feedbacks","minScore","maxScore","won","initIcon","refreshDialog","initialDialog","nextRoomTextWrong","nextRoomTextWrongTranslate","translation","nextRoomTextRight","nextRoomTextRightTranslate","min","topAsset","textTranslate","href","backgroundImage","blobLaranja","blobLowScore","mobileBackground","tries","AcusationLamp","lamp_apagada","lamp_acesa","currentRoom","isOnDialog","found","tips","acusation","closeAcusation","validQuestions","tutorialStep","seeTutorial","checkedPlayed","tipsCount","dialogStep","totalDialogSteps","questionsByStep","showConvo","questions","targetName","correct","ncorrect","correctMinimum","startedTimestamp","now","elapsedTime","spokenCharacters","Game2","resultsCount","dialogInitialState","availableCharacters","tutorialRoom","tutorial","totalWeight","crowdestRoomPop","emptiestRoomPop","maxWeight","weights","weight","rand","locationIndex","availableAnswers","selectedQuestions","source","splice","temp","amountChars","j","exchangeWith","aux","tip","endTutorial","mc","wrongEndAnswer","refresh","endDialog","rightEndAnswer","tchaus","rIdx","closeAfterWritter","onRefreshDialog","tutorialCharacter","tutorialScreen","showTips","zIndex","marginLeft","bloco","padding","blocoButton","iconVitoriaPrim","iconVitoriaPers","blobAzul","blobVerde","iconDerrota","iconDicas","spokenCharactersCount","validQuestionsCount","cart","recipe","ingredientsList","aisles","currentAisle","checkout","onPayment","payment","win","change","runTimer","remainingTime","initTime","moneySelection","Timer","seconds","onEnd","onStop","run","timeout","sentRemaning","previousRef","useRef","current","Aisle","products","addProduct","toPreviousAisle","toNextAisle","aisle","btnChangeAisle","shelves","shelf","product","Array","element","tooltip","shelfImage","tooltiptext","shelfPrice","DialogBox","alternative","borderRadius","marginBottom","boxShadow","transition","overflow","bottom","left","ChefDialog","hideDialog","onContinue","chef","writerDone","chefStyles","Fragment","paddingTop","paddingLeft","borderColor","right","fontWeight","IngredientList","Intro","recipeName","recipeNameTranslate","goToTutorial","screen","instructions","en","ptbr","kitchen","opacity","recipeBgRound","flex","ingredient","TimerAnounce","onReady","backgroundRepeat","backgroundPosition","backgroundSize","paddinBottom","flexDirection","alignItems","hourglassFull","marginTop","center","Recipe","hasImage","showCheck","iconShouldShow","onMouseEnter","onMouseLeave","ingredientsListBg","listCheckbox","listCheck","marked","parseInline","listIcon","Tutorial","shoppingCart","removeProduct","goToMarket","step","tutorialLine","shopList","removeProductNextLine","shopListNextLine","tutorialText","line","preferred","blobPosition","tutorialStyles","blobRight","blobLeft","tutorialGrid","tutorialBlob","htmlparse","btnTutorial","gameStyles","cartItems","cartItem","cartItemImg","moneyIcon","Payment","onConfirm","moneyList","addToPayment","money","moneyObj","paymentUpdate","removeFromPayment","m","gridTemplateRows","gridTemplateColumns","gridRowGap","textAlign","gridColumnStart","wallet","ShopCart","ingredientList","onItemClick","cartImg","endGameLines","Game3","timesPlayed","undefined","recipes","resumeRecipe","ingredients","measure","price","unityValue","quantity","shelfCount","separation","arr","len","splitArrayIntoChunksOfLen","cartUpdate","checkShoppingList","cartIngredient","moveToCheckout","haveAllValue","haveAll","checkoutConfirm","cashierLines","getWrongItemsInCart","cashierContinue","rightQuantity","userQuantity","timeUp","wrongIngredients","secondsTaken","rightPayment","remaining","gameGrid","confirmScreen","confirmBlob","blobSpans","btns","bigBlob","cashierBg","chefFeeling","cashierTable","doPayment","justifyContent","hourglassEmpty","fontFamily","fontStyle","process","goToKitchen","recipeBg","order","showRecipe","shuffledIngredients","tablewares","recipeContinue","showIngredients","selectedIngredient","tableIngredients","sortNameIngredient","shuffledName","userLetterOrder","tablewareImagePick","shuffledTablewares","shuffledTablewaresNames","tablewareImageSelected","tableTablewares","wrongIngredientSelected","wrongIngredientNameOrder","wrongTablewarePairSelected","wrongTablewareSelected","tutorialIngredientSelectionNotification","tutorialIngredientNameSelectionNotification","wrongIngredientNotification","wrongIngredientNameNotification","wrongCombinationNotification","feedbackMessages","FeedbackPanel","leave","messageTranslate","Game4","done","shuffleName","toUpperCase","nameShuffled","tableware","checkRightIngredient","currentIngredient","rightIngredient","userSelected","letter","selected","checkIngredientName","updateIngredientsList","updateShuffledIngredients","doneCooking","writeOrderName","userOrderInput","clearIngredientName","addLetter","updateShuffedName","moveToServing","choosen","tutorialTablewareSelectionNotification","saveResult","tomato","pointerEvents","endConfirmation","wrongCombiantionNotification","silverCloche","selectedTableware","imageSelected","nameSelected","DressingCharacter","clothesTypes","clothes","onRemoveClick","Wardrobe","onClothesClick","chooseCharacterScreen","choosenCharacter","showInvitation","proceedToDressingConfirmation","dressingContext","dressingTabIndex","readyAlert","invitation","date","time","season","Game5","clotheCount","cellPhoneStart","showCellphone","namingClothesContext","selectedClothesName","selectedColor","day","where","when","Cellphone","Game6","border","flexWrap","showRemove","lastConfirmation","PrivateRoute","Component","component","render","rest","pathname","from","useStyles","makeStyles","theme","root","palette","grey","paper","spacing","secondary","main","form","submit","Login","inputs","setInputs","submitted","setSubmitted","classes","handleChange","Grid","container","CssBaseline","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","onSubmit","preventDefault","catch","noValidate","TextField","required","fullWidth","autoComplete","autoFocus","justify","UserSpace","username","gameType","Register","languagesActions","firstName","lastName","languages","redirect","setRedirect","blocked","setBlocked","Container","select","MenuItem","UserInfo","provider","checked","confirmed","UsersCRUD","Mission","getAnswer","qId","borderStyle","characterAsset","civilState","game_1_missions","qIndex","wrongAnswer","rightAnswer","acusationAnswer","Question","EditMission","onDone","charList","setCharList","locationList","setLocationList","questionList","setQuestionList","addToMission","removeFromMission","addLocationToMission","removeLocationFromMission","l","addQuestionToMission","removeQuestionFromMission","Missions","missionsActions","game_1_missionsActions","game1missions","createMission","setCreateMission","edit","setEdit","CreateCharacter","charactersActions","setName","setJob","setCivilState","civilStates","estadosCivis","cs","Radio","CreateLocation","locationsActions","placeholder","CreateQuestion","questionsActions","group","maxWidth","aria-describedby","FormLabel","RadioGroup","aria-label","FormControlLabel","control","EditMissionCharacter","cancel","editAnswer","aQ","_","cloneDeep","changedIndex","rightAcusationAnswer","wrongAcusationAnswer","EditNewMissionCharacter","setmissionCharacter","missionCharacterInitialState","targetCharacter","CreateGame1Data","onCheckChange","game_1_mission_charactersActions","d","Checkbox","Game2Data","CreateMissionGame1","originalMission","charactersList","charactersConfigList","characterConfig","newCharacterConfig","createCharacter","setCreateCharacter","createLocation","setCreateLocation","createQuestion","setCreateQuestion","editCharacterConfig","createCharacterConfig","cancelCharacterConfig","addCharacterToList","removeCharacterFromList","flexShrink","flexBasis","missionCharactersCreate","game_1_mission_characters","onChangeCharacter","onJobCheckChange","onCountryCheckChange","mission_charactersActions","EditCharacter","mIndex","Characters","onAdd","Questions","deleteQuestion","Questionnaires","questionnairesActions","questionnaires","deleteQuestionnaire","questionnaire","PlaySessions","playSessions","playSession","usersPermissionsUser","player_actions","playerAction","Config","ConfigWindow","onConfig","onStatistics","onLeave","onClose","GameConfig","onVolumeMute","onVolumeUp","onVolumeChange","onFontSizeChange","assistMode","onAssistModeChange","onAccessibilityLeft","onAccessibilityRight","Slider","colSpan","dimensions","ALIGNMENTS","GameContext","accessibility","gameConfig","config","debug","alignment","vertical","horizontal","newValue","autoPlay","loop","TestPage","rootUrl","App","getElementsByTagName","gameMode","basename","path","exact","CreateMission","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","options","positions","TOP_RIGHT","ReactDOM","template","AlertTemplate","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8f2106fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Celular Base.794704d0.svg\";","export default __webpack_public_path__ + \"static/media/Mão dedão.60615287.svg\";","export default __webpack_public_path__ + \"static/media/Mão palma.ff873eea.svg\";","export default __webpack_public_path__ + \"static/media/Celular Sala.f026f530.svg\";","export default __webpack_public_path__ + \"static/media/parabens_vitoria-persistente.62184df1.svg\";","export default __webpack_public_path__ + \"static/media/parabens_vitoria-primeira.a06b772e.svg\";","export default __webpack_public_path__ + \"static/media/símbolo_feedback errado.7ae11eab.svg\";","export default __webpack_public_path__ + \"static/media/bloco.18b55b9f.svg\";","export default __webpack_public_path__ + \"static/media/blocoButton.99d070aa.svg\";","export default __webpack_public_path__ + \"static/media/shelf.bedc3c7c.svg\";","export default __webpack_public_path__ + \"static/media/cart.e38072ee.svg\";","export default __webpack_public_path__ + \"static/media/ingredients-list.fe3fd54b.svg\";","export default __webpack_public_path__ + \"static/media/recipe-bg.6f1d88ac.svg\";","export default __webpack_public_path__ + \"static/media/ingredients-list-full.c74a264e.svg\";","export default __webpack_public_path__ + \"static/media/recipe-bg-round.c7e0a423.svg\";","export default __webpack_public_path__ + \"static/media/check.faea4e4c.svg\";","export default __webpack_public_path__ + \"static/media/checkbox.587fe984.svg\";","export default __webpack_public_path__ + \"static/media/list-icon.022d0ebd.svg\";","export default __webpack_public_path__ + \"static/media/checkout.e736737a.svg\";","export default __webpack_public_path__ + \"static/media/wallet.74eef3a3.svg\";","export default __webpack_public_path__ + \"static/media/hourglass-full.3946bb9c.svg\";","export default __webpack_public_path__ + \"static/media/hourglass-empty.f2a68e53.svg\";","export default __webpack_public_path__ + \"static/media/chashier-table.aab5bb14.svg\";","export default __webpack_public_path__ + \"static/media/cashier-bg.2fd3ef7f.svg\";","export default __webpack_public_path__ + \"static/media/bigBlob.72f24a6a.svg\";","export default __webpack_public_path__ + \"static/media/kitchen.8fd918a2.svg\";","export default __webpack_public_path__ + \"static/media/ingredients-list-rotated.2096f259.svg\";","export default __webpack_public_path__ + \"static/media/Tomate_lista.d06e7242.svg\";","export default __webpack_public_path__ + \"static/media/avatar1.48f082ac.svg\";","export default __webpack_public_path__ + \"static/media/i-home.949bb3de.svg\";","export default __webpack_public_path__ + \"static/media/i-notification.995f04ef.svg\";","export default __webpack_public_path__ + \"static/media/i-settings.1d1409d0.svg\";","export default __webpack_public_path__ + \"static/media/lampada_apagada.3f2311d7.svg\";","export default __webpack_public_path__ + \"static/media/lampada_acesa.aeef7b84.svg\";","export default __webpack_public_path__ + \"static/media/ícone_jogo1.244e8c29.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-azul.185d92a7.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-verde.60dfa7ed.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-azul2.c589078f.svg\";","export default __webpack_public_path__ + \"static/media/Score Baixo_blob.f42aa286.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-laranja.01e2bb93.svg\";","export default __webpack_public_path__ + \"static/media/CL32_ml.e7d2349f.png\";","export default __webpack_public_path__ + \"static/media/apagar.476394f4.svg\";","export default __webpack_public_path__ + \"static/media/confirmar.76c6e030.svg\";","export const alertConstants = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    CLEAR: 'ALERT_CLEAR'\r\n}","export const userConstants = {\r\n    REGISTER_REQUEST: 'USER_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USER_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USER_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USER_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USER_LOGIN_FAILURE',\r\n\r\n    UPDATE_REQUEST: 'USER_UPDATE_REQUEST',\r\n    UPDATE_SUCCESS: 'USER_UPDATE_SUCCESS',\r\n    UPDATE_FAILURE: 'USER_UPDATE_FAILURE',\r\n\r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USER_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USER_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USER_GETALL_FAILURE',\r\n\r\n    GETBYID_REQUEST: 'USER_GETBYID_REQUEST',\r\n    GETBYID_SUCCESS: 'USER_GETBYID_SUCCESS',\r\n    GETBYID_FAILURE: 'USER_GETBYID_FAILURE',\r\n\r\n    FIND_REQUEST: 'USER_FIND_REQUEST',\r\n    FIND_SUCCESS: 'USER_FIND_SUCCESS',\r\n    FIND_FAILURE: 'USER_FIND_FAILURE',\r\n    \r\n    DELETE_REQUEST: 'USER_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USER_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USER_DELETE_FAILURE',\r\n\r\n    GETROLES_REQUEST: 'USER_GETROLES_REQUEST',\r\n    GETROLES_SUCCESS: 'USER_GETROLES_SUCCESS',\r\n    GETROLES_FAILURE: 'USER_GETROLES_FAILURE',\r\n}","export const headerConstants = {\r\n\tSET_TITLE:\t\t'SET_HEADER_TITLE',\r\n\tSET_SUBTITLE:\t'SET_HEADER_SUBTITLE',\r\n\tSET_ALL:\t\t'SET_HEADER_ALL',\r\n\r\n\tCLEAR_TITLE:\t'CLEAR_HEADER_TITLE',\r\n\tCLEAR_SUBTITLE:\t'CLEAR_HEADER_SUBTITLE',\r\n\tCLEAR_ALL:\t\t'CLEAR_HEADER_ALL',\r\n\r\n\tSET_STATE:\t\t'SET_HEADER_STATE',\r\n\tSTATES:\t\t\t{\r\n\t\tNORMAL:\t\t'NORMAL',\r\n\t\tHIDDEN:\t\t'HIDDEN',\r\n\t\tOVERLAY:\t'OVERLAY'\r\n\t},\r\n}\r\n","const apiValues = [\r\n  'GAMES_TYPES', 'MISSIONS', 'ASSETS',\r\n  'CHARACTERS', 'CHARACTER_ASSETS', \r\n  'LOCATIONS', 'QUESTIONS', 'LANGUAGES', 'PLAY_SESSIONS'\r\n]\r\n\r\nexport default apiValues\r\n","import { apiConstantBuilder } from '../_helpers/apiConstantBuilder'\r\nimport apiValues from '../apiValues'\r\n\r\nlet apiConstants = {}\r\n\r\napiValues.map( value => apiConstants[value] = apiConstantBuilder(value) )\r\n\r\nexport { apiConstants }\r\n","export const apiConstantBuilder = apiDataType => {\r\n  return {\r\n    UPDATE_REQUEST: `${apiDataType}_UPDATE_REQUEST`,\r\n    UPDATE_SUCCESS: `${apiDataType}_UPDATE_SUCCESS`,\r\n    UPDATE_FAILURE: `${apiDataType}_UPDATE_FAILURE`,\r\n\r\n    CREATE_REQUEST: `${apiDataType}_CREATE_REQUEST`,\r\n    CREATE_SUCCESS: `${apiDataType}_CREATE_SUCCESS`,\r\n    CREATE_FAILURE: `${apiDataType}_CREATE_FAILURE`,\r\n\r\n    GETALL_REQUEST: `${apiDataType}_GETALL_REQUEST`,\r\n    GETALL_SUCCESS: `${apiDataType}_GETALL_SUCCESS`,\r\n    GETALL_FAILURE: `${apiDataType}_GETALL_FAILURE`,\r\n\r\n    GETBYID_REQUEST: `${apiDataType}_GETBYID_REQUEST`,\r\n    GETBYID_SUCCESS: `${apiDataType}_GETBYID_SUCCESS`,\r\n    GETBYID_FAILURE: `${apiDataType}_GETBYID_FAILURE`,\r\n\r\n    FIND_REQUEST: `${apiDataType}_REQUES `,\r\n    FIND_SUCCESS: `${apiDataType}_SUCCES `,\r\n    FIND_FAILURE: `${apiDataType}_FAILUR `,\r\n\r\n    DELETE_REQUEST: `${apiDataType}_DELETE_REQUEST`,\r\n    DELETE_SUCCESS: `${apiDataType}_DELETE_SUCCESS`,\r\n    DELETE_FAILURE: `${apiDataType}_DELETE_FAILURE`,\r\n  }\r\n}\r\n","export const gameConstants =  {\r\n  UPDATE_REQUEST: 'GAME_UPDATE_REQUEST',\r\n  UPDATE_SUCCESS: 'GAME_UPDATE_SUCCESS',\r\n  UPDATE_FAILURE: 'GAME_UPDATE_FAILURE',\r\n\r\n  CREATE_REQUEST: 'GAME_CREATE_REQUEST',\r\n  CREATE_SUCCESS: 'GAME_CREATE_SUCCESS',\r\n  CREATE_FAILURE: 'GAME_CREATE_FAILURE',\r\n\r\n  GETALL_REQUEST: 'GAME_GETALL_REQUEST',\r\n  GETALL_SUCCESS: 'GAME_GETALL_SUCCESS',\r\n  GETALL_FAILURE: 'GAME_GETALL_FAILURE',\r\n\r\n  GETBYID_REQUEST: 'GAME_GETBYID_REQUEST',\r\n  GETBYID_SUCCESS: 'GAME_GETBYID_SUCCESS',\r\n  GETBYID_FAILURE: 'GAME_GETBYID_FAILURE',\r\n\r\n  FIND_REQUEST: 'GAME_REQUEST',\r\n  FIND_SUCCESS: 'GAME_SUCCESS',\r\n  FIND_FAILURE: 'GAME_FAILURE',\r\n\r\n  DELETE_REQUEST: 'GAME_DELETE_REQUEST',\r\n  DELETE_SUCCESS: 'GAME_DELETE_SUCCESS',\r\n  DELETE_FAILURE: 'GAME_DELETE_FAILURE',\r\n}","export const musicConstants = {\r\n\tSET:\t'SET',\r\n\tVOLUME: 'VOLUME'\r\n}\r\n","import { alertConstants } from '../_constants'\r\n\r\nexport const alertActions = {\r\n    success,\r\n    error,\r\n    clear\r\n}\r\n\r\nfunction success(message) {\r\n    return {\r\n        type: alertConstants.SUCCESS, \r\n        message\r\n    }\r\n}\r\n\r\nfunction error(message) {\r\n    return {\r\n        type: alertConstants.ERROR,\r\n        message\r\n    }\r\n}\r\n\r\nfunction clear() {\r\n    return {\r\n        type: alertConstants.CLEAR\r\n    }\r\n}","import { createBrowserHistory } from 'history'\r\n\r\nexport const history = createBrowserHistory()","import { userConstants } from '../_constants'\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'))\r\nconst initialState = user ? { loggedIn: true, user } : {}\r\n\r\nexport function authentication (state = initialState, action){\r\n    switch (action.type) {\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {\r\n                loggingIn: true,\r\n                user: action.user\r\n            }\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            }\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {\r\n                logginFailure: true\r\n            }\r\n        case userConstants.LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {\r\n  loading: false,\r\n  items: []\r\n}\r\n\r\nexport const reducerBuilder = constants => (state = initialState, action) =>\r\n{\r\n  switch (action.type) {\r\n      case constants.CREATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            creating: true\r\n          }\r\n      case constants.CREATE_SUCCESS:\r\n          return {...state,\r\n            creating: false,\r\n            items: [...state.items, action.data]\r\n          }\r\n      case constants.CREATE_FAILURE:\r\n          return {\r\n            error: action.error\r\n          }\r\n\r\n      case constants.UPDATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            updating: true\r\n          }\r\n      case constants.UPDATE_SUCCESS:\r\n          let index = state.items.findIndex( item => item.id === action.data.id )\r\n          let copy = [...state.items.slice(0, index), action.data, ...state.items.slice(index + 1)]\r\n          return {...state, updating: false,\r\n            items: copy\r\n          }\r\n      case constants.UPDATE_FAILURE:\r\n          return {...state, updating: false}\r\n\r\n      case constants.GETALL_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case constants.GETALL_SUCCESS:\r\n          return {...state,\r\n              loading: false,\r\n              items: action.data\r\n          };\r\n      case constants.GETALL_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n      case constants.GETBYID_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case constants.GETBYID_SUCCESS:\r\n          return {...state,\r\n              items: [...state.items, action.data],\r\n              loading: false\r\n          };\r\n      case constants.GETBYID_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n        case constants.FIND_REQUEST:\r\n            return {...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case constants.FIND_SUCCESS:\r\n            return {...state,\r\n                items: action.data,\r\n                loading: false\r\n            };\r\n        case constants.FIND_FAILURE:\r\n            return {...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n      case constants.DELETE_REQUEST:\r\n          // add 'deleting:true' property to character being deleted\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item =>\r\n                  item.id === action.id\r\n                      ? { ...item, deleting: true }\r\n                      : item\r\n              )\r\n          };\r\n      case constants.DELETE_SUCCESS:\r\n          // remove deleted character from state\r\n          return {...state,\r\n              items: state.items.filter(item => item.id !== action.id)\r\n          }\r\n      case constants.DELETE_FAILURE:\r\n          // remove 'deleting:true' property and add 'deleteError:[error]' property to character\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item => {\r\n                  if (item.id === action.id) {\r\n                      // make copy of character without 'deleting:true' property\r\n                      const { deleting, ...copy } = item;\r\n                      // return copy of character with 'deleteError:[error]' property\r\n                      return { ...copy, deleteError: action.error };\r\n                  }\r\n                  return item;\r\n              })\r\n          };\r\n      default:\r\n          return state\r\n  }\r\n}\r\n","import { reducerBuilder } from '../_helpers/reducerBuilder'\r\nimport { apiConstants } from '../_constants'\r\n\r\nconst apiReducers = { }\r\nObject.keys(apiConstants).forEach(apiType => {\r\n  apiReducers[apiType.toLowerCase()] = reducerBuilder(apiConstants[apiType])\r\n})\r\n\r\n\r\nexport default apiReducers\r\n","import { gameConstants } from '../_constants'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  items: []\r\n}\r\n\r\nexport function game (state = initialState, action) {\r\n  switch (action.type) {\r\n      case gameConstants.CREATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            creating: true\r\n          }\r\n      case gameConstants.CREATE_SUCCESS:\r\n          return {...state,\r\n            creating: false,\r\n            items: {...state.items, ...action.data }\r\n          }\r\n      case gameConstants.CREATE_FAILURE:\r\n          return {\r\n            error: action.error\r\n          }\r\n\r\n      case gameConstants.UPDATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            updating: true\r\n          }\r\n      case gameConstants.UPDATE_SUCCESS:\r\n          let index = state.items.findIndex( item => item.id === action.data.id )\r\n          let copy = [...state.items.slice(0, index), action.data, ...state.items.slice(index + 1)]\r\n          return {...state, updating: false,\r\n            items: copy\r\n          }\r\n      case gameConstants.UPDATE_FAILURE:\r\n          return {...state, updating: false}\r\n\r\n      case gameConstants.GETALL_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case gameConstants.GETALL_SUCCESS:\r\n          return {...state,\r\n              loading: false,\r\n              items: {...state.items, ...action.data }\r\n          };\r\n      case gameConstants.GETALL_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n      case gameConstants.GETBYID_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case gameConstants.GETBYID_SUCCESS:\r\n          return {...state,\r\n              items: {...state.items, ...action.data },\r\n              loading: false\r\n          };\r\n      case gameConstants.GETBYID_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n        case gameConstants.FIND_REQUEST:\r\n            return {...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case gameConstants.FIND_SUCCESS:\r\n            return {...state,\r\n                items:{...state.items, ...action.data },\r\n                loading: false\r\n            };\r\n        case gameConstants.FIND_FAILURE:\r\n            return {...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n      case gameConstants.DELETE_REQUEST:\r\n          // add 'deleting:true' property to character being deleted\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item =>\r\n                  item.id === action.id\r\n                      ? { ...item, deleting: true }\r\n                      : item\r\n              )\r\n          };\r\n      case gameConstants.DELETE_SUCCESS:\r\n          // remove deleted character from state\r\n          return {...state,\r\n              items: state.items.filter(item => item.id !== action.id)\r\n          }\r\n      case gameConstants.DELETE_FAILURE:\r\n          // remove 'deleting:true' property and add 'deleteError:[error]' property to character\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item => {\r\n                  if (item.id === action.id) {\r\n                      // make copy of character without 'deleting:true' property\r\n                      const { deleting, ...copy } = item;\r\n                      // return copy of character with 'deleteError:[error]' property\r\n                      return { ...copy, deleteError: action.error };\r\n                  }\r\n                  return item;\r\n              })\r\n          };\r\n      default:\r\n        return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { authentication } from './authentication.reducer'\r\nimport { registration } from './registration.reducer'\r\nimport { users } from './users.reducer'\r\nimport { alert } from './alert.reducer'\r\nimport { header } from './header.reducer'\r\nimport { music } from './music.reducer'\r\nimport apiReducers from './api.reducers'\r\nimport { game } from './apiGame.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    registration,\r\n    users,\r\n    alert,\r\n    header,\r\n    music,\r\n    game,\r\n    ...apiReducers,\r\n})\r\n\r\nexport default rootReducer\r\n","import { userConstants } from '../_constants'\r\n\r\nexport function registration (state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.REGISTER_REQUEST:\r\n            return {registering: true}\r\n        case userConstants.REGISTER_SUCCESS:\r\n            return {}\r\n        case userConstants.REGISTER_FAILURE:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import { userConstants } from '../_constants';\r\n\r\nexport function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.UPDATE_REQUEST:\r\n            return {updating: true}\r\n        case userConstants.UPDATE_SUCCESS:\r\n            return {}\r\n        case userConstants.UPDATE_FAILURE:\r\n            return {}\r\n        case userConstants.GETALL_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETALL_SUCCESS:\r\n            return {...state,\r\n                items: action.users\r\n            };\r\n        case userConstants.GETALL_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.GETBYID_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETBYID_SUCCESS:\r\n            return {...state,\r\n                items: action.user\r\n            };\r\n        case userConstants.GETBYID_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.FIND_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.FIND_SUCCESS:\r\n            return {...state,\r\n                items: action.user\r\n            };\r\n        case userConstants.FIND_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.DELETE_REQUEST:\r\n            // add 'deleting:true' property to user being deleted\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user =>\r\n                    user.id === action.id\r\n                        ? { ...user, deleting: true }\r\n                        : user\r\n                )\r\n            };\r\n        case userConstants.DELETE_SUCCESS:\r\n            // remove deleted user from state\r\n            return {...state,\r\n                items: state.items.filter(user => user.id !== action.id)\r\n            };\r\n        case userConstants.DELETE_FAILURE:\r\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user => {\r\n                    if (user.id === action.id) {\r\n                        // make copy of user without 'deleting:true' property\r\n                        const { deleting, ...userCopy } = user;\r\n                        // return copy of user with 'deleteError:[error]' property\r\n                        return { ...userCopy, deleteError: action.error };\r\n                    }\r\n\r\n                    return user;\r\n                })\r\n            };\r\n        case userConstants.GETROLES_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETROLES_SUCCESS:\r\n            return {...state,\r\n                roles: action.users.roles\r\n            };\r\n        case userConstants.GETROLES_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { alertConstants} from '../_constants'\r\n\r\nexport function alert (state = {}, action) {\r\n    switch(action.type) {\r\n        case alertConstants.SUCCESS:\r\n            return {\r\n                type: 'alert-succes',\r\n                message: action.message\r\n            }\r\n        case alertConstants.ERROR:\r\n            return {\r\n                type: 'alert-danger',\r\n                message: action.message\r\n            }\r\n        case alertConstants.CLEAR:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { headerConstants } from '../_constants'\r\n\r\nexport function header (state = {state: headerConstants.STATES.NORMAL, title: \"\", subtitle: \"\"}, action) {\r\n    switch(action.type) {\r\n        case headerConstants.SET_TITLE:\r\n\t\t\treturn {...state, title: action.newTitle};\r\n\r\n\t\tcase headerConstants.SET_SUBTITLE:\r\n\t\t\treturn {...state, subtitle: action.newSubtitle};\r\n\r\n\t\tcase headerConstants.SET_ALL:\r\n\t\t\treturn {...state, title: action.newTitle, subtitle: action.newSubtitle};\r\n\r\n\t\tcase headerConstants.CLEAR_TITLE:\r\n\t\t\treturn {...state, title: \"\"};\r\n\r\n\t\tcase headerConstants.CLEAR_SUBTITLE:\r\n\t\t\treturn {...state, subtitle: \"\"};\r\n\r\n\t\tcase headerConstants.CLEAR_ALL:\r\n\t\t\treturn {...state, title: \"\", subtitle: \"\"};\r\n\r\n\t\tcase headerConstants.SET_STATE:\r\n\t\t\treturn {...state, state: action.newState};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n    }\r\n}\r\n","import { musicConstants } from '../_constants/music.constants'\r\n\r\nexport function music ( state = {url: '', volume: 15}, action ) {\r\n\tswitch( action.type ) {\r\n\t\tcase musicConstants.SET:\r\n\t\t\treturn {...state, url: action.url}\r\n\t\tcase musicConstants.VOLUME:\r\n\t\t\treturn {...state, volume: action.volume}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from '../_reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n          thunkMiddleware,\r\n          loggerMiddleware\r\n      )\r\n    )\r\n)\r\n\r\nexport { store }\r\n","export function authHeader () {\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n    return user && user.jwt ? {\r\n        'Authorization': 'Bearer ' + user.jwt\r\n    } : {}\r\n}\r\n","function numberToMoney(n) {\r\n  var string = n.toString(),\r\n    units,\r\n    tens,\r\n    hundreds,\r\n    chunks,\r\n    chunk,\r\n    ints,\r\n    i,\r\n    word,\r\n    words;\r\n\r\n  /* Is number zero? */\r\n  if (parseInt(string) === 0) {\r\n    return \"zero\";\r\n  }\r\n\r\n  /* Array of units as words */\r\n  units = [\r\n    \"\",\r\n    \"um\",\r\n    \"dois\",\r\n    \"três\",\r\n    \"quatro\",\r\n    \"cinco\",\r\n    \"seis\",\r\n    \"sete\",\r\n    \"oito\",\r\n    \"nove\",\r\n    \"dez\",\r\n    \"onze\",\r\n    \"doze\",\r\n    \"treze\",\r\n    \"quatorze\",\r\n    \"quize\",\r\n    \"dezesseis\",\r\n    \"dezessete\",\r\n    \"dezoito\",\r\n    \"dezenove\",\r\n  ];\r\n\r\n  /* Array of tens as words */\r\n  tens = [\r\n    \"\",\r\n    \"\",\r\n    \"vinte\",\r\n    \"trinta\",\r\n    \"quarenta\",\r\n    \"cinquenta\",\r\n    \"sessenta\",\r\n    \"setenta\",\r\n    \"oitenta\",\r\n    \"noventa\",\r\n  ];\r\n\r\n  /* Array of scales as words */\r\n  hundreds = [\r\n    \"\",\r\n    \"cento\",\r\n    \"duzentos\",\r\n    \"trezentos\",\r\n    \"quatrocentos\",\r\n    \"quinhentos\",\r\n    \"seissentos\",\r\n    \"setecentos\",\r\n    \"oitocentos\",\r\n    \"novecentos\",\r\n  ];\r\n\r\n  chunks = string.split(\".\");\r\n\r\n  /* Stringify each integer in each chunk */\r\n  words = [];\r\n  for (i = 0; i < chunks.length; i++) {\r\n    chunk = parseInt(chunks[i]);\r\n\r\n    if (chunk) {\r\n      if (i === 1) words.push(\"e\");\r\n\r\n      if (chunk === 100) {\r\n        words.push(\"cem reais\");\r\n        continue;\r\n      }\r\n\r\n      /* Split chunk into array of individual integers */\r\n      ints = chunks[i].split(\"\").reverse().map(parseFloat);\r\n\r\n      /* If tens integer is 1, i.e. 10, then add 10 to units integer */\r\n      if (ints[1] === 1) {\r\n        ints[0] += 10;\r\n      }\r\n\r\n      if ((word = hundreds[ints[2]])) {\r\n        words.push(word + \" e\");\r\n      }\r\n\r\n      /* Add tens word if array item exists */\r\n      if ((word = tens[ints[1]])) {\r\n        words.push(word + \" e\");\r\n      }\r\n\r\n      /* Add unit word if array item exists */\r\n      if ((word = units[ints[0]])) {\r\n        words.push(word);\r\n      } else {\r\n        words[words.length - 1] = words[words.length - 1].replace(\" e\", \"\");\r\n      }\r\n\r\n      if (i === 0) {\r\n        if (chunk > 1) words.push(\"reais\");\r\n        else words.push(\"real\");\r\n      } else {\r\n        if (chunk > 1) words.push(\"centavos\");\r\n        else words.push(\"centavo\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return words.join(\" \");\r\n}\r\n\r\nfunction goRound(value, max) {\r\n  return value >= 0 ? value % max : max - (Math.abs(value) % max);\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex,\r\n    shuffledArray = [...array];\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = shuffledArray[currentIndex];\r\n    shuffledArray[currentIndex] = shuffledArray[randomIndex];\r\n    shuffledArray[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return shuffledArray;\r\n}\r\n\r\nfunction splitArrayIntoChunksOfLen(arr, len) {\r\n  var chunks = [],\r\n    i = 0,\r\n    n = arr.length;\r\n  while (i < n) {\r\n    chunks.push(arr.slice(i, (i += len)));\r\n  }\r\n  return chunks;\r\n}\r\n\r\nfunction zeroFill(s, size) {\r\n  while (s.length < size) {\r\n    s = \"0\" + s;\r\n  }\r\n  return s;\r\n}\r\n\r\nfunction preventSingleWordBreak(sentence) {\r\n  let words = sentence.split(\" \");\r\n\r\n  return (\r\n    words.slice(0, words.length - 3).join(\" \") +\r\n    \" \" +\r\n    words.slice(words.length - 3).join(\"\\u00a0\")\r\n  );\r\n}\r\n\r\nexport {\r\n  numberToMoney,\r\n  zeroFill,\r\n  splitArrayIntoChunksOfLen,\r\n  shuffle,\r\n  goRound,\r\n  preventSingleWordBreak,\r\n};\r\n","import axios from 'axios'\r\nimport { authHeader } from '../_helpers'\r\nimport apiValues from '../apiValues'\r\n\r\nconst baseURL = 'https://learning-tool-api.herokuapp.com'\r\nconst api  = axios.create({ baseURL })\r\n\r\nconst getAllBuilder = (routeName) => function getAll() {\r\n    // pegar rota\r\n    return api(\r\n      {\r\n        method: 'get',\r\n        url: `/${routeName.toLowerCase().replace(/_/g, '-')}`,\r\n        headers: authHeader()\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nconst getByIdBuilder = (routeName) => function getById(id){\r\n    return api(\r\n        {\r\n          method: 'get',\r\n          url: `/${routeName.toLowerCase().replace(/_/g, '-')}/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nconst findBuilder = (routeName) => function find(data) {\r\n  return api(\r\n    {\r\n      method: 'get',\r\n      url: `/${routeName.toLowerCase().replace(/_/g, '-')}`,\r\n      headers: authHeader(),\r\n      query: data\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\nconst createBuilder = (routeName) => function create(data) {\r\n    return api(\r\n      {\r\n        method: 'post',\r\n        url: `/${routeName.toLowerCase().replace(/_/g, '-')}`,\r\n        headers: authHeader(),\r\n        data: data\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nconst updateBuilder = (routeName) => function update(data){\r\n    return api(\r\n        {\r\n          method: 'put',\r\n          url: `/${routeName.toLowerCase().replace(/_/g, '-')}/${data.id}`,\r\n          headers:  {\r\n            ...authHeader(),\r\n          'Content-Type': 'application/json'\r\n          },\r\n          data: data\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nconst deleteBuilder = (routeName) => function _delete(id){\r\n    return api(\r\n        {\r\n          method: 'delete',\r\n          url: `/${routeName.toLowerCase().replace(/_/g, '-')}/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  if(response.status !== 200){\r\n      if(response.status === 401){\r\n          window.location.reload()\r\n      }\r\n      return Promise.reject(response.statusText)\r\n  }\r\n\r\n  return response.data\r\n}\r\n\r\nlet apiServices = {}\r\n\r\napiValues.map( apiDataType =>\r\n  apiServices[`${apiDataType}`] = {\r\n    getAll:  getAllBuilder(apiDataType),\r\n    getById: getByIdBuilder(apiDataType),\r\n    find:  findBuilder(apiDataType),\r\n    create:  createBuilder(apiDataType),\r\n    update:  updateBuilder(apiDataType),\r\n    delete:  deleteBuilder(apiDataType)\r\n})\r\n\r\nexport { apiServices, baseURL }\r\nexport default api\r\n","import { authHeader } from '../_helpers'\r\nimport api from './api.services'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    getById,\r\n    find,\r\n    update,\r\n    delete: _delete,\r\n    getRoles\r\n}\r\n\r\nfunction login(email, password) {\r\n    return api(\r\n        {\r\n            method: 'post',\r\n            url: '/auth/local',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: {\r\n                identifier: email,\r\n                password: password\r\n            }\r\n        })\r\n        .then(response => {\r\n          if(response.data.jwt){\r\n            localStorage.setItem('user',JSON.stringify(response.data))\r\n          }\r\n            \r\n          return response.data\r\n        })\r\n}\r\n\r\nfunction logout(){\r\n    localStorage.removeItem('user')\r\n}\r\n\r\nfunction getAll() {\r\n    // pegar rota\r\n    return api(\r\n      {\r\n        method: 'get',\r\n        url: '/users',\r\n        headers: authHeader()\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nfunction getById(id){\r\n    return api(\r\n        {\r\n          method: 'get',\r\n          url: `/users/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction find(data) {\r\n  return api(\r\n    {\r\n      method: 'get',\r\n      url: '/users',\r\n      headers: authHeader(),\r\n      query: data\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction register(user) {\r\n    return api(\r\n        {\r\n          method: 'post',\r\n          url: '/auth/local/register',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n          data: user,\r\n        })\r\n        .then(response => {\r\n          if(response.data.jwt){\r\n            localStorage.setItem('user',JSON.stringify(response.data))\r\n          }\r\n            \r\n          return response.data\r\n        })\r\n}\r\n\r\nfunction update(user){\r\n    // checar rotausers\r\n    return api(\r\n        {\r\n          method: 'put',\r\n          url: `/users/${user.id}`,\r\n          headers:  {\r\n            ...authHeader(),\r\n          'Content-Type': 'application/json'\r\n          },\r\n          data: user\r\n        })\r\n        .then(response => {\r\n          console.log(response)\r\n        })\r\n}\r\n\r\nfunction _delete(id){\r\n    return api(\r\n        {\r\n          method: 'delete',\r\n          url: `/users/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getRoles(){\r\n  return api(\r\n    {\r\n      method: 'get',\r\n      url: '/users-permissions/roles',\r\n      headers: authHeader()\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response) {\r\n\r\n  if(response.status !== 200){\r\n      if(response.status === 401){\r\n          logout()\r\n          window.location.reload()\r\n      }\r\n\r\n      return Promise.reject(response.statusText)\r\n  }\r\n\r\n  return response.data\r\n}\r\n\r\n","import axios from 'axios'\r\nimport { authHeader } from '../_helpers'\r\n\r\nconst baseURL = 'https://learning-tool-api.herokuapp.com'\r\nconst api  = axios.create({ baseURL })\r\n\r\nconst getAll = (routeName) => {\r\n    // pegar rota\r\n    return api(\r\n      {\r\n        method: 'get',\r\n        url: `/game/${routeName}`,\r\n        headers: authHeader()\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nconst getById = (routeName,id) => {\r\n    return api(\r\n        {\r\n          method: 'get',\r\n          url: `/game/${routeName}/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nconst find = (routeName,data) => {\r\n  return api(\r\n    {\r\n      method: 'get',\r\n      url: `/game/${routeName}`,\r\n      headers: authHeader(),\r\n      params: data\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\nconst create = (routeName,data) => {\r\n    return api(\r\n      {\r\n        method: 'post',\r\n        url: `/game/${routeName}`,\r\n        headers: authHeader(),\r\n        params: data\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nconst update = (routeName,data) => {\r\n    return api(\r\n        {\r\n          method: 'put',\r\n          url: `/game/${routeName}/${data.id}`,\r\n          headers:  {\r\n            ...authHeader(),\r\n          'Content-Type': 'application/json'\r\n          },\r\n          params: data\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nconst _delete = (routeName,id) => {\r\n    return api(\r\n        {\r\n          method: 'delete',\r\n          url: `/game/${routeName}/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  if(response.status !== 200){\r\n      if(response.status === 401){\r\n          window.location.reload()\r\n      }\r\n      return Promise.reject(response.statusText)\r\n  }\r\n\r\n  return response.data\r\n}\r\n\r\nconst apiGameServices = {\r\n  getAll:   getAll,\r\n  getById:  getById,\r\n  find:     find,\r\n  create:   create,\r\n  update:   update,\r\n  delete:   _delete\r\n}\r\n\r\nexport { apiGameServices, baseURL }\r\nexport default api\r\n","import { userConstants } from '../_constants'\r\nimport { userService } from '../_services'\r\nimport { alertActions } from './'\r\n\r\nexport const userActions = {\r\n    getAll,\r\n    getById,\r\n    delete: _delete,\r\n    getRoles\r\n}\r\n\r\nexport const login = (email, password) => dispatch => {\r\n    dispatch(request({email}))\r\n\r\n    return userService.login(email, password)\r\n        .then(\r\n            user => {\r\n                dispatch(success(user))\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject(error.response.data.data[0].messages[0].message)\r\n            }\r\n        )\r\n\r\n    function request(user) { return {type: userConstants.LOGIN_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.LOGIN_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.LOGIN_FAILURE, error} }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    userService.logout()\r\n    dispatch({type: userConstants.LOGOUT})                        \r\n}\r\n\r\nexport const register = (user) => dispatch => {\r\n    dispatch(request(user))\r\n\r\n    return userService.register(user)\r\n        .then(\r\n            user => {\r\n                dispatch(success())\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject(error.response.data.data[0].messages[0].message)\r\n            }\r\n        )\r\n    function request(user) { return {type: userConstants.REGISTER_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.REGISTER_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.REGISTER_FAILURE, error} }\r\n}\r\n\r\nexport const update = (user) => dispatch => {\r\n    dispatch(request(user))\r\n\r\n    return userService.update(user)\r\n        .then(\r\n            user => {\r\n                dispatch(success())\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject()\r\n            }\r\n        )\r\n\r\n    function request(user) { return {type: userConstants.UPDATE_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.UPDATE_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.UPDATE_FAILURE, error} }\r\n}\r\n\r\nfunction getAll(){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        const r = userService.getAll()\r\n            r.then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETALL_REQUEST} }\r\n    function success(users) { return {type: userConstants.GETALL_SUCCESS, users} }\r\n    function failure(error) { return {type: userConstants.GETALL_FAILURE, error} }\r\n}\r\n\r\nfunction getById(id){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        userService.getById(id)\r\n            .then(\r\n                user => dispatch(success(user)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETBYID_REQUEST} }\r\n    function success(user) { return {type: userConstants.GETBYID_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.GETBYID_FAILURE, error} }\r\n}\r\n\r\nfunction _delete(id){\r\n    return dispatch => {\r\n        dispatch(request(id))\r\n\r\n        userService.delete(id)\r\n            .then(\r\n                user => dispatch(success(id)),\r\n                error => dispatch(failure(id, error.toString()))\r\n            )\r\n    }\r\n\r\n    function request(id) { return {type: userConstants.DELETE_REQUEST, id} }\r\n    function success(id) { return {type: userConstants.DELETE_SUCCESS, id} }\r\n    function failure(id, error) { return {type: userConstants.DELETE_FAILURE, id, error} }\r\n}\r\n\r\nfunction getRoles(){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        const r = userService.getRoles()\r\n            r.then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETROLES_REQUEST} }\r\n    function success(users) { return {type: userConstants.GETROLES_SUCCESS, users} }\r\n    function failure(error) { return {type: userConstants.GETROLES_FAILURE, error} }\r\n}","import { headerConstants } from '../_constants'\r\n\r\nconst setTitle = (title) => {return {type: headerConstants.SET_TITLE, newTitle: title}};\r\nconst setSubtitle = (subtitle) => {return {type: headerConstants.SET_SUBTITLE, newSubtitle: subtitle}};\r\nconst setAll = (title, subtitle) => {return {type: headerConstants.SET_ALL, newTitle: title, newSubtitle: subtitle}};\r\n\r\nconst clearTitle = () => {return {type: headerConstants.CLEAR_TITLE}};\r\nconst clearSubtitle = () => {return {type: headerConstants.CLEAR_SUBTITLE}};\r\nconst clearAll = () => {return {type: headerConstants.CLEAR_ALL}};\r\n\r\nconst setState = (state) => {return {type: headerConstants.SET_STATE, newState: state}};\r\n\r\nexport const headerActions = {\r\n\tsetTitle,\r\n\tsetSubtitle,\r\n\tsetAll,\r\n\tclearTitle,\r\n\tclearSubtitle,\r\n\tclearAll,\r\n\tsetState\r\n}","import { gameConstants } from '../_constants'\r\nimport { apiGameServices } from '../_services'\r\n\r\nfunction requester(service, request, success, failure, route, payload){\r\n  return dispatch => {\r\n      dispatch(request(payload))\r\n\r\n      return service(route, payload)\r\n        .then(\r\n            data => {\r\n              dispatch(success(data))\r\n              return Promise.resolve()\r\n              },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n\r\n                try {\r\n                  return Promise.reject(error.response.data.data[0].messages[0].message)\r\n                } catch{\r\n                  console.log(error)\r\n                }\r\n            }\r\n          )\r\n  }\r\n}\r\n\r\n//Could use some code refactory\r\nconst getAllConstructor = (service) => {\r\n  return function(route, ){\r\n    return requester(service.getAll, request, success, failure, route)\r\n\r\n    function request() { return { type: gameConstants.GETALL_REQUEST, info: route }}\r\n    function success(data) { return {type: gameConstants.GETALL_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.GETALL_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst getByIdConstructor = (service) => {\r\n  return function(route, id){\r\n    return requester(service.getById, request, success, failure, route, id)\r\n\r\n    function request() { return {type: gameConstants.GETBYID_REQUEST, info: route} }\r\n    function success(data) { return {type: gameConstants.GETBYID_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.GETBYID_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst findConstructor = (service) => {\r\n  return function(route, findData){\r\n    return requester(service.find, request, success, failure, route, findData)\r\n\r\n    function request() { return {type: gameConstants.FIND_REQUEST, info: route} }\r\n    function success(data) { return {type: gameConstants.FIND_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.FIND_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst createConstructor = (service) => {\r\n  return function(route, createData){\r\n    return requester(service.create, request, success, failure, route, createData)\r\n\r\n    function request(data) { return {type: gameConstants.CREATE_REQUEST, info: route, game: data}}\r\n    function success(data) { return {type: gameConstants.CREATE_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.CREATE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst updateConstructor = (service) => {\r\n  return function(route, updateData){\r\n      return requester(service.update, request, success, failure, route, updateData)\r\n\r\n      function request(data) { return {type: gameConstants.UPDATE_REQUEST, info: route, game: data} }\r\n      function success(data) { return {type: gameConstants.UPDATE_SUCCESS, info: route, data} }\r\n      function failure(error) { return {type: gameConstants.UPDATE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst deleteConstructor = (service) => {\r\n  return function(route, deleteData){\r\n    return requester(service.delete, request, success, failure, route, deleteData)\r\n\r\n    function request(data) { return {type: gameConstants.DELETE_REQUEST, info: route, game: data} }\r\n    function success(data) { return {type: gameConstants.DELETE_SUCCESS, info: route, id: data.id} }\r\n    function failure(error) { return {type: gameConstants.DELETE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nlet gameActions = {\r\n  getAll:  getAllConstructor(apiGameServices),\r\n  getById: getByIdConstructor(apiGameServices),\r\n  find: findConstructor(apiGameServices),\r\n  create:  createConstructor(apiGameServices),\r\n  update:  updateConstructor(apiGameServices),\r\n  delete:  deleteConstructor(apiGameServices)\r\n}\r\n\r\n\r\nexport { gameActions }\r\n","import { apiConstants } from '../_constants'\r\nimport { apiServices } from '../_services'\r\nimport { gameActions } from './apiGame.actions'\r\n\r\nfunction requester(service, request, success, failure, payload){\r\n  return dispatch => {\r\n      dispatch(request(payload))\r\n\r\n      return service(payload)\r\n        .then(\r\n            data => {\r\n              dispatch(success(data))\r\n              return Promise.resolve()\r\n              },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n\r\n                try {\r\n                  return Promise.reject(error.response.data.data[0].messages[0].message)\r\n                } catch{\r\n                  console.log(error)\r\n                }\r\n            }\r\n          )\r\n  }\r\n}\r\n\r\n//Could use some code refactory\r\nconst getAllConstructor = (service, apiDataType) => {\r\n  return function(){\r\n    return requester(service.getAll, request, success, failure)\r\n\r\n    function request() { return { type: apiConstants[apiDataType].GETALL_REQUEST }}\r\n    function success(data) { return {type: apiConstants[apiDataType].GETALL_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].GETALL_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst getByIdConstructor = (service, apiDataType) => {\r\n  return function(id){\r\n    return requester(service.getById, request, success, failure, id)\r\n\r\n    function request() { return {type: apiConstants[apiDataType].GETBYID_REQUEST} }\r\n    function success(data) { return {type: apiConstants[apiDataType].GETBYID_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].GETBYID_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst findConstructor = (service, apiDataType) => {\r\n  return function(findData){\r\n    return requester(service.find, request, success, failure, findData)\r\n\r\n    function request() { return {type: apiConstants[apiDataType].FIND_REQUEST} }\r\n    function success(data) { return {type: apiConstants[apiDataType].FIND_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].FIND_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst createConstructor = (service, apiDataType) => {\r\n  return function(createData){\r\n    return requester(service.create, request, success, failure, createData)\r\n\r\n    function request(data) { return {type: apiConstants[apiDataType].CREATE_REQUEST, [apiDataType]: data}}\r\n    function success(data) { return {type: apiConstants[apiDataType].CREATE_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].CREATE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst updateConstructor = (service, apiDataType) => {\r\n  return function(updateData){\r\n      return requester(service.update, request, success, failure, updateData)\r\n\r\n      function request(data) { return {type: apiConstants[apiDataType].UPDATE_REQUEST, [apiDataType]: data} }\r\n      function success(data) { return {type: apiConstants[apiDataType].UPDATE_SUCCESS, data} }\r\n      function failure(error) { return {type: apiConstants[apiDataType].UPDATE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst deleteConstructor = (service, apiDataType) => {\r\n  return function(deleteData){\r\n    return requester(service.delete, request, success, failure, deleteData)\r\n\r\n    function request(data) { return {type: apiConstants[apiDataType].DELETE_REQUEST, [apiDataType]: data} }\r\n    function success(data) { return {type: apiConstants[apiDataType].DELETE_SUCCESS, id: data.id} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].DELETE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nlet apiActions = {}\r\nObject.keys(apiConstants).forEach( (apiDataType) => {\r\n  apiActions[`${apiDataType.toLowerCase()}Actions`] = {\r\n    getAll:  getAllConstructor(apiServices[apiDataType], apiDataType),\r\n    getById: getByIdConstructor(apiServices[apiDataType], apiDataType),\r\n    find: findConstructor(apiServices[apiDataType],\r\n    apiDataType),\r\n    create:  createConstructor(apiServices[apiDataType], apiDataType),\r\n    update:  updateConstructor(apiServices[apiDataType], apiDataType),\r\n    delete:  deleteConstructor(apiServices[apiDataType], apiDataType)\r\n  }\r\n})\r\n\r\nexport { apiActions, gameActions }\r\n","import { musicConstants } from '../_constants'\r\n\r\nconst set = (music) => { return { type: musicConstants.SET, url: music } }\r\nconst volume = v => ({type: musicConstants.VOLUME, volume: v})\r\n\r\nexport const musicActions =\r\n{\r\n  set,\r\n  volume\r\n}\r\n","import React from \"react\";\r\nimport { avatar, home, notifications, settings } from \"../../img\";\r\nimport { logout } from \"../../_actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst UserHeader = ({ pageInfo }) => {\r\n  let headerInfo = useSelector((state) => state.header);\r\n  const [state, setState] = React.useState({ view: \"default\" });\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const clickProfile = () => {\r\n    setState({ ...state, view: \"profile\" });\r\n    alert.show(\"Vc achou onde faz para abrir o seu perfil! \\n\\n Ending 3/15\");\r\n  };\r\n\r\n  const clickHome = () => {\r\n    setState({ ...state, view: \"home\" });\r\n    alert.show(\"Vc achou onde faz para voltar ao início! \\n\\n Ending 1/15\");\r\n  };\r\n\r\n  const clickNotif = () => {\r\n    setState({ ...state, view: \"notif\" });\r\n    alert.show(\r\n      \"Vc achou onde faz para ver suas notificações! \\n\\n Ending 7/15\"\r\n    );\r\n  };\r\n\r\n  const clickSettings = () => {\r\n    setState({ ...state, view: \"settings\" });\r\n    alert.show(\r\n      \"Vc achou onde faz para abrir suas configurações! \\n\\n Ending 8/15\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header id=\"app-header\" className={headerInfo.state.toLowerCase()}>\r\n      <div className=\"group-btns\" id=\"left-btns\">\r\n        <div className=\"header-btn\" id=\"home-btn\" onClick={clickHome}>\r\n          <img src={home} alt=\"Home\"></img>\r\n        </div>\r\n        <div className=\"header-btn\" id=\"notif-btn\" onClick={clickNotif}>\r\n          <img src={notifications} alt=\"Notifications\"></img>\r\n        </div>\r\n        <div className=\"header-btn\" id=\"settings-btn\" onClick={clickSettings}>\r\n          <img src={settings} alt=\"Settings\"></img>\r\n        </div>\r\n      </div>\r\n      <div id=\"pageTitle\">\r\n        <div id=\"mainTitle\">{headerInfo.title}</div>\r\n        <div id=\"subTitle\">{headerInfo.subtitle}</div>\r\n      </div>\r\n      <div className=\"group-btns\" id=\"right-btns\">\r\n        <div id=\"profilePic\" onClick={clickProfile}>\r\n          <img src={avatar} alt=\"Profile_Picture\" />\r\n        </div>\r\n        <div\r\n          className=\"header-btn\"\r\n          id=\"logout-btn\"\r\n          onClick={() => {\r\n            dispatch(logout());\r\n          }}\r\n        >\r\n          Logout\r\n        </div>\r\n      </div>\r\n      {/* style provisório para teste*/}\r\n      {state.view === \"settings\" && (\r\n        <div\r\n          className=\"ConfigPopUp\"\r\n          style={{\r\n            position: \"absolute\",\r\n            backgroundColor: \"#ddddee\",\r\n            top: 100,\r\n            margin: \"0 auto\",\r\n            width: \"50%\",\r\n            height: 500,\r\n          }}\r\n        >\r\n          Configurações\r\n          <Button>Config 1</Button>\r\n          <Button>Config 2</Button>\r\n          <Button>Config 3</Button>\r\n          <Button onClick={() => setState({ ...state, view: \"default\" })}>\r\n            X\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n  /**/\r\n};\r\n\r\nexport default UserHeader;\r\n","import React from 'react'\r\n\r\nconst DefaultHeader = ({pageInfo}) => {\r\n\r\n\treturn (\r\n\t\t<header id=\"app-header\" className=\"normal\">\r\n\t\t\t<div className=\"group-btns\">\r\n\t\t\t\t<div className=\"header-btn\">Home</div>\r\n\t\t\t\t<div className=\"header-btn\">About</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default DefaultHeader","import './index.scss'\r\nimport React from 'react'\r\nimport UserHeader from '../UserHeader'\r\nimport DefaultHeader from '../DefaultHeader'\r\n\r\nconst AppHeader = ({props}) => {\r\n\treturn props.isLogged ? <UserHeader pageInfo={props} /> : <DefaultHeader />\r\n}\r\n\r\nexport default AppHeader","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './index.scss'\r\n\r\nconst Home = () => {\r\n  const isLogged = useSelector(state => state.authentication.loggedIn)\r\n\r\n  if( isLogged ) return (<Redirect to={'/userspace'}/>)\r\n  else return(\r\n    <div id=\"message\">\r\n      Aqui é a home. Nada muito interessante aqui. Se quiser fazer login:\r\n      <Link to='/login' className=\"btn-normal\">Login</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/pwu.908352a7.mp3\";","import React from 'react'\r\nimport styles from './index.module.scss'\r\nimport sound from '../../sounds/pwu.mp3'\r\n\r\nconst BUTTON_DIRECTIONS = Object.freeze({\r\n  LEFT: \"left\",\r\n  CENTER: \"center\",\r\n  RIGHT: \"right\"\r\n});\r\n\r\nconst COLOR_SCHEMES = Object.freeze({\r\n  COR_1: \"cor1\",\r\n  COR_2: \"cor2\",\r\n  COR_3: \"cor3\",\r\n  COR_4: \"cor4\",\r\n});\r\n\r\nconst ButtonConfigs = Object.freeze({\r\n  BUTTON_DIRECTIONS,\r\n  COLOR_SCHEMES\r\n});\r\n\r\nconst Button = ({children, blink, direction, colorScheme, onClick, stayAsPill, showArrow, ...props}) => {\r\n\r\n  const sfx = new Audio(sound);\r\n\r\n  return(\r\n    <button\r\n      className={\r\n        `${styles.btn}\\\r\n        ${blink? styles.blink:''}\\\r\n        ${stayAsPill ? styles.stayAsPill:''}\\\r\n        ${styles[direction]??''}\\\r\n        ${styles[colorScheme]??''}\\\r\n        ${showArrow?styles.showArrow:''}`\r\n      }\r\n      onClick={onClick}\r\n      {...props}\r\n      onPointerEnter={() => sfx.play()}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n\r\n// Purposefully hiding children because it makes no sense in this context\r\n// It makes more obvious that setting label is through a prop and should be text\r\n\r\nconst Iniciar = ({label, onClick, children, ...props}) => <Button\r\n  blink\r\n  colorScheme={COLOR_SCHEMES.COR_1}\r\n  direction={BUTTON_DIRECTIONS.RIGHT}\r\n  onClick={onClick}\r\n  showArrow\r\n  {...props}\r\n>\r\n  {label??\"Iniciar\"}\r\n</Button>;\r\n\r\nconst Voltar = ({label, onClick, children, ...props}) => <Button\r\n  blink\r\n  colorScheme={COLOR_SCHEMES.COR_2}\r\n  direction={BUTTON_DIRECTIONS.LEFT}\r\n  onClick={onClick}\r\n  showArrow\r\n  {...props}\r\n>\r\n  {label??\"Voltar\"}\r\n</Button>;\r\n\r\nconst PularTutorial = ({label, onClick, children, ...props}) => <Button\r\n  blink\r\n  colorScheme={COLOR_SCHEMES.COR_2}\r\n  direction={BUTTON_DIRECTIONS.RIGHT}\r\n  onClick={onClick}\r\n  showArrow\r\n  stayAsPill\r\n  {...props}\r\n>\r\n  {label??\"Pular Tutorial\"}\r\n</Button>;\r\n\r\nexport {Button, ButtonConfigs, Iniciar, Voltar, PularTutorial};\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\nimport {Iniciar, Voltar} from '../Button'\r\n\r\nconst Init = ({\r\n  icon,\r\n  name,\r\n  description,\r\n  nameTranslate = \"Name\",\r\n  descriptionTranslate = \"Description\",\r\n  onStart,\r\n  onBack,\r\n  ready,\r\n}) => {\r\n  return (\r\n    <div className=\"main-init-wrapper\">\r\n      <div className=\"inner-content\">\r\n        <div name=\"infos\">\r\n          {icon ? (\r\n            <img className=\"classImage\" src={icon} alt=\"\" />\r\n          ) : (\r\n            <div style={{ height: \"25vh\" }}></div>\r\n          )}\r\n\r\n          <h1 className=\"margin-half-top type-l type-display type-center\">\r\n            {name}\r\n          </h1>\r\n          <h1 className=\"type-m type-display type-center subtitle\">\r\n            {nameTranslate}\r\n          </h1>\r\n\r\n          <h2 className=\"margin-top type-s type-center description\">\r\n            {description}\r\n          </h2>\r\n          <h2 className=\"type-s type-center subdescription\">\r\n            {descriptionTranslate}\r\n          </h2>\r\n        </div>\r\n\r\n        <div id=\"btns\">\r\n          {onBack && (\r\n            <Voltar onClick={onBack}/>\r\n          )}\r\n          {ready ?\r\n            (onStart &&\r\n              <Iniciar onClick={onStart} />\r\n            )\r\n            :\r\n            <span>\r\n              LOADING <CircularProgress />\r\n            </span>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Init;\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst Result = ({gameEndState}) => {\r\n    return (\r\n        <div>\r\n            {/* Não era pra a gente precisar checar se a string é null, pq era pra isso\r\n            só aparecer quando já tivesse um valor na string... WTF */}\r\n            { gameEndState ? gameEndState.split('\\n').map( str => <p>{str}</p>) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst RoomSelect = ({value, buttonList, onChange, showInBtnFormat = true}) => {\r\n\tconst [state, setState] = React.useState(0)\r\n\r\n\tconst buttonClick = (num) => () => {\r\n\t\tif(onChange) {\r\n\t\t\tonChange(num)\r\n\t\t\tsetState(num)\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif(value) setState(value)\r\n\t}, [value])\r\n\r\n\tif( showInBtnFormat ) {\r\n\t\treturn (\r\n\t\t\t<div id=\"RoomSelect\">\r\n\t\t\t\t<div className=\"section-title\">\r\n\t\t\t\t\t<span lang=\"pt-br\">Salas</span>\r\n\t\t\t\t\t<span lang=\"en\">Rooms</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"button-rows\">\r\n\t\t\t\t\t{buttonList.map( (name, index) =>\r\n\t\t\t\t\t\t<button className={\"RoomBtn\" + (onChange ? \"\" : \" disabled\")} key={index}\r\n\t\t\t\t\t\tid={ state === index ? \"selected\" : \"\" }\r\n\t\t\t\t\t\tonClick={buttonClick(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{index+1}\r\n\t\t\t\t\t\t</button> )}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div id=\"RoomSelect\">\r\n\t\t\t\t<div className=\"section-title\">\r\n\t\t\t\t\t<span lang=\"pt-br\">Sala {state + 1}/{buttonList.length}</span>\r\n\t\t\t\t\t<span lang=\"en\">Room {state + 1}/{buttonList.length}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default RoomSelect\r\n","import React from 'react'\r\nimport './sala.scss'\r\n\r\nconst Sala = ({children, roomData, setCurrentChar}) => {\r\n\r\n  const img = roomData && roomData.background.url ? roomData.background.url : \"\"\r\n  return (\r\n      // <div id=\"sala\" style={{backgroundImage: `url(\"${img}\")`}}>\r\n      <div id=\"sala\">\r\n        <img src={img} alt=\"\" />\r\n        <div id=\"sala-content\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Sala\r\n","import React from 'react'\r\nimport './character.scss'\r\n\r\nconst Character = ({zDepth, character, dragPosition, position, onClick, showNameOnHover}) => {\r\n    return (\r\n    <div className=\"CharDiv\" onClick={onClick} style={{\"--z\": zDepth}}>\r\n        <img src={character.characterAssets.length > 0 ? character.characterAssets.find(asset => asset.bodyPart === 'fullbody'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t).image.url : \"\"} alt={`${character.name}`}/>\r\n        {showNameOnHover && <div>{character.name}</div>}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Character\r\n","const initialValue = () => ({\r\n  //METADATA\r\n  back: false,\r\n  //GAME STATE\r\n  scene: \"INIT\",\r\n  endGame: false,\r\n  currentLocationIndex: 0,\r\n  locations: [],\r\n  jobs: [],\r\n  countries: [],\r\n  names: [],\r\n  contactsTemplate: [],\r\n  contactsAtSession: [],\r\n  dialogs: {},\r\n  questionsAsked: 0,\r\n  result: 0,\r\n  totalFields: 0,\r\n  mainError: [],\r\n  feedback: {},\r\n  //DIALOG\r\n  dialogHistory: [],\r\n  answers: [],\r\n  preSpeech: [],\r\n  currentChar: null,\r\n  characterFeeling: \"init\",\r\n  showContacts: false,\r\n  maxQuestions: 4,\r\n  // onMinimize: null,\r\n  shouldMinimize: false,\r\n  shouldCloseDialog: false,\r\n  wrongContacts: 0,\r\n  tracking: true\r\n});\r\n\r\nexport default initialValue;\r\n","const initialValue = [\r\n    {\r\n        question: 'Oi!',\r\n        answers: 'Oi! Tudo bem?',\r\n    },\r\n    {\r\n        question: 'Olá!',\r\n        answers: 'Oi! Como vai?',\r\n    },\r\n    {\r\n        question: 'E aí?',\r\n        answers: 'Opa, beleza?',\r\n    },\r\n    {\r\n        question: 'Até mais!',\r\n        answers: 'Já vai...?',\r\n    },\r\n    {\r\n        question: 'Tchau!',\r\n        answers: 'Tudo certo contigo...?',\r\n    },\r\n]\r\n\r\n\r\nexport default initialValue","const stub = {\r\n  name: 'Stub mission',\r\n  description: 'Local stub mission for tests',\r\n  locations: [\r\n    {name: 'sala', backgroundAssets: []},\r\n    {name: 'cozinha', backgroundAssets: []},\r\n    {name: 'biblioteca', backgroundAssets: []},\r\n    {name: 'escritório', backgroundAssets: []}],\r\n  characters: [\r\n    {\r\n      name: 'Joao', characterAssets: [],\r\n      answers: [\r\n        {\r\n          answer: 'oi',\r\n          question: {question: \"oi?\"}\r\n        },\r\n        {\r\n          answer: 'turusim',\r\n          question: {question: \"turubem?\"}\r\n        },\r\n\r\n        {\r\n          answer: 'kiésim',\r\n          question: {question: \"cumékié?\"}\r\n        }\r\n      ]\r\n    },\r\n    {name: 'Pedro', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Marta', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Suzane', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Maria', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Pablo', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n  ]\r\n}\r\n\r\nexport default stub\r\n","import React from 'react'\r\n\r\nconst Dropdown = ({style, defaultText, onChange, label, optionList, value}) => {\r\n\r\n  return(\r\n    <div className={label}>\r\n      <p>{label}</p>\r\n      <select style={style} value={value} onChange={onChange}>\r\n          <option value='' key={-1} disabled>{defaultText ?? label.toLowerCase()}</option>\r\n        {optionList?.map((option, index) =>\r\n          <option value={option} key={index}>{option}</option>\r\n        )}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n","import React from 'react'\r\n\r\nimport './index.scss'\r\n\r\n/**\r\n * Cria um novo contexto de renderização de página inteira com fundo branco semitransparente\r\n * @param  {Object} props\r\n * @param  {Object | Object[]} props.children\t\t\t\t\t\t\tElementos a serem renderizados\r\n * @param  {boolean} [props.showCloseBtn]\t\t\t\t\t\t\t\tDevo mostrar o botão de fechar?\r\n * @param  {boolean} [props.shouldExit]\t\t\t\t\t\t\t\t\tDevo fechar? Se verdadeiro, inicia animação de fechamento\r\n * @param  {() => void} [props.onClickClose]\t\t\t\t\t\t\tCallback para quando clicam no botão de fechar\r\n * @param  {(event) => void} [props.onReadyToExit]\t\t\t\t\t\tCallback para quando terminei de fechar\r\n * @param  {{r:number, g:number, b:number, a:number}} [props.bgRGBA]\tCor (formato da função rgba()) do fundo desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n * @param  {{r:number, g:number, b:number}} [props.closeRGB]\t\t\tCor (formato da função rgba()) do botão de fechar desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n * @param  {{r:number, g:number, b:number}} [props.closeHoverRGB]\t\tCor (formato da função rgba()) do botão de fechar quanto em hover desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n */\r\nconst FullscreenOverlay = ({\r\n\t\tchildren,\r\n\t\tshowCloseBtn = true,\r\n\t\tshouldExit = false,\r\n\t\tonClickClose,\r\n\t\tonReadyToExit,\r\n\t\tbgRGBA = {},\r\n\t\tcloseRGB = {},\r\n\t\tcloseHoverRGB = {},\r\n\t\tstyle = {}\r\n\t}) => {\r\n\r\n\tif( showCloseBtn && onClickClose == null ) throw Error(\"Invalid callback for click on close button.\")\r\n\tif( shouldExit && onReadyToExit == null ) throw Error(\"Invalid callback for when finishing the exit animation.\")\r\n\r\n\tconst _readyToExit = (event) => {\r\n\t\tif ( event.target === event.currentTarget ) onReadyToExit(event)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"fullscreen-overlay\"\r\n\t\t\t className={shouldExit ? \"ExitAnim\" : null}\r\n\t\t\t onAnimationEnd={shouldExit ? _readyToExit : null}\r\n\t\t\t style={{...style, '--bgR': bgRGBA.r ?? 255, '--bgG': bgRGBA.g ?? 255, '--bgB': bgRGBA.b ?? 255, '--bgA': bgRGBA.a ?? 0.73}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t{showCloseBtn &&\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"fullscreen-overlay-close-btn\"\r\n\t\t\t\t\tonClick={onClickClose}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t'--closeR': closeRGB.r ?? 89,\r\n\t\t\t\t\t\t'--closeG': closeRGB.g ?? 49,\r\n\t\t\t\t\t\t'--closeB': closeRGB.b ?? 109,\r\n\t\t\t\t\t\t'--closeHoverR': closeHoverRGB.r ?? 249,\r\n\t\t\t\t\t\t'--closeHoverG': closeHoverRGB.g ?? 175,\r\n\t\t\t\t\t\t'--closeHoverB': closeHoverRGB.b ?? 161\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span>×</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FullscreenOverlay\r\n","import React from \"react\";\r\nimport Dropdown from \"../Dropdown\";\r\n\r\nimport { smallPhone, bigPhone, dedao, palma } from \"../../img\";\r\n\r\nimport \"./index.scss\";\r\nimport FullscreenOverlay from \"../FullscreenOverlay\";\r\n\r\n// const Phone = ({children, modifyContact, contactsTemplate, contacts, jobs, countries, onAddContact, onFinish, onMinimize}) => {\r\nconst Phone = ({\r\n  children,\r\n  modifyContact,\r\n  contactsTemplate,\r\n  names,\r\n  contacts,\r\n  jobs,\r\n  countries,\r\n  onAddContact,\r\n  onFinish,\r\n  shouldMinimize,\r\n  onMinimize,\r\n}) => {\r\n  const [state, setState] = React.useState({\r\n    maximized: false,\r\n    shouldMinimize: false,\r\n  });\r\n  // const [newContact,setNewContact] = React.useState({name: '', job: '', country: ''})\r\n\r\n  React.useEffect(() => {\r\n    setState({ ...state, contacts: contacts });\r\n    //eslint-disable-next-line\r\n  }, [contacts]);\r\n\r\n  React.useEffect(() => {\r\n    if (shouldMinimize) _shouldMinimize();\r\n    //eslint-disable-next-line\r\n  }, [shouldMinimize]);\r\n\r\n  // React.useEffect( () => {\r\n  // \tif(onMinimize) _shouldMinimize()\r\n  // \t//eslint-disable-next-line\r\n  // }, [onMinimize])\r\n\r\n  const _maximize = () => {\r\n    setState({ ...state, maximized: true });\r\n  };\r\n\r\n  const _shouldMinimize = () => {\r\n    setState({ ...state, shouldMinimize: true });\r\n  };\r\n\r\n  const _minimized = () => {\r\n    // setState({...state, shouldMinimize: false, maximized: false})\r\n    state.shouldMinimize = false;\r\n    state.maximized = false;\r\n    if (typeof onMinimize === \"function\") onMinimize();\r\n  };\r\n\r\n  // const _addContato = () => {\r\n  // \tif(onAddContact) onAddContact(newContact)\r\n  // \telse throw new Error(\"Using phone without callback: onAddContact\")\r\n  // \tsetNewContact({name: '', job: '', country: ''})\r\n  // }\r\n\r\n  const _terminou = () => {\r\n    if (typeof onFinish === \"function\") onFinish();\r\n    else console.log(\"onFinish not set or is not a function\");\r\n  };\r\n\r\n  const _contatoTemplate = (contact, key) => {\r\n    return (\r\n      <div className=\"contato\" key={key}>\r\n        <div className=\"contact-profile-pic\">\r\n          <div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n          <span>{key + 1}</span>\r\n        </div>\r\n        {contact.showName ? (\r\n          <div className=\"Nome\">\r\n            <p>Nome</p>\r\n            <div className=\"phone-text-field\">{contact.name}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.job === contactsTemplate?.find( template => template?.id === contact.id).job? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) =>\r\n              modifyContact({ ...contact, name: e.target.value })\r\n            }\r\n            label={\"Nome\"}\r\n            value={contact.name}\r\n            optionList={names}\r\n          />\r\n        )}\r\n\r\n        {contact.showJob ? (\r\n          <div className=\"Profissão\">\r\n            <p>Profissão</p>\r\n            <div className=\"phone-text-field\">{contact.job}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.job === contactsTemplate?.find( template => template?.id === contact.id).job? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) => modifyContact({ ...contact, job: e.target.value })}\r\n            label={\"Profissão\"}\r\n            value={contact.job}\r\n            optionList={jobs}\r\n          />\r\n        )}\r\n\r\n        {contact.showCountry ? (\r\n          <div className=\"País\">\r\n            <p>País</p>\r\n            <div className=\"phone-text-field\">{contact.country}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.country === contactsTemplate?.find( template => template?.id === contact.id).country? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) =>\r\n              modifyContact({ ...contact, country: e.target.value })\r\n            }\r\n            label={\"País\"}\r\n            value={contact.country}\r\n            optionList={countries}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"phone\">\r\n      <div\r\n        id=\"small-phone-wrapper\"\r\n        className={state.maximized ? \"maximized\" : null}\r\n      >\r\n        <div id=\"small-phone-inner-wrapper\">\r\n          <div id=\"small-phone-content\" onClick={_maximize}>\r\n            <div id=\"small-phone-floating-text\">\r\n              <span lang=\"pt-br\">Adicione um novo contato</span>\r\n              <span lang=\"default\">Add a new contact</span>\r\n            </div>\r\n            <img src={smallPhone} alt=\"phone-small\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {state.maximized && (\r\n        <FullscreenOverlay\r\n          bgRGBA={{ r: 249, g: 175, b: 161, a: 0.69 }}\r\n          closeHoverRGB={{ r: 255, g: 255, b: 255 }}\r\n          onClickClose={_shouldMinimize}\r\n          shouldExit={state.shouldMinimize}\r\n          onReadyToExit={_minimized}\r\n        >\r\n          <div\r\n            id=\"big-phone-wrapper\"\r\n            className={state.shouldMinimize ? \"minimizing\" : null}\r\n          >\r\n            <div id=\"big-phone-imgs\">\r\n              <img src={palma} alt=\"\" />\r\n              <img src={bigPhone} alt=\"\" />\r\n              <img src={dedao} alt=\"\" />\r\n            </div>\r\n            <div id=\"big-phone-screen-wrapper\">\r\n              <div id=\"big-phone-screen-content\">\r\n                <p>Lista de contatos</p>\r\n                <div id=\"lista-contatos\">\r\n                  {contacts?.map((contact, index) => {\r\n                    return _contatoTemplate(contact, index);\r\n                  })}\r\n                  {/* <div id=\"add-contato\" className=\"contato\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"contact-profile-pic\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span><strong>+</strong></span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"Nome\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>Nome</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"nome\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nome do contato\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newContact.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>setNewContact({...newContact, name: event.target.value})}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={\"Profissão\"}\r\n\t\t\t\t\t\t\t\t\t\t\toptionList={jobs}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={newContact.job}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>setNewContact({...newContact, job: event.target.value})}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={\"País\"}\r\n\t\t\t\t\t\t\t\t\t\t\toptionList={countries}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={newContact.country}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>setNewContact({...newContact, country: event.target.value})}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"btn-add-contato\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={!(newContact.name && newContact.job && newContact.country) ? \"disabled\" : \"enabled\"}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={addContato}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tAdicionar contato\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div id=\"btn-terminei\" onClick={() => setState({...state, changeRoomPopUp: true})}> */}\r\n            <div id=\"btn-terminei-wrapper\">\r\n              <div\r\n                id=\"btn-terminei\"\r\n                onClick={_terminou}\r\n                style={{\r\n                  display:\r\n                    contacts.filter(\r\n                      (contact) =>\r\n                        contact.job === \"\" ||\r\n                        contact.country === \"\" ||\r\n                        contact.name === \"\"\r\n                    ).length > 0\r\n                      ? \"none\"\r\n                      : \"block\",\r\n                }}\r\n              >\r\n                Terminei!\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </FullscreenOverlay>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Phone;\r\n","import React from 'react'\r\n\r\nconst Menu = ({ buttonList, onButtonClick }) => {\r\n  return (\r\n    <div id='Menu'>\r\n      <div id=\"menu-options\">\r\n        <span style={{\r\n          color: \"#FFF\",\r\n          backgroundColor: \"transparent !important\",\r\n          fontSize: \"3rem\"\r\n        }}></span>\r\n        {buttonList.map((button, index) =>\r\n          <button key={index} onClick={() => { onButtonClick(button) }} disabled={button.hasOwnProperty('active') ? !button.active : false}><span>{button.question}</span></button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst DialogCharacter = ({character, feeling, ...props}) => {\r\n  let characterImg = \"\"\r\n\r\n  if( !(character == null) ) {\r\n    if( character.characterAssets.length > 0 ) {\r\n      characterImg = character.characterAssets\r\n        .find(asset => asset.bodyPart === 'upperBody' && asset.type === feeling)\r\n        .image.url\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id='CharacterPortrait' {...props}>\r\n      {<img src={characterImg} alt=\"Character Portrait\" />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogCharacter\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst DialogHistory = ({dialogHistory}) => {\r\n\treturn(\r\n\t\t<div id='dialog-history-wrapper'>\r\n\t\t\t<div id='dialog-history-content'>\r\n\t\t\t\t{dialogHistory.map((dialog, index)=>\r\n\t\t\t\t\t<div className={\"mensagem\" + (dialog.speaker==='player'? 0 : 1) } key={index}>{dialog.text}</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogHistory\r\n","export default __webpack_public_path__ + \"static/media/writerLetter3.66919f0c.flac\";","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n/**\r\n * Componente para escrita de texto caracter a caracter\r\n *\r\n * @param  {Object} props\r\n * @param  {string} props.text\t\t\t\tTexto a ser escrito caracter por caracter\r\n * @param  {number} props.characterTime\t\tDelay, em milissegundos, entre cada caracter\r\n * @param  {() => void} props.onWritten\t\tCallback para quando terminou de escrever\r\n * @param  {number} props.afterWrittenTime\tDelay, em milissegundos, antes de avisar que terminou de escrever\r\n */\r\n\r\nimport sound from '../../sounds/writerLetter3.flac'\r\n\r\nconst Writer = ({text, characterTime, onWritten, afterWrittenTime, ...props}) => {\r\n\tconst [state, setState] = React.useState({text: text, index: 0})\r\n\tconst volume = useSelector( state => state.music.volume)\r\n\r\n\tReact.useEffect( () => {\r\n\tif( text !== state.text )\r\n\t\tsetState( () => ({text: text, index: 0}))\r\n\t}, [text, state.text] )\r\n\r\n\tReact.useEffect( () => {\r\n\t\tlet timeoutID\r\n\t\tif( state.index < state.text.length ) {\r\n\t\t\ttimeoutID = setTimeout( () => {\r\n\t\t\t\tlet audio = new Audio(sound)\r\n\t\t\t\taudio.volume = volume / 1000\r\n\t\t\t\taudio.play()\r\n\t\t\t\tsetState({...state, index: state.index + 1})\r\n\t\t\t}, characterTime)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(onWritten){\r\n\t\t\t\tif(afterWrittenTime > 0)\r\n\t\t\t\t\ttimeoutID = setTimeout( onWritten, afterWrittenTime )\r\n\t\t\t\telse\r\n\t\t\t\t\tonWritten()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn () => clearTimeout(timeoutID)\r\n\t// eslint-disable-next-line\r\n\t}, [state.index])\r\n\r\n\treturn(\r\n\t\t<div id=\"Writer\" {...props}>\r\n\t\t\t{ state.text.substring(0, state.index) }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Writer\r\n","import Menu from '../Menu'\r\nimport React from 'react'\r\nimport DialogCharacter from '../DialogCharacter'\r\nimport DialogHistory from '../DialogHistory'\r\nimport FullscreenOverlay from '../FullscreenOverlay'\r\nimport Writer from '../Writer'\r\n\r\nimport './index.scss'\r\n\r\n/**\r\n * Elemento para renderização de uma conversa com algum NPC, estilo graphic novel.\r\n * \r\n * @param  {Object} props\r\n * @param  {Object | Object[]} [props.children]\r\n *\t\t\tElementos extras a serem renderizados no mesmo contexto\r\n * @param  {boolean} [props.shouldExit]\r\n *\t\t\tDevo fechar? Se verdadeiro, inicia animação de fechamento\r\n * @param  {boolean} [props.showDialogHistory]\r\n *\t\t\tO histórico da conversa deve ser mostrado?\r\n * @param  {(dialogHistory)=>void} [props.onClearDialogHistory]\r\n *\t\t\tEnquanto este campo não for null, limparei meu histórico e chamarei esse callback a cada limpeza\r\n * @param  {boolean} [props.callAfterWritterForEveryMsg]\r\n *\t\t\tSe verdadeiro, chamarei a callback afterWritter ao final de cada mensagem, mesmo no caso de múltiplas mensagens consecutivas\r\n * @param  {number} [props.msPerCharacter]\r\n *\t\t\tDelay, em milissegundos, entre cada caracter da exibição da resposta\r\n * @param  {number} [props.waitAfterWritten]\r\n *\t\t\tDelay, em milissegundos, ao final de cada mensagem escrita\r\n * @param  { {text:string, speaker?: string}[]} [props.prevDialogHistory]\r\n *\t\t\tHistórico inicial da conversa\r\n * @param  {string | string[]} [props.charPreSpeech]\r\n *\t\t\tLista de falas a serem apresentadas antes de se dar a opção de escolha ao jogador\r\n * @param  {{question:string, answers:string[]}[]} props.convOptions\r\n *\t\t\tLista de opções para o jogador escolher (com suas respostas)\r\n * @param  {Object} [props.currentChar]\r\n *\t\t\tInfo do personagem a ser renderizado\r\n * @param  {Object} [props.charFeeling]\r\n *\t\t\tInfo de qual emoção o personagem deve ter\r\n * @param  {() => void} [props.afterWriter]\r\n *\t\t\tCallback para quando as mensagems terminarem de ser enviadas\r\n * @param  {(dialogHistory:{text:string, speaker?:string}[]) => void} [props.onExited]\r\n *\t\t\tCallback para quando se sair do diálogo. Envia todo o histórico de mensagens enviadas até o momento\r\n * @param  {(convoChoosen) => void} [props.onConvoChoiceMade]\r\n *\t\t\tCallback sobre qual alternativa foi escolhida. Envia a convOption escolhida\r\n */\r\nconst Conversa = ({\r\n\t\tchildren,\r\n\t\tshouldExit = false,\r\n\t\tshowDialogHistory = true,\r\n\t\tonClearDialogHistory = null,\r\n\t\tcallAfterWritterForEveryMsg = false,\r\n\t\tmsPerCharacter = 50,\r\n\t\twaitAfterWritten = 2000,\r\n\t\tprevDialogHistory = [],\r\n\t\tcharPreSpeech = null,\r\n\t\tconvOptions = [],\r\n\t\tcurrentChar = null,\r\n\t\tcharFeeling = null,\r\n\t\tafterWriter = () => {},\r\n\t\tonExited = (dialogHistory) => {},\r\n\t\tonConvoChoiceMade = (convoChoosen) => {},\r\n\t}) => {\r\n\r\n\tconst [state, setState] = React.useState({\r\n\t\tquerFechar: shouldExit,\r\n\t\tanswers: null,\r\n\t\tdialogHistory: prevDialogHistory\r\n\t});\r\n\r\n\t// if( charPreSpeech !== null && charPreSpeech.length > 0 ) {\r\n\t// \tstate.currentAnswer = 0\r\n\t// \tstate.answers = typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t// \tcharPreSpeech = null\r\n\t// }\r\n\r\n\t// * UNDEFINED BEHAVIOR caso alguém mude o charPreSpeech desse componente enquanto o writer faz algo\r\n\tReact.useEffect( () => {\r\n\t\tif( charPreSpeech !== null && charPreSpeech.length > 0 ) {\r\n\t\t\t// state.currentAnswer = 0\r\n\t\t\t// state.answers = typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t\t\t// console.log('effect', state.answers)\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentAnswer: 0,\r\n\t\t\t\tanswers: typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t\t\t})\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [charPreSpeech])\r\n\t\r\n\t// * UNDEFINED BEHAVIOR caso alguém mande limpar enquanto o writer faz algo\r\n\tReact.useEffect(() => {\r\n\t\tif( onClearDialogHistory ) {\r\n\t\t\tonClearDialogHistory(state.dialogHistory)\r\n\t\t\tstate.dialogHistory = []\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [onClearDialogHistory])\r\n\t\r\n\tReact.useEffect( () => {\r\n\t\tsetState({...state, querFechar: shouldExit})\r\n\t\t// eslint-disable-next-line\r\n\t}, [shouldExit])\r\n\r\n\tconst _querFechar = () => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tquerFechar: true\r\n\t\t})\r\n\t}\r\n\r\n\tconst _podeFechar = () => {\r\n\t\tonExited(state.dialogHistory)\r\n\t}\r\n\r\n\tconst _afterWriter = () => {\r\n\t\tlet updateState = {}\r\n\t\tif( state.currentAnswer < state.answers.length - 1 ) {\r\n\t\t\tupdateState = {\r\n\t\t\t\tcurrentAnswer: state.currentAnswer + 1\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tupdateState = {\r\n\t\t\t\tcurrentAnswer: null,\r\n\t\t\t\tanswers: null\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t...updateState,\r\n\t\t\tdialogHistory: [\r\n\t\t\t\t...state.dialogHistory,\r\n\t\t\t\t{text: state.answers[state.currentAnswer]}\r\n\t\t\t],\r\n\t\t})\r\n\r\n\t\tif( callAfterWritterForEveryMsg || state.currentAnswer >= state.answers.length - 1 )\r\n\t\t\tafterWriter()\r\n\t}\r\n\r\n\tconst _convoChoiceClick = (convoChoosen) => {\r\n\r\n\t\tif( typeof(convoChoosen.answers) === \"string\" ) convoChoosen.answers = [convoChoosen.answers]\r\n\t\tsetState( {\r\n\t\t\t...state,\r\n\t\t\tdialogHistory: [\r\n\t\t\t\t...state.dialogHistory,\r\n\t\t\t\t{text: convoChoosen.question, speaker: 'player'}\r\n\t\t\t],\r\n\t\t\tanswers: convoChoosen.answers,\r\n\t\t\tcurrentAnswer: 0\r\n\t\t})\r\n\r\n\t\tonConvoChoiceMade(convoChoosen)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FullscreenOverlay shouldExit={state.querFechar} onClickClose={_querFechar} onReadyToExit={_podeFechar}>\r\n\t\t\t<div id=\"dialog-interact\" className={state.querFechar ? \"ExitAnim\" : null}>\r\n\t\t\t\t<div id=\"dialogos\">\r\n\t\t\t\t\t{showDialogHistory ? <DialogHistory dialogHistory={state.dialogHistory}/> : <div style={{flexGrow: '1'}} />}\r\n\t\t\t\t\t<div id='dialog-box' className={state.answers ? \"alternative\" : \"\"}>\r\n\t\t\t\t\t\t{state.answers ?\r\n\t\t\t\t\t\t\t<Writer text={state.answers[state.currentAnswer]}\r\n\t\t\t\t\t\t\t\tonWritten={_afterWriter}\r\n\t\t\t\t\t\t\t\tafterWrittenTime={waitAfterWritten}\r\n\t\t\t\t\t\t\t\tcharacterTime={msPerCharacter}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<Menu buttonList={convOptions}\r\n\t\t\t\t\t\t\t\tonButtonClick={_convoChoiceClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<DialogCharacter character={currentChar} feeling={charFeeling}/>\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</FullscreenOverlay>\r\n\t)\r\n}\r\n\r\nexport default Conversa\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Result from \"../Game2/components/Result\";\r\nimport RoomSelect from \"../../_components/RoomSelect\";\r\nimport Sala from \"../../_components/Sala\";\r\nimport Character from \"../../_components/Character\";\r\nimport initialState from \"./initialState.js\";\r\nimport initialDialog from \"./initialDialog.js\";\r\nimport stub from \"./stub.js\";\r\nimport Phone from \"../../_components/Phone\";\r\nimport Conversa from \"../../_components/Conversa\";\r\nimport FullscreenOverlay from \"../../_components/FullscreenOverlay\";\r\nimport { headerConstants } from \"../../_constants\";\r\nimport { bigPhone, dedao, palma, blobLowScore, blobLaranja } from \"../../img\";\r\n\r\nimport \"./index.scss\";\r\nimport \"./feedback-screen.scss\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Game1 = (props) => {\r\n  const [state, setState] = React.useState(initialState());\r\n\r\n  const { play_sessionsActions } = apiActions;\r\n  const id = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useSelector((state) => state.missions.loading);\r\n  let error = useSelector((state) => state.missions.error);\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  const missionData = mission ? mission.missionData : null;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[state.play_sessions.items.length - 1] : {}\r\n  );\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  // React.useEffect(()=>{\r\n  // \tif(mission && Object.keys(actions).length !== 0 && !missionData){\r\n  // \t\tdispatch(actions['missionData'].find({mission: mission.id}))\r\n  // \t}\r\n  // })\r\n\r\n  React.useEffect(() => {\r\n    if (mission) dispatch(musicActions.set(mission.backgroundAudio.url));\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //Track playerActions\r\n  React.useEffect(() => {\r\n    if ((mission && !mission.trackPlayerInput) || !currentPlaySession) return;\r\n\r\n    const getClickedObject = (e) => {\r\n      dispatch(\r\n        play_sessionsActions.update(\r\n          { id: currentPlaySession.id,\r\n            data: {\r\n              actions:\r\n              [...currentPlaySession.data.actions,\r\n                {\r\n                  tag: e.target.nodeName,\r\n                  src: e.target.src,\r\n                  alt: e.target.alt,\r\n                  className: e.target.className,\r\n                  class: e.target.class,\r\n                  id: e.target.id,\r\n                  innerHTML: e.target.innerHTML.includes(\"<div\")\r\n                    ? null\r\n                    : e.target.innerHTML,\r\n                  clickTime: new Date(),\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        )\r\n      );\r\n    };\r\n    document.addEventListener(\"mousedown\", getClickedObject);\r\n\r\n    setState((s) => {\r\n      return { ...s, currentPlaySession, getClickedObject };\r\n    });\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", getClickedObject);\r\n    };\r\n  }, [dispatch, currentPlaySession, play_sessionsActions, state.tracking, mission]);\r\n\r\n  React.useEffect(() => {\r\n    if (id && !missionData)\r\n      dispatch(gameActions.getById(\"missions\", props.match.params.id));\r\n    if (missionData) {\r\n      let data = {};\r\n\r\n      //distribute characters in locations\r\n      if (state.locations.length === 0) {\r\n        // data.locations = [...mission.locations]\r\n        data.locations = missionData.locations;\r\n      }\r\n\r\n      //list of all available jobs\r\n      if (state.jobs.length === 0) {\r\n        data.jobs = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.job))\r\n                      acc.push(missionCharacter.character.job);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      //list of all available countries\r\n      if (state.countries.length === 0) {\r\n        data.countries = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.country))\r\n                      acc.push(missionCharacter.character.country);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      if (state.names.length === 0) {\r\n        data.names = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.name))\r\n                      acc.push(missionCharacter.character.name);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      //resume characters as contacts\r\n      if (state.contactsTemplate.length === 0) {\r\n        //create full contact template\r\n        data.contactsTemplate = missionData.locations\r\n          .map((location) => {\r\n            return location.missionCharacters.map((missionCharacter) => {\r\n              return {\r\n                id: missionCharacter.character.id,\r\n                name: missionCharacter.character.name,\r\n                country: missionCharacter.character.country,\r\n                job: missionCharacter.character.job,\r\n                //looks for mission configuration\r\n                showJob: missionCharacter.showJob,\r\n                showCountry: missionCharacter.showCountry,\r\n                showName: missionCharacter.showName,\r\n                hasEmptyField: !(\r\n                  missionCharacter.showJob &&\r\n                  missionCharacter.showCountry &&\r\n                  missionCharacter.showName\r\n                ),\r\n              };\r\n            });\r\n          })\r\n          .flat();\r\n\r\n        data.totalFields = 0;\r\n        //create contact state shown to/ manipulated by to player\r\n        data.contactsAtSession = data.contactsTemplate.map((contact) => {\r\n          data.totalFields +=\r\n            (!contact.showJob ? 1 : 0) +\r\n            (!contact.showCountry ? 1 : 0) +\r\n            (!contact.showName ? 1 : 0);\r\n\r\n          return {\r\n            ...contact,\r\n            name: contact.showName ? contact.name : \"\",\r\n            job: contact.showJob ? contact.job : \"\",\r\n            country: contact.showCountry ? contact.country : \"\",\r\n          };\r\n        });\r\n      }\r\n\r\n      if (Object.keys(data).length > 0)\r\n        setState((state) => {\r\n          return { ...state, ...data };\r\n        });\r\n    }\r\n  }, [\r\n    dispatch,\r\n    id,\r\n    mission,\r\n    props.match.params.id,\r\n    state.locations.length,\r\n    state.contactsTemplate.length,\r\n    state.countries.length,\r\n    state.jobs.length,\r\n    state.names.length,\r\n    missionData,\r\n  ]);\r\n\r\n  if (error) {\r\n    error = null;\r\n    mission = stub;\r\n  }\r\n\r\n  const onStartGame = (e) => {\r\n    if (state.tracking) {\r\n      dispatch(\r\n        play_sessionsActions.create({\r\n          user: userId,\r\n          mission: mission.id,\r\n          data: {actions:[]}\r\n        })\r\n      );\r\n    }\r\n    setState({ ...state, scene: \"ROOM\" });\r\n  };\r\n\r\n  const setCurrentChar = (character) => () => {\r\n    // if (convOptions.length === 0) console.log(\"Couldn't find any questions to ask currentChar\")\r\n\r\n    if (!state.dialogs.hasOwnProperty(character.character.name)) {\r\n      let convOptions = character.answers.reduce((acc, convOption) => {\r\n        let option = {\r\n          ...convOption,\r\n          ...convOption.question,\r\n          answers: convOption.answer,\r\n          active: true,\r\n        };\r\n        delete option.answer;\r\n        return [...acc, option];\r\n      }, []);\r\n\r\n      setState({\r\n        ...state,\r\n        currentChar: character.character,\r\n        convOptions: convOptions,\r\n        dialogs: {\r\n          ...state.dialogs,\r\n          [character.character.name]: [],\r\n        },\r\n      });\r\n    } else {\r\n      let convOptions = [];\r\n      if (\r\n        state.questionsAsked <\r\n        state.locations[state.currentLocationIndex].maxQuestions\r\n      ) {\r\n        convOptions = character.answers.reduce((acc, convOption) => {\r\n          let option = {\r\n            ...convOption,\r\n            ...convOption.question,\r\n            answers: convOption.answer,\r\n            active: state.dialogs[character.character.name].find(\r\n              (dialog) => dialog.text === convOption.question.question\r\n            )\r\n              ? false\r\n              : true,\r\n          };\r\n          delete option.answer;\r\n          return [...acc, option];\r\n        }, []);\r\n      } else {\r\n        convOptions = character.answers.reduce((acc, convOption) => {\r\n          let option = {\r\n            ...convOption,\r\n            ...convOption.question,\r\n            answers: convOption.answer,\r\n            active: false,\r\n          };\r\n          delete option.answer;\r\n          return [...acc, option];\r\n        }, []);\r\n      }\r\n\r\n      setState({\r\n        ...state,\r\n        currentChar: character.character,\r\n        convOptions: convOptions,\r\n      });\r\n    }\r\n  };\r\n\r\n  const afterWriter = () => {\r\n    let updatedState = {};\r\n    if (\r\n      state.questionsAsked ===\r\n        state.locations[state.currentLocationIndex].maxQuestions &&\r\n      state.preSpeech.length === 0\r\n    ) {\r\n      updatedState.preSpeech = [\r\n        \"Espero que isso tenha sido tudo. Tenho que ir agora...\",\r\n      ];\r\n      updatedState.convOptions = [\r\n        { question: \"Ah tá. Tchau!\", answers: \"Tchau!\", close: true },\r\n      ];\r\n    } else if (\r\n      state.questionsAsked >\r\n      state.locations[state.currentLocationIndex].maxQuestions\r\n    ) {\r\n      updatedState.convOptions = state.convOptions.map((convOption) => {\r\n        return { ...convOption, active: false };\r\n      }, []);\r\n    }\r\n    if (state.close) {\r\n      updatedState.shouldCloseConvo = true;\r\n      updatedState.close = false;\r\n    }\r\n\r\n    setState({ ...state, ...updatedState });\r\n  };\r\n\r\n  const onMenuButtonClick = (answer) => {\r\n    //\r\n    //\tAplicar lógica adicional de click nos botões do menu\r\n    //\r\n    let updatedState = {};\r\n\r\n    if (state.dialogs[state.currentChar.name].length) {\r\n      updatedState.questionsAsked = state.questionsAsked + 1;\r\n\r\n      if (\r\n        updatedState.questionsAsked <\r\n        state.locations[state.currentLocationIndex].maxQuestions\r\n      ) {\r\n        updatedState.convOptions = state.convOptions.map((convOption) => {\r\n          if (convOption.question === answer.question)\r\n            return { ...convOption, active: false };\r\n\r\n          return convOption;\r\n        }, []);\r\n      } else {\r\n        updatedState.preSpeech = [];\r\n        updatedState.convOptions = [];\r\n      }\r\n    }\r\n\r\n    if (answer.close) updatedState.close = true;\r\n\r\n    setState({\r\n      ...state,\r\n      ...updatedState,\r\n      dialogs: {\r\n        ...state.dialogs,\r\n        [state.currentChar.name]: [\r\n          ...state.dialogs[state.currentChar.name],\r\n          {\r\n            speaker: \"player\",\r\n            text: answer.question,\r\n          },\r\n          {\r\n            text: answer.answers[0],\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n\r\n  const modifyContact = (contact) => {\r\n    let index = state.contactsAtSession.indexOf(\r\n      state.contactsAtSession.find((c) => c.id === contact.id)\r\n    );\r\n    // console.log('changing:', contact)\r\n    setState({\r\n      ...state,\r\n      contactsAtSession: [\r\n        ...state.contactsAtSession.slice(0, index),\r\n        contact,\r\n        ...state.contactsAtSession.slice(index + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setState({ ...state, currentChar: null, shouldCloseConvo: false });\r\n  };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(), hasPlayed: true });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const onPhoneFinish = () => {\r\n    let wrongContacts = 0;\r\n    state.locations[state.currentLocationIndex].missionCharacters.forEach(\r\n      (missionContact, index) => {\r\n        let answer = state.contactsAtSession.find(\r\n          (contactAtSession) =>\r\n            contactAtSession.id === missionContact.character.id\r\n        );\r\n        let gabarito = state.contactsTemplate.find(\r\n          (contactTemplate) =>\r\n            contactTemplate.id === missionContact.character.id\r\n        );\r\n        if (\r\n          answer.job !== gabarito.job ||\r\n          answer.country !== gabarito.country ||\r\n          answer.name !== gabarito.name\r\n        )\r\n          wrongContacts++;\r\n      }\r\n    );\r\n    setState({ ...state, changeRoomPopUp: true, wrongContacts: wrongContacts });\r\n  };\r\n\r\n  const onGoNextRoom = () => {\r\n    if (state.currentLocationIndex + 1 < state.locations.length)\r\n      setState({\r\n        ...state,\r\n        shouldCloseDialog: true,\r\n        currentLocationIndex: state.currentLocationIndex + 1,\r\n        shouldMinimize: true,\r\n        questionsAsked: 0,\r\n        dialogs: {},\r\n      });\r\n    else {\r\n      // CALCULATE RESULT WITH WRONG ITEM AND FIND THE MATRIC THE USER MISSED THE MOST\r\n      let result = 0;\r\n      let mainError = missionData.metrics.map((metric) => {\r\n        return {\r\n          metric: metric.name,\r\n          metricTranslate: metric.nameTranslate.find(\r\n            (translate) => translate.language.id === lang\r\n          ),\r\n          count: 0,\r\n        };\r\n      });\r\n      state.contactsAtSession.forEach((contact) => {\r\n        let gabarito = state.contactsTemplate.find((t) => t.id === contact.id);\r\n\r\n        if (gabarito.hasEmptyField) {\r\n          result +=\r\n            (contact.job === gabarito.job && !gabarito.showJob ? 1 : 0) +\r\n            (contact.country === gabarito.country && !gabarito.showCountry\r\n              ? 1\r\n              : 0) +\r\n            (contact.name === gabarito.name && !gabarito.showName ? 1 : 0);\r\n\r\n          mainError.forEach((metric) => {\r\n            if (metric.name === \"Profissão\") {\r\n              metric.count +=\r\n                contact.job !== gabarito.job && !gabarito.showJob ? 1 : 0;\r\n            } else if (metric.name === \"País\") {\r\n              metric.count +=\r\n                contact.country !== gabarito.country && !gabarito.showCountry\r\n                  ? 1\r\n                  : 0;\r\n            } else if (metric.name === \"Nome\") {\r\n              metric.count +=\r\n                contact.name !== gabarito.name && !gabarito.showName ? 1 : 0;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      const score = (result / state.totalFields).toFixed(2) * 100;\r\n\r\n      setState({\r\n        ...state,\r\n        scene: \"ENDGAME\",\r\n        result,\r\n        score,\r\n        mainError: mainError.reduce((max, obj) =>\r\n          max.count > obj.count ? max : obj\r\n        ),\r\n        feedback: missionData.feedbacks.find(\r\n          (feedback) => feedback.minScore <= score && score <= feedback.maxScore\r\n        ),\r\n      });\r\n\r\n      dispatch(\r\n        gameActions.create(\"results\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n          score: score,\r\n          won: score > 80,\r\n        })\r\n      );\r\n\r\n      dispatch(\r\n        headerActions.setAll(\r\n          mission.name,\r\n          mission.nameTranslate.find((name) => {\r\n            return name.language.id === lang;\r\n          }).name\r\n        )\r\n      );\r\n\r\n      dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"game1-wrapper\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        mission && (\r\n          <div id=\"game1-content\">\r\n            {/* <div id=\"input-tracker\">\r\n              TrackInput:{\" \"}\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={(e) => {\r\n                  setState({ ...state, tracking: e.target.checked });\r\n                }}\r\n              />\r\n            </div> */}\r\n            {(function renderScene() {\r\n              switch (state.scene) {\r\n                case \"INIT\":\r\n                  return (\r\n                    <Init\r\n                      icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                      name={mission.name}\r\n                      description={mission.description}\r\n                      nameTranslate={\r\n                        mission.nameTranslate.find((name) => {\r\n                          return name.language.id === lang;\r\n                        }).name\r\n                      }\r\n                      descriptionTranslate={\r\n                        mission.descriptionTranslate.find((description) => {\r\n                          return description.language.id === lang;\r\n                        }).description\r\n                      }\r\n                      onStart={onStartGame}\r\n                      onBack={() => setState({ ...state, back: true })}\r\n                      ready={state.locations.length > 0 ? true : false}\r\n                    />\r\n                  );\r\n                case \"ROOM\":\r\n                  return (\r\n                    <div id=\"room-itself\">\r\n                      <RoomSelect\r\n                        value={state.currentLocationIndex}\r\n                        buttonList={state.locations.map(\r\n                          (location) => location.location.name\r\n                        )}\r\n                        showInBtnFormat={false}\r\n                      />\r\n                      <Sala\r\n                        roomData={\r\n                          state.locations[state.currentLocationIndex].location\r\n                        }\r\n                        key={state.currentLocationIndex}\r\n                      >\r\n                        {state.locations[\r\n                          state.currentLocationIndex\r\n                        ].missionCharacters.map((character, index) => (\r\n                          <Character\r\n                            key={index}\r\n                            zDepth={character.zDepth}\r\n                            character={character.character}\r\n                            onClick={setCurrentChar(character)}\r\n                          />\r\n                        ))}\r\n                      </Sala>\r\n                      <Phone\r\n                        contacts={state.contactsAtSession.filter((contact) =>\r\n                          state.locations[\r\n                            state.currentLocationIndex\r\n                          ].missionCharacters.find(\r\n                            (character) => character.character.id === contact.id\r\n                          )\r\n                        )}\r\n                        modifyContact={modifyContact}\r\n                        contactsTemplate={state.contactsTemplate}\r\n                        names={state.names}\r\n                        jobs={state.jobs}\r\n                        countries={state.countries}\r\n                        onFinish={onPhoneFinish}\r\n                        onMinimize={() =>\r\n                          setState({ ...state, shouldMinimize: false })\r\n                        }\r\n                        shouldMinimize={state.shouldMinimize}\r\n                      />\r\n                      {state.currentChar && (\r\n                        <Conversa\r\n                          shouldExit={state.shouldCloseConvo}\r\n                          prevDialogHistory={\r\n                            state.dialogs[state.currentChar.name]\r\n                          }\r\n                          onClearDialogHistory={state.refreshDialog}\r\n                          charPreSpeech={state.preSpeech}\r\n                          convOptions={\r\n                            state.dialogs[state.currentChar.name].length\r\n                              ? state.convOptions\r\n                              : initialDialog\r\n                          }\r\n                          currentChar={state.currentChar}\r\n                          charFeeling={state.characterFeeling}\r\n                          afterWriter={afterWriter}\r\n                          onExited={closeDialog}\r\n                          onConvoChoiceMade={onMenuButtonClick}\r\n                        ></Conversa>\r\n                      )}\r\n                      {state.changeRoomPopUp && (\r\n                        <FullscreenOverlay\r\n                          showCloseBtn={false}\r\n                          shouldExit={state.shouldCloseDialog}\r\n                          onReadyToExit={() => {\r\n                            setState({\r\n                              ...state,\r\n                              shouldCloseDialog: false,\r\n                              changeRoomPopUp: false,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <div className=\"popup-wrapper\">\r\n                            <div className=\"popup-content\">\r\n                              <span>Are you sure?</span>\r\n                              <div>\r\n                                {state.wrongContacts > 0 ? (\r\n                                  <div className=\"next-room-text\">\r\n                                    <span lang=\"pt-br\">\r\n                                      {`${state.wrongContacts}` +\r\n                                        missionData.nextRoomTextWrong}\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      {`${state.wrongContacts}` +\r\n                                        missionData.nextRoomTextWrongTranslate.find(\r\n                                          (translation) => {\r\n                                            return (\r\n                                              translation.language.id === lang\r\n                                            );\r\n                                          }\r\n                                        ).text}\r\n                                    </span>\r\n                                  </div>\r\n                                ) : (\r\n                                  <div className=\"next-room-text\">\r\n                                    <span lang=\"pt-br\">\r\n                                      {missionData.nextRoomTextRight}\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      {\r\n                                        missionData.nextRoomTextRightTranslate.find(\r\n                                          (translation) => {\r\n                                            return (\r\n                                              translation.language.id === lang\r\n                                            );\r\n                                          }\r\n                                        ).text\r\n                                      }\r\n                                    </span>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              <div id=\"popup-btns\">\r\n                                <button\r\n                                  id=\"no-go\"\r\n                                  onClick={() =>\r\n                                    setState({\r\n                                      ...state,\r\n                                      shouldCloseDialog: true,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {state.wrongContacts > 0\r\n                                    ? \"Keep trying\"\r\n                                    : \"Not yet\"}\r\n                                </button>\r\n                                <button id=\"go\" onClick={onGoNextRoom}>\r\n                                  {state.wrongContacts > 0\r\n                                    ? \"Continue anyway\"\r\n                                    : \"Let's go\"}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </FullscreenOverlay>\r\n                      )}\r\n                      <div\r\n                        id=\"question-counter\"\r\n                        className={\r\n                          state.questionsAsked >=\r\n                          state.locations[state.currentLocationIndex]\r\n                            .maxQuestions\r\n                            ? \"max\"\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <div id=\"question-counter-info\">\r\n                          <div>Você já fez</div>\r\n                          <div className=\"numbers\">\r\n                            <span>\r\n                              {Math.min(\r\n                                state.questionsAsked,\r\n                                state.locations[state.currentLocationIndex]\r\n                                  .maxQuestions\r\n                              )}\r\n                            </span>\r\n                            /\r\n                            {\r\n                              state.locations[state.currentLocationIndex]\r\n                                .maxQuestions\r\n                            }\r\n                          </div>\r\n                          <div>perguntas</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                case \"ENDGAME\":\r\n                  return (\r\n                    <div id=\"feedback-endGame-screen\">\r\n                      {state.score > 30 ? (\r\n                        <div id=\"feedback-end-panels\">\r\n                          <div id=\"feedback-painel-icon\">\r\n                            <img src={state.feedback.topAsset.url} alt=\"\" />\r\n                          </div>\r\n                          <div id=\"feedback-endgame-messages\">\r\n                            <div\r\n                              className=\"feedback-painel\"\r\n                              id=\"feedback-painel-1-win\"\r\n                            >\r\n                              <div className=\"feedback-painel-1-wrapper\">\r\n                                <div className=\"feedback-painel-1-content\">\r\n                                  <span lang=\"pt-br\">\r\n                                    {\" \"}\r\n                                    {state.feedback.text.replace(\r\n                                      \"xxxx\",\r\n                                      state.score\r\n                                    )}\r\n                                  </span>\r\n                                  <span lang=\"en\">\r\n                                    {state.feedback.textTranslate\r\n                                      .find((text) => text.language.id === lang)\r\n                                      .text.replace(\"xxxx\", state.score)}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                              {state.score < 100 && (\r\n                                <a\r\n                                  href=\"#feedback-painel-2\"\r\n                                  className=\"next-btn\"\r\n                                >\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              )}\r\n                            </div>\r\n                            {state.score < 100 && (\r\n                              <div\r\n                                className=\"feedback-painel\"\r\n                                id=\"feedback-painel-2\"\r\n                              >\r\n                                <div className=\"feedback-painel-2-wrapper\">\r\n                                  <div\r\n                                    className=\"feedback-painel-2-content\"\r\n                                    style={{\r\n                                      backgroundImage:\r\n                                        \"url(\" + blobLaranja + \")\",\r\n                                    }}\r\n                                  >\r\n                                    <div>\r\n                                      <span>{state.result}</span>/\r\n                                      <span>{state.totalFields}</span>\r\n                                    </div>\r\n                                    <div>correct items</div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"feedback-painel-2-wrapper\">\r\n                                  <div className=\"feedback-painel-2-content\">\r\n                                    <div>\r\n                                      <p>\r\n                                        You've had a hard time remembering your\r\n                                        friend's{\" \"}\r\n                                        {state.mainError.metricTranslate.text.toLowerCase()}\r\n                                        . I hope they don't mind.\r\n                                      </p>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <a\r\n                                  href=\"#feedback-painel-1-win\"\r\n                                  className=\"prev-btn\"\r\n                                >\r\n                                  {\"❮\"}\r\n                                </a>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div id=\"feedback-endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div id=\"feedback-endGame-wrong-wrapper\">\r\n                          <div>\r\n                            <div\r\n                              className=\"feedback-painel feedback-panel-1-defeat\"\r\n                              id=\"feedback-painel-1\"\r\n                            >\r\n                              <div id=\"feedback-painel-icon-derrota\">\r\n                                <img src={state.feedback.topAsset.url} alt=\"\" />\r\n                              </div>\r\n                              <span lang=\"pt-br\">\r\n                                {state.feedback.text.replace(\r\n                                  \"xxxx\",\r\n                                  state.score\r\n                                )}\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                {state.feedback.textTranslate\r\n                                  .find((text) => text.language.id === lang)\r\n                                  .text.replace(\"xxxx\", state.score)}\r\n                              </span>\r\n                            </div>\r\n                            <div\r\n                              className=\"feedback-painel\"\r\n                              id=\"feedback-painel-3\"\r\n                              style={{\r\n                                backgroundImage: \"url(\" + blobLowScore + \")\",\r\n                              }}\r\n                            >\r\n                              <div className=\"feedback-painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"feedback-painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.result}</span>/\r\n                                    <span>{state.totalFields}</span>\r\n                                  </div>\r\n                                  <div>correct</div>\r\n                                  <div>items</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"feedback-painel-2-wrapper\">\r\n                                <div className=\"feedback-painel-2-content\">\r\n                                  <div>\r\n                                    <p lang=\"pt-br\">\r\n                                      Lembrar o(a){\" \"}\r\n                                      {state.mainError.metric.toLowerCase()} dos\r\n                                      seus amigos foi o mais difícil pra você.\r\n                                      Espero que eles não se importem.\r\n                                    </p>\r\n                                    <p lang=\"en\">\r\n                                      You've had a hard time remembering your\r\n                                      friend's{\" \"}\r\n                                      {state.mainError.metricTranslate.text.toLowerCase()}\r\n                                      . I hope they don't mind.\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"feedback-endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {state.feedback.mobileBackground && (\r\n                        <div id=\"feedback-phone-div\">\r\n                          <div id=\"feedback-phone\">\r\n                            <img src={palma} alt=\"\" />\r\n                            <img src={bigPhone} alt=\"\" />\r\n                            <img\r\n                              src={state.feedback.mobileBackground.url}\r\n                              alt=\"\"\r\n                            />\r\n                            <img src={dedao} alt=\"\" />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                default:\r\n                  return <div>Error</div>;\r\n              }\r\n            })()}\r\n            {state.endGame && <Result gameEndState={state.gameEndState} />}\r\n            {state.tries > 0 && (\r\n              <div>\r\n                {state.tries} tentativa{state.tries > 1 ? \"s\" : \"\"}!\r\n              </div>\r\n            )}\r\n            {state.back && <Redirect to=\"/userspace\" />}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1;\r\n","import React from \"react\";\r\nimport { lamp_apagada, lamp_acesa } from \"../../img\";\r\nimport \"./index.scss\";\r\n\r\nconst AcusationLamp = ({ onClick }) => {\r\n  return (\r\n    <div id=\"acusar\" onClick={onClick}>\r\n      <span>É você!</span>\r\n      <img id=\"lamp-apagada\" src={lamp_apagada} alt=\"\"></img>\r\n      <img id=\"lamp-acesa\" src={lamp_acesa} alt=\"\"></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AcusationLamp;\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nconst initialState = (hasPlayed = false) => ({\r\n//GAME STATE\r\n  scene: \"INIT\",\r\n  currentRoom: 0,\r\n  isOnDialog: false,\r\n  endGame: false,\r\n  found: false,\r\n  locations:[],\r\n  tips: ['O engenheiro sabe'],\r\n  acusation: false,\r\n  closeAcusation: false,\r\n  tries: 0,\r\n  validQuestions: [],\r\n  tutorialStep: 0,\r\n  seeTutorial: true,\r\n  hasPlayed: hasPlayed,\r\n  checkedPlayed: hasPlayed,\r\n  tipsCount: 0,\r\n//DIALOG\r\n  dialogHistory: [],\r\n  dialogStep: 0,\r\n  characterFeeling: 'init',\r\n  totalDialogSteps: 2,\r\n  questionsByStep: 2,\r\n  currentChar: null,\r\n  showConvo: false,\r\n  questions: [],\r\n  targetName: 'Leila',\r\n  correct: 0,\r\n  ncorrect: 0,\r\n  correctMinimum: 2,\r\n  gameEndState: null,\r\n  score: 0,\r\n  startedTimestamp: new Date(Date.now()),\r\n  elapsedTime: null,\r\n  back: false,\r\n  spokenCharacters: [],\r\n})\r\n\r\nexport default initialState\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport RoomSelect from \"../../_components/RoomSelect\";\r\nimport Sala from \"../../_components/Sala\";\r\nimport Character from \"../../_components/Character\";\r\nimport AcusationLamp from \"../../_components/AcusationLamp\";\r\nimport Conversa from \"../../_components/Conversa\";\r\nimport DialogCharacter from \"../../_components/DialogCharacter\";\r\nimport FullscreenOverlay from \"../../_components/FullscreenOverlay\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport initialState from \"./initialState\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {\r\n  iconVitoriaPers,\r\n  iconVitoriaPrim,\r\n  iconDerrota,\r\n  iconDicas,\r\n  blobAzul,\r\n  blobLaranja,\r\n  blobVerde,\r\n  dedao,\r\n  palma,\r\n  bloco,\r\n  blocoButton,\r\n} from \"../../img\";\r\n\r\nimport \"./index.scss\";\r\nimport \"./tela-acusacao.scss\";\r\nimport \"./tela-fim-jogo.scss\";\r\nimport \"./tela-tutorial.scss\";\r\n\r\nconst Game2 = (props) => {\r\n  const [state, setState] = React.useState(initialState());\r\n\r\n  const id = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n  let error = useSelector((state) => state.missions.error);\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  const missionData = mission ? mission.missionData : null;\r\n  const loading = useSelector((state) => state.missions.loading);\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const hasPlayed = useSelector((state) =>\r\n    state.game.items.resultsCount ? state.game.items.resultsCount > 0 : false\r\n  );\r\n  const dialogInitialState = {\r\n    dialogHistory: [],\r\n    dialogStep: 0,\r\n    correct: 0,\r\n    characterFeeling: \"init\",\r\n    preSpeech: null,\r\n    convOptions: [],\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (mission) dispatch(musicActions.set(mission.backgroundAudio.url));\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  // check if user already played the game\r\n  React.useEffect(() => {\r\n    let updatedState = {};\r\n    if (mission && !state.checkedPlayed) {\r\n      dispatch(\r\n        gameActions.find(\"results/count\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n        })\r\n      );\r\n      updatedState.checkedPlayed = true;\r\n    }\r\n\r\n    if (hasPlayed) setState({ ...state, ...updatedState, hasPlayed });\r\n\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, hasPlayed]);\r\n\r\n  //track player actions\r\n  React.useEffect(() => {\r\n    if ((mission && !mission.trackPlayerInput) || !currentPlaySession) return;\r\n\r\n    const getClickedObject = (e) => {\r\n      dispatch(\r\n        play_sessionsActions.update(\r\n          { id: currentPlaySession.id,\r\n            data: {\r\n              actions:\r\n              [...currentPlaySession.data.actions,\r\n                {\r\n                  tag: e.target.nodeName,\r\n                  src: e.target.src,\r\n                  alt: e.target.alt,\r\n                  className: e.target.className,\r\n                  class: e.target.class,\r\n                  id: e.target.id,\r\n                  innerHTML: e.target.innerHTML.includes(\"<div\")\r\n                    ? null\r\n                    : e.target.innerHTML,\r\n                  clickTime: new Date(),\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        )\r\n      );\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", getClickedObject);\r\n\r\n    setState((s) => {\r\n      return { ...s, currentPlaySession, getClickedObject };\r\n    });\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", getClickedObject);\r\n    };\r\n  }, [dispatch, play_sessionsActions, state.tracking, currentPlaySession, mission]);\r\n  /*//Testing tool\r\n\tif(error){\r\n\t\terror = null\r\n\t\tmission = stub\r\n\t}\r\n\t*/\r\n\r\n  //Randomizar personagens para aparecer nas salas\r\n  //\tEnquanto houver personagens na lista de personagens disponíveis\r\n  //\t\tEscolhe um local ao acaso\r\n  //\t\tEscolhe um personagem dentre a lista de personagens disponíveis ao acaso\r\n  //\t\tAdiciona personagem ao local\r\n  //\t\tRetira personagem da lista de personagens disponíveis\r\n\r\n  React.useEffect(() => {\r\n    if (missionData && state.locations.length === 0) {\r\n      // safe copies\r\n      let availableCharacters = missionData.missionCharacters.slice(0);\r\n      let locations = missionData.locations.map((location) => {\r\n        delete location.characters;\r\n        return { location: location, missionCharacters: [] };\r\n      });\r\n\r\n      let tutorialRoom = missionData.tutorial;\r\n\r\n      //distribute on locations\r\n      while (availableCharacters.length > 0) {\r\n        // sorteia sala aleatoriamente com pesos que diminuem dependendo de quantos personagens já se tem\r\n        let totalWeight = 0;\r\n        let crowdestRoomPop = 0;\r\n        let emptiestRoomPop = 999;\r\n        const minPerRoom = 1;\r\n        const maxPerRoom = 5;\r\n        locations.forEach((location) => {\r\n          crowdestRoomPop = Math.max(\r\n            location.missionCharacters.length,\r\n            crowdestRoomPop\r\n          );\r\n          emptiestRoomPop = Math.min(\r\n            location.missionCharacters.length,\r\n            emptiestRoomPop\r\n          );\r\n        });\r\n\r\n        const maxWeight = (() => {\r\n          if (emptiestRoomPop < minPerRoom) return minPerRoom;\r\n          else if (emptiestRoomPop < maxPerRoom) return maxPerRoom;\r\n          else return crowdestRoomPop + 1;\r\n        })();\r\n\r\n        totalWeight = 0;\r\n        const weights = locations.map((location) => {\r\n          let weight = maxWeight - location.missionCharacters.length;\r\n          totalWeight += weight;\r\n          return weight;\r\n        });\r\n\r\n        let rand = Math.floor(Math.random() * totalWeight);\r\n        let i = 0;\r\n        while (rand >= 0) rand -= weights[i++];\r\n        const locationIndex = i - 1;\r\n\r\n        //each character has some good and bad questions that can be asked\r\n        let availableAnswers = [...availableCharacters[0].answers];\r\n        let correct = availableAnswers.filter(\r\n          (answer) => answer.question.correct\r\n        );\r\n        let ncorrect = availableAnswers.filter(\r\n          (answer) => !answer.question.correct\r\n        );\r\n\r\n        let selectedQuestions = [];\r\n        // ? E se correct/ncorrect não tiveram a quantidade necessária de perguntas?\r\n        while (selectedQuestions.length < 6) {\r\n          let source = selectedQuestions.length % 2 === 0 ? correct : ncorrect;\r\n          let index = Math.floor(Math.random(0, source.length));\r\n          selectedQuestions.push(source[index]);\r\n          source.splice(index, 1);\r\n        }\r\n\r\n        // Aleatorizando para que nem sempre venham as perguntas na ordem certo->errado\r\n        if (Math.floor(Math.random(0, 1) < 0.5)) {\r\n          let temp = selectedQuestions[0];\r\n          selectedQuestions[0] = selectedQuestions[1];\r\n          selectedQuestions[1] = temp;\r\n        }\r\n        if (Math.floor(Math.random(0, 1) > 0.5)) {\r\n          let temp = selectedQuestions[2];\r\n          selectedQuestions[2] = selectedQuestions[3];\r\n          selectedQuestions[3] = temp;\r\n        }\r\n\r\n        locations[locationIndex].missionCharacters = [\r\n          ...locations[locationIndex].missionCharacters,\r\n          {\r\n            ...availableCharacters[0],\r\n            selectedQuestions,\r\n            zDepth: Math.random(),\r\n          },\r\n        ];\r\n\r\n        availableCharacters.splice(0, 1);\r\n      }\r\n\r\n      // Aleatorizando ordem dos personagens em cada sala\r\n      for (let i = 0; i < locations.length; i++) {\r\n        let amountChars = locations[i].missionCharacters.length;\r\n        if (amountChars <= 1) continue;\r\n        for (let j = 0; j < amountChars - 1; j++) {\r\n          let exchangeWith = Math.floor(Math.random() * (amountChars - j)) + j;\r\n          if (j === exchangeWith) continue; // Não precisa trocar se for consigo mesmo\r\n          //swap\r\n          let aux = locations[i].missionCharacters[j];\r\n          locations[i].missionCharacters[j] =\r\n            locations[i].missionCharacters[exchangeWith];\r\n          locations[i].missionCharacters[exchangeWith] = aux;\r\n        }\r\n      }\r\n      const tipsCount =\r\n        missionData.missionCharacters.filter((missionCharacter) => {\r\n          return missionCharacter.tip;\r\n        }).length + 1;\r\n      setState((state) => {\r\n        return { ...state, locations, tutorialRoom, tipsCount };\r\n      });\r\n    }\r\n  }, [missionData, state.locations]);\r\n\r\n  const onStartGame = (e) => {\r\n    if (mission.trackPlayerInput) {\r\n      dispatch(\r\n        play_sessionsActions.create({\r\n          user: userId,\r\n          mission: mission.id,\r\n          data:{actions:[]}\r\n        })\r\n      );\r\n    }\r\n    //check if should start or skip tutorial\r\n    setState({ ...state, scene: \"TUTORIAL\" });\r\n  };\r\n\r\n  const endTutorial = () => {\r\n    let updateState = {\r\n      showConvo: false,\r\n      currentChar: null,\r\n      scene: \"ROOM\",\r\n      ...dialogInitialState,\r\n    };\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const setTutorialCharacter = (tutorialCharacter) => () => {\r\n    setState({\r\n      ...state,\r\n      tutorialStep: state.tutorialStep + 1,\r\n      showConvo: true,\r\n      currentChar: tutorialCharacter.character,\r\n      convOptions: tutorialCharacter.answers.map((answer) => {\r\n        return {\r\n          ...answer,\r\n          answer: answer.answer.split(\";\"),\r\n        };\r\n      }),\r\n    });\r\n  };\r\n\r\n  //shows only selected questions\r\n  const setCurrentCharacter = (character) => () => {\r\n    setState({\r\n      ...state,\r\n      showConvo: true,\r\n      currentChar: character,\r\n      dialogStep: 0,\r\n      convOptions: state.locations[state.currentRoom].missionCharacters\r\n        .find((c) => c.character.id === character.character.id)\r\n        .selectedQuestions.slice(0, state.questionsByStep),\r\n    });\r\n  };\r\n\r\n  const closeDialog = (dialogHistory) => {\r\n    setState({\r\n      ...state,\r\n      ...dialogInitialState,\r\n      showConvo: false,\r\n      shouldCloseConvo: false,\r\n      currentChar: null,\r\n    });\r\n  };\r\n\r\n  const afterWriter = () => {\r\n    if (state.scene === \"TUTORIAL\") {\r\n      setTimeout(() => {\r\n        setState({\r\n          ...state,\r\n          tutorialStep: state.tutorialStep + 1,\r\n        });\r\n      }, 1500);\r\n    } else {\r\n      let updateState = {};\r\n      if (state.dialogStep < state.totalDialogSteps) {\r\n        updateState.convOptions = state.locations[\r\n          state.currentRoom\r\n        ].missionCharacters\r\n          .find((mc) => mc.character.id === state.currentChar.character.id)\r\n          .selectedQuestions.slice(\r\n            state.questionsByStep * state.dialogStep,\r\n            state.questionsByStep * (state.dialogStep + 1)\r\n          );\r\n      } else if (state.dialogStep === state.totalDialogSteps) {\r\n        if (state.correct < state.correctMinimum) {\r\n          updateState.preSpeech = state.currentChar.wrongEndAnswer;\r\n          updateState.convOptions = [\r\n            { refresh: true, question: { question: \"Sim\" } },\r\n            {\r\n              close: true,\r\n              question: { question: \"Não\" },\r\n              answer: state.currentChar.endDialog,\r\n            },\r\n          ];\r\n        } else {\r\n          updateState.convOptions = [\r\n            {\r\n              tip: state.currentChar.tip,\r\n              question: {\r\n                question: \"Estou procurando alguém. Você pode me ajudar?\",\r\n              },\r\n              answer: state.currentChar.rightEndAnswer,\r\n              correct: true,\r\n            },\r\n          ];\r\n        }\r\n      } else {\r\n        const tchaus = [\r\n          \"Ah tá, tchau!\",\r\n          \"Ok. Valeu!\",\r\n          \"Tchau!\",\r\n          \"Até mais!\",\r\n          \"Entendi... Muito obrigado!\",\r\n          \"Até logo!\",\r\n          \"Até a próxima!\",\r\n        ];\r\n        const rIdx = Math.floor(Math.random() * tchaus.length);\r\n        updateState.convOptions = [\r\n          {\r\n            close: true,\r\n            question: { question: tchaus[rIdx], correct: true },\r\n            answer: state.currentChar.endDialog,\r\n          },\r\n        ];\r\n      }\r\n      if (state.closeAfterWritter) {\r\n        delete state.closeAfterWritter;\r\n        updateState.convOptions = [];\r\n        updateState.shouldCloseConvo = true;\r\n      }\r\n      setState({ ...state, ...updateState });\r\n    }\r\n  };\r\n\r\n  const onRefreshDialog = () => {\r\n    setState({\r\n      ...state,\r\n      ...dialogInitialState,\r\n      refreshDialog: null,\r\n      convOptions: state.locations[state.currentRoom].missionCharacters\r\n        .find((c) => c.character.id === state.currentChar.character.id)\r\n        .selectedQuestions.slice(0, state.questionsByStep),\r\n    });\r\n  };\r\n\r\n  const onMenuButtonClick = (answer) => {\r\n    let updateState = {};\r\n\r\n    if (answer.tip && state.tips.indexOf(answer.tip) === -1)\r\n      updateState = { ...updateState, tips: [...state.tips, answer.tip] };\r\n\r\n    if (answer.refresh)\r\n      updateState = { ...updateState, refreshDialog: onRefreshDialog };\r\n    else if (answer.close)\r\n      updateState = { ...updateState, closeAfterWritter: true };\r\n    else {\r\n      if (state.scene === \"TUTORIAL\") {\r\n        updateState = {\r\n          ...updateState,\r\n          characterFeeling: \"wrongQuestion\",\r\n          convOptions: [],\r\n        };\r\n      } else {\r\n        updateState = {\r\n          ...updateState,\r\n          spokenCharacters: state.spokenCharacters,\r\n          validQuestions: state.validQuestions,\r\n          characterFeeling: null,\r\n        };\r\n        if (\r\n          updateState.spokenCharacters.indexOf(\r\n            state.currentChar.character.name\r\n          ) === -1\r\n        )\r\n          updateState.spokenCharacters.push(state.currentChar.character.name);\r\n\r\n        //change character face\r\n        if (answer.correct) {\r\n          if (updateState.validQuestions.hasOwnProperty(answer.question)) {\r\n            updateState.validQuestions[answer.question]++;\r\n          } else {\r\n            updateState.validQuestions[answer.question] = 0;\r\n          }\r\n          updateState.characterFeeling = \"rightQuestion\";\r\n        } else {\r\n          updateState.characterFeeling = \"wrongQuestion\";\r\n        }\r\n      }\r\n\r\n      updateState = {\r\n        ...updateState,\r\n        dialogStep: state.dialogStep + 1,\r\n        correct: state.correct + (answer.correct ? 1 : 0),\r\n      };\r\n    }\r\n\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const checkEnd = () => {\r\n    setState({\r\n      ...state,\r\n      acusation: false,\r\n      scene: \"ENDGAME\",\r\n      gameEndState: state.currentChar.character.name === state.targetName,\r\n      characterFeeling:\r\n        state.currentChar.character.name === state.targetName\r\n          ? \"rightAccusation\"\r\n          : \"wrongAccusation\",\r\n      currentChar: null,\r\n    });\r\n\r\n    //aqui\r\n    dispatch(\r\n      gameActions.create(\"results\", {\r\n        user: userId,\r\n        mission: mission.id,\r\n        score: state.score,\r\n        tipsCount: state.tips.length,\r\n        spokenCharactersCount: state.spokenCharacters.length,\r\n        won: state.gameEndState,\r\n        validQuestionsCount: Object.keys(state.validQuestions).length,\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n  };\r\n\r\n  const tutorialScreen = (id) => {\r\n    return (\r\n      <div id=\"room-itself\" className=\"tutorial\">\r\n        <Sala roomData={state.tutorialRoom.location} key={-1}>\r\n          <Character\r\n            character={state.tutorialRoom.character}\r\n            onClick={setTutorialCharacter(state.tutorialRoom)}\r\n          />\r\n          <div className=\"abs-fix\">\r\n            <div id=\"tutorial-popup-1\">\r\n              <span lang=\"pt-br\">\r\n                Selecione alguém para conversar e te ajudar a encontrar o seu\r\n                guia.\r\n              </span>\r\n              <span lang=\"en\">\r\n                Select someone to talk and help you find your guide.\r\n              </span>\r\n              {hasPlayed ? (\r\n                <button\r\n                  className=\"btn btn-center\"\r\n                  id=\"btn-tutorial\"\r\n                  onClick={() => {\r\n                    setState({ ...state, scene: \"ROOM\" });\r\n                  }}\r\n                >\r\n                  Skip tutorial\r\n                </button>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </Sala>\r\n        {state.showConvo && (\r\n          <Conversa\r\n            onExited={() => {\r\n              setState({\r\n                ...state,\r\n                showConvo: false,\r\n                tutorialStep: state.tutorialStep - 1,\r\n              });\r\n            }}\r\n            convOptions={state.convOptions.reduce((acc, convOption) => {\r\n              let option = {\r\n                ...convOption,\r\n                answers: convOption.answer,\r\n                question: convOption.question.question,\r\n              };\r\n              delete option.answer;\r\n              return [...acc, option];\r\n            }, [])}\r\n            currentChar={state.currentChar}\r\n            charFeeling={state.characterFeeling}\r\n            afterWriter={afterWriter}\r\n            onConvoChoiceMade={onMenuButtonClick}\r\n          />\r\n        )}\r\n        {id === 2 && (\r\n          <div id=\"tutorial-popup-2-wrapper\">\r\n            <div id=\"tutorial-popup-2-content\">\r\n              <span lang=\"pt-br\">\r\n                <strong>Lembre-se:</strong> As pessoas estão ocupadas em seus\r\n                ambientes de trabalho, então tenha certeza de não gastar o tempo\r\n                delas com perguntas fora de contexto!\r\n              </span>\r\n              <span lang=\"en\">\r\n                <strong>Remember:</strong> People are busy in their workplaces,\r\n                so be sure not to waste their times with question that are out\r\n                of yout context!\r\n              </span>\r\n              <button\r\n                className=\"btn btn-center\"\r\n                id=\"btn-end-tutorial\"\r\n                onClick={endTutorial}\r\n              >\r\n                Continuar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(true, true) });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  return (\r\n    <div id=\"game2-wrapper\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        mission && (\r\n          <div id=\"game2-content\">\r\n            {/*<div id=\"input-tracker\">TrackInput: <input type=\"checkbox\" onChange={(e) => { setState({ ...state, tracking: e.target.checked }) }} /></div>*/}\r\n            {(function renderScene() {\r\n              // eslint-disable-next-line default-case\r\n              switch (state.scene) {\r\n                case \"INIT\":\r\n                  return (\r\n                    <Init\r\n                      icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                      name={mission.name}\r\n                      description={mission.description}\r\n                      nameTranslate={\r\n                        mission.nameTranslate.find((name) => {\r\n                          return name.language.id === lang;\r\n                        }).name\r\n                      }\r\n                      descriptionTranslate={\r\n                        mission.descriptionTranslate.find((description) => {\r\n                          return description.language.id === lang;\r\n                        }).description\r\n                      }\r\n                      onStart={onStartGame}\r\n                      onBack={() => setState({ ...state, back: true })}\r\n                      ready={state.tutorialRoom ? true : false}\r\n                    />\r\n                  );\r\n                case \"TUTORIAL\":\r\n                  return tutorialScreen(state.tutorialStep);\r\n                case \"ROOM\":\r\n                  return (\r\n                    <div id=\"room-itself\">\r\n                      <RoomSelect\r\n                        buttonList={state.locations.map(\r\n                          (location, index) => index\r\n                        )}\r\n                        onChange={(num) => {\r\n                          setState({ ...state, currentRoom: num });\r\n                        }}\r\n                      />\r\n                      {/* //? Pq sala recebe a location inteira? Se ela só precisa saber a imagem de fundo,\r\n\t\t\t\t\t\t\t\t\t\t//? pq passar tudo ao invés de só passar a string? Que aí poderia ser local ou na rede... */}\r\n                      {state.showTips ? (\r\n                        <FullscreenOverlay\r\n                          style={{ zIndex: 100 }}\r\n                          onClickClose={() =>\r\n                            setState({ ...state, showTips: false })\r\n                          }\r\n                        >\r\n                          <div>\r\n                            <div id=\"big-phone-wrapper\">\r\n                              <div id=\"big-phone-imgs\">\r\n                                <img src={palma} alt=\"hand\" />\r\n                                <img\r\n                                  style={{ marginLeft: \"22.5%\" }}\r\n                                  src={bloco}\r\n                                  alt=\"note\"\r\n                                />\r\n                                <img src={dedao} alt=\"thumb\" />\r\n                              </div>\r\n                              <div id=\"big-phone-screen-wrapper\">\r\n                                <div\r\n                                  id=\"big-phone-screen-content\"\r\n                                  className=\"section-title\"\r\n                                >\r\n                                  <span lang=\"pt-br\">Dicas:</span>\r\n                                  <div>\r\n                                    {state.tips.map((tip, index) => (\r\n                                      <div\r\n                                        key={index}\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          padding: \"10%\",\r\n                                          width: \"100%\",\r\n                                        }}\r\n                                      >\r\n                                        <div>{tip}</div>\r\n                                        <hr />\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </FullscreenOverlay>\r\n                      ) : (\r\n                        <Button\r\n                          style={{ position: \"absolute\" }}\r\n                          onClick={() => setState({ ...state, showTips: true })}\r\n                        >\r\n                          <img\r\n                            style={{ width: 90 }}\r\n                            src={blocoButton}\r\n                            alt=\"tips\"\r\n                          />\r\n                        </Button>\r\n                      )}\r\n                      <Sala\r\n                        roomData={state.locations[state.currentRoom].location}\r\n                        key={state.currentRoom}\r\n                      >\r\n                        {state.locations[\r\n                          state.currentRoom\r\n                        ].missionCharacters.map((missionCharacter, index) => (\r\n                          <Character\r\n                            key={index}\r\n                            zDepth={missionCharacter.zDepth}\r\n                            character={missionCharacter.character}\r\n                            onClick={setCurrentCharacter(missionCharacter)}\r\n                            // showNameOnHover={true} descomentar linha se quiser que os nomes dos personagens apareça sob hover do mouse\r\n                          />\r\n                        ))}\r\n                      </Sala>\r\n                      {state.showConvo && (\r\n                        <Conversa\r\n                          shouldExit={state.shouldCloseConvo}\r\n                          prevDialogHistory={[]}\r\n                          onClearDialogHistory={state.refreshDialog}\r\n                          charPreSpeech={state.preSpeech}\r\n                          convOptions={state.convOptions.reduce(\r\n                            (acc, convOption) => {\r\n                              let option = {\r\n                                ...convOption,\r\n                                ...convOption.question,\r\n                                answers: convOption.answer,\r\n                              };\r\n                              delete option.answer;\r\n                              return [...acc, option];\r\n                            },\r\n                            []\r\n                          )}\r\n                          currentChar={state.currentChar.character}\r\n                          charFeeling={state.characterFeeling}\r\n                          afterWriter={afterWriter}\r\n                          onExited={closeDialog}\r\n                          onConvoChoiceMade={onMenuButtonClick}\r\n                        >\r\n                          <AcusationLamp\r\n                            onClick={() =>\r\n                              setState({ ...state, acusation: true })\r\n                            }\r\n                          />\r\n                        </Conversa>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                case \"ENDGAME\":\r\n                  return (\r\n                    <div id=\"endGame-screen\">\r\n                      {state.gameEndState ? (\r\n                        <div id=\"end-panels\">\r\n                          <div id=\"painel-icon\">\r\n                            <img\r\n                              src={\r\n                                state.tries === 0\r\n                                  ? iconVitoriaPrim\r\n                                  : iconVitoriaPers\r\n                              }\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div id=\"endgame-messages\">\r\n                            {state.tries === 0 ? (\r\n                              <div className=\"painel\" id=\"painel-1\">\r\n                                <div className=\"painel-1-wrapper\">\r\n                                  <div className=\"painel-1-content\">\r\n                                    <span lang=\"pt-br\">\r\n                                      Muito bem! Você encontrou a pessoa na\r\n                                      primeira tentativa. Vai arrasar na sua\r\n                                      nova carreira!\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      Well done! You have found the right person\r\n                                      on your first try. You're going to rock on\r\n                                      your new career!\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                                <a href=\"#painel-2\" className=\"next-btn\">\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"painel\" id=\"painel-1\">\r\n                                <div className=\"painel-1-wrapper\">\r\n                                  <div className=\"painel-1-content\">\r\n                                    <span lang=\"pt-br\">\r\n                                      Você encontrou a pessoa certa! Parabéns!\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      You have found the right person! Congrats!\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                                <a href=\"#painel-2\" className=\"next-btn\">\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              </div>\r\n                            )}\r\n                            <div className=\"painel\" id=\"painel-2\">\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage:\r\n                                      \"url(\" +\r\n                                      (state.tips.length === state.tipsCount\r\n                                        ? blobAzul\r\n                                        : blobVerde) +\r\n                                      \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.tips.length ?? 0}</span>/\r\n                                    <span>{state.tipsCount}</span>\r\n                                  </div>\r\n                                  <div>clues</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div className=\"painel-2-content\">\r\n                                  <div>\r\n                                    <p>\r\n                                      After talking to{\" \"}\r\n                                      {state.spokenCharacters.length} people,\r\n                                      you found {state.tips.length} of the{\" \"}\r\n                                      {state.tipsCount} existing clues.\r\n                                    </p>\r\n                                    <p>\r\n                                      Regarding the questions you asked,{\" \"}\r\n                                      {Object.keys(state.validQuestions).length}{\" \"}\r\n                                      of them were useful.\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <a href=\"#painel-1\" className=\"prev-btn\">\r\n                                {\"❮\"}\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div id=\"endGame-wrong-wrapper\">\r\n                          <div>\r\n                            <div className=\"painel\" id=\"painel-1\">\r\n                              <div id=\"painel-icon-derrota\">\r\n                                <img src={iconDerrota} alt=\"\" />\r\n                              </div>\r\n                              <span lang=\"pt-br\">\r\n                                Você ainda não encontrou a pessoa certa. Como\r\n                                você vai entender o que deve ser feito em seu\r\n                                novo trabalho? Você ainda precisa descobrir\r\n                                algumas dicas.\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                You still haven't found the right person. How\r\n                                will you understand what has to be done in your\r\n                                new job? There are clues yet to be found.\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"painel\" id=\"painel-3\">\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.tips.length ?? 0}</span>/\r\n                                    <span>{state.tipsCount}</span>\r\n                                  </div>\r\n                                  <div>clues</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div className=\"painel-2-content\">\r\n                                  <div>\r\n                                    <p>\r\n                                      After talking to{\" \"}\r\n                                      {state.spokenCharacters.length} people,\r\n                                      you found {state.tips.length} of the{\" \"}\r\n                                      {state.tipsCount} existing clues.\r\n                                    </p>\r\n                                    <p>\r\n                                      Regarding the questions you asked,{\" \"}\r\n                                      {Object.keys(state.validQuestions).length}{\" \"}\r\n                                      of them were useful. Try asking more\r\n                                      relevant questions!\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {state.gameEndState && (\r\n                        <DialogCharacter\r\n                          character={\r\n                            missionData.missionCharacters.find((mc) => {\r\n                              return mc.character.name === state.targetName;\r\n                            }).character\r\n                          }\r\n                          feeling={\"win\"}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  );\r\n              }\r\n            })()}\r\n            {state.acusation && (\r\n              <FullscreenOverlay\r\n                showCloseBtn={false}\r\n                shouldExit={state.closeAcusation}\r\n                onReadyToExit={() => {\r\n                  setState({\r\n                    ...state,\r\n                    closeAcusation: false,\r\n                    acusation: false,\r\n                  });\r\n                }}\r\n              >\r\n                <div id=\"dialog-accusation-wrapper\">\r\n                  <div id=\"dialog-accusation\">\r\n                    <div id=\"accusation-infos\">\r\n                      <div>\r\n                        <span lang=\"pt-br\">Tem certeza?</span>\r\n                        <span lang=\"en\">\r\n                          Are you sure it's them?\r\n                          <br />\r\n                          Check your tips.\r\n                        </span>\r\n                      </div>\r\n                      <div id=\"tips-received\">\r\n                        <div id=\"accusation-icon\">\r\n                          <img src={iconDicas} alt=\"\" />\r\n                        </div>\r\n                        {state.tips.length > 0 ? (\r\n                          state.tips.map((tip, index) => (\r\n                            <div key={index}>{tip}</div>\r\n                          ))\r\n                        ) : (\r\n                          <div>Nenhuma dica recebida.</div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div id=\"accusation-btns\">\r\n                      <Button\r\n                        onClick={() =>\r\n                          setState({ ...state, closeAcusation: true })\r\n                        }\r\n                      >\r\n                        Não\r\n                      </Button>\r\n                      <Button onClick={checkEnd}>Sim</Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </FullscreenOverlay>\r\n            )}\r\n          </div>\r\n        )\r\n      )}\r\n      {state.back && <Redirect to=\"/userspace\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game2;\r\n","const initialState = (checkedPlayed) => {\r\n  return {\r\n    scene: \"INIT\",\r\n    cart: [],\r\n    tutorialRoom: {},\r\n    recipe: {},\r\n    ingredientsList: [],\r\n    aisles: [],\r\n    currentAisle: 0,\r\n    checkout: false,\r\n    onPayment: false,\r\n    payment: [],\r\n    win: false,\r\n    change: null,\r\n    runTimer: true,\r\n    remainingTime: 0,\r\n    initTime: 0,\r\n    checkedPlayed: checkedPlayed,\r\n    moneySelection: false,\r\n  };\r\n};\r\n\r\nexport default initialState;\r\n","import React from \"react\";\r\nimport { zeroFill } from \"../../_helpers\";\r\nimport \"./index.scss\";\r\n\r\nconst Timer = ({ seconds, onEnd, onStop, run = true , ...props}) => {\r\n  const [state, setState] = React.useState({\r\n    seconds: seconds,\r\n    timeout: null,\r\n    sentRemaning: false,\r\n  });\r\n  const previousRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (state === previousRef.current && state.seconds !== seconds) {\r\n      //console.log('external side effect update')***\r\n      return;\r\n    }\r\n\r\n    if (!run && !state.sentRemaning) {\r\n      onStop(state.seconds);\r\n      setState({ ...state, sentRemaning: true });\r\n    } else if (run && state.sentRemaning)\r\n      setState({ ...state, sentRemaning: false });\r\n\r\n    if (!run) {\r\n      return state.timeout ? () => clearTimeout(state.timeout) : null;\r\n    }\r\n\r\n    if (state.seconds === 0) {\r\n      if (onEnd) onEnd(state.seconds);\r\n    } else if (state.seconds > 0) {\r\n      previousRef.current = state;\r\n      let timeout = setTimeout(() => {\r\n        setState({ seconds: state.seconds - 1, timeout: timeout });\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(state.timeout);\r\n    }\r\n  }, [state, onEnd, onStop, run, seconds]);\r\n\r\n  return (\r\n    <div id=\"timer\" {...props}>\r\n      {zeroFill(Math.floor(state.seconds / 60).toString(), 2)}:\r\n      {zeroFill((state.seconds % 60).toString(), 2)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n\r\n/***\r\n    Internal setState causes Timer component to update.\r\n    onSecondPassed may cause an external setState, leading to an update which could reupdate Timer component.\r\n\r\n    To prevent useEffect of entering the if statement responsable for setTimeout call, which leads to double that frame setTimeout callback,\r\n    previous state is compared to the new state.\r\n\r\n    In the first run, new state is in fact equal to current state.\r\n    In this case, the entering seconds value is verified.\r\n*/\r\n","import React from \"react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nimport { shelf } from \"../../img\";\r\n\r\nconst Aisle = ({ products, addProduct, toPreviousAisle, toNextAisle }) => {\r\n\t// const [state, setState] = React.useState({ seconds: seconds, timeout: null });\r\n\r\n\treturn (\r\n\t\t<div id={styles.aisle}>\r\n\t\t\t<button className={styles.btnChangeAisle + \" btn-change-aisle\"} onClick={toPreviousAisle}>{\"❮\"}</button>\r\n\t\t\t<div id={styles.shelves}>\r\n\t\t\t\t<img src={shelf} alt=\"\"/>\r\n\t\t\t\t<div className={styles.items}>\r\n\t\t\t\t\t{products.map((product, index) => (\r\n\t\t\t\t\t\t[<div className={styles.products} key={index*2}>\r\n\t\t\t\t\t\t\t{[...Array(10)].map((element, index) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tonClick={addProduct(product.name)}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.tooltip}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img src={product.shelfImage} alt=\"\"/>\r\n\t\t\t\t\t\t\t\t\t<span className={styles.tooltiptext}>{product.tooltip}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t<span key={index*2+1} className={styles.shelfPrice}>{product.tag}</span>]\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button className={styles.btnChangeAisle + \" btn-change-aisle\"} onClick={toNextAisle}>{\"❯\"}</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Aisle;\r\n","import React from 'react'\r\n\r\nconst style = (alternative) => ({\r\n  backgroundColor: alternative? '#59316D' : '#535c89',\r\n\tborderRadius: '0 2.5em 0 0',\r\n\theight: '35%',\r\n\tpadding: \"1.5em\",\r\n\tmarginBottom: \"9em\",\r\n\tboxShadow: '7px 7px 0px 0px #77777750',\r\n\ttransition: '50ms ease-in-out',\r\n\toverflow: 'visible',\r\n  position: 'absolute',\r\n  bottom: '0px',\r\n  left: '15%',\r\n  width: '80%'\r\n})\r\n\r\nconst DialogBox = (props) => {\r\n  return(\r\n    <div style={style(props.alternative)}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogBox\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst DialogCharacter = ({character, feeling, ...props}) => {\r\n  let characterImg = \"\"\r\n\r\n  if( !(character == null) ) {\r\n    if( character.characterAssets.length > 0 ) {\r\n      characterImg = character.characterAssets\r\n        .find(asset => asset.bodyPart === 'upperBody' && asset.type === feeling)\r\n        .image.url\r\n    }\r\n  }\r\n\r\n  return(\r\n    <img id=\"Chef\" src={characterImg} alt=\"Character Portrait\" {...props}/>\r\n  )\r\n}\r\n\r\nexport default DialogCharacter\r\n","import React from 'react'\r\nimport DialogBox from '../../../../_components/DialogBox'\r\nimport Button from '../../../../_components/Button'\r\nimport DialogCharacter from '../DialogCharacter'\r\nimport Writer from '../../../../_components/Writer'\r\nimport './index.scss'\r\n// import { LineWeight } from '@material-ui/icons'\r\n\r\nconst msPerCharacter = 30;\r\nconst waitAfterWritten = 1000;\r\n\r\nconst ChefDialog = ({hideDialog, onContinue, text, translation, chef, ...props}) => {\r\n  const [state, setState] = React.useState({writerDone: false})\r\n  const onWriterDone = () => setState({...state, writerDone: true})\r\n  let chefStyles =  {position: 'absolute', left:0, bottom: 0, zIndex: 2, width: '43%'}\r\n\r\n  console.log('props:', props)\r\n  if(props.chefStyles)\r\n    chefStyles = {...chefStyles, ...props.chefStyles }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!hideDialog &&\r\n        <DialogBox alternative>\r\n          <div style={{paddingTop: '2%', paddingLeft: '30%'}}>\r\n            <div style={{fontSize: \"3.2em\"}}>\r\n              <Writer text={text} style={{fontSize: '1em', paddingLeft: 0}}\r\n\t\t\t\t\t\t\t\tonWritten={onWriterDone}\r\n\t\t\t\t\t\t\t\tafterWrittenTime={waitAfterWritten}\r\n\t\t\t\t\t\t\t\tcharacterTime={msPerCharacter}\r\n\t\t\t\t\t\t\t/>\r\n              {state.writerDone &&\r\n                <hr className=\"stretchIn\" style={{width: '10%', borderColor: '#F9AFA1'}}/>\r\n              }\r\n              {state.writerDone &&\r\n                <div className='instructionText translation' lang=\"en\">\r\n                  {translation}\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n          {state.writerDone &&\r\n            <Button onClick={onContinue} blink\r\n            id=\"btn-start\"\r\n              style={{fontSize: '2.5em', position: 'absolute', right: '30px', bottom: '-20px', fontWeight: 800, padding: \"0.72em 1.43em\"}}\r\n            >\r\n              Continuar\r\n            </Button>\r\n          }\r\n        </DialogBox>\r\n      }\r\n      <DialogCharacter character={chef} feeling=\"init\" style={chefStyles}/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n//\r\n\r\nexport default ChefDialog\r\n","import React from 'react'\r\n// import { ingredientsListBg } from '../../../../img'\r\n// import parse from \"html-react-parser\"\r\n// import marked from \"marked\"\r\n\r\nimport './index.scss'\r\n\r\nconst IngredientList = ({children, ...props}) => {\r\n  return(\r\n    <div className=\"ingredientList\" {...props}>\r\n      <div style={{position: 'absolute', fontSize: '1.2em'}}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default IngredientList\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Button from '../../../../_components/Button'\r\n\r\n// import DialogCharacter from \"../../../../_components/DialogCharacter\";\r\n// import DialogBox from '../../../../_components/DialogBox'\r\nimport { kitchen, recipeBgRound } from \"../../../../img\";\r\nimport ChefDialog from '../ChefDialog'\r\nimport IngredientList from '../IngredientList'\r\n\r\nconst instructionText=(recipeName, recipeNameTranslate)=> ({\r\n  en: `Shop for the items in the list before the time is up! In today's\r\n  episode, we'll face the challenge of preparing\r\n  \"${recipeNameTranslate}\"!!`,\r\n  ptbr:`Faça as compras da lista antes do tempo acabar! No episódio de\r\n  hoje, vamos ter o desafio de preparar ${recipeName}!!`\r\n})\r\n\r\nconst Intro = ({ chef, recipe, ingredientsList, goToTutorial }) => {\r\n  const [state, setState] = React.useState({ screen: 0 });\r\n  const instructions = instructionText(recipe.name, recipe.nameTranslate)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.screen === 0 && (\r\n        <React.Fragment>\r\n          <img id=\"dialog-interact\" src={kitchen} style={{position:'absolute', zIndex: -1, width: '100%', height: '100%'}} alt=\"\"/>\r\n          <ChefDialog chef={chef} onContinue={() => setState({ screen: 1 })} text={instructions.ptbr} translation={instructions.en}/>\r\n        </React.Fragment>\r\n      )}\r\n\r\n      {state.screen === 1 && (\r\n        <div id=\"dialog-interact\" style={{position: 'relative', width: '100%', height: '100%'}}>\r\n          <div style={{position: 'relative', overflow: 'visible'}}>\r\n            <img className=\"rotate backwards\" style={{position: 'absolute', width: '60%', left: '25%', top: '-130px', opacity: '60%'}} src={recipeBgRound} alt=\"\"/>\r\n            <img className=\"rotate\" style={{position: 'absolute', width: '60%', left: '25%', top: '-130px'}} src={recipeBgRound} alt=\"\"/>\r\n            <img className=\"dishPresentation\" style={{position: 'absolute', right: '30%', width: '30%'}} src={recipe.image} alt=\"\"/>\r\n          </div>\r\n          <ChefDialog chef={chef} onContinue={() => setState({ screen: 2 })} text={recipe.description} translation={recipe.descriptionTranslate}/>\r\n        </div>\r\n      )}\r\n\r\n      {state.screen === 2 && (\r\n        <div className=\"intro-recipe\">\r\n          <div style={{flex: '1 0 0px', width: 400, marginLeft: '10%', fontSize: '2em'}}>\r\n            <img className=\"dishPresentation\" style={{margin: '0 auto'}} src={recipe.image} alt=\"\"/>\r\n            <h1 className=\"margin-half-top type-l type-display type-center\" style={{padding: '0 1.5em'}}>\r\n              {recipe.name}\r\n            </h1>\r\n            <Button blink\r\n              style={{display: 'block', margin: '1.25em auto 0 auto', fontSize: '1.2em'}}\r\n              onClick={goToTutorial}\r\n              id=\"btn-start\"\r\n            >\r\n              Continuar\r\n            </Button>\r\n          </div>\r\n          <IngredientList style={{flex: '1 0 0px'}}>\r\n            {ingredientsList.map((ingredient, index) =>\r\n              <div className=\"ingredient\" key={index}>\r\n                <img className=\"ingredientImg\" src={ingredient.image} alt=\"\" />\r\n                <span>{ingredient.description}</span>\r\n              </div>\r\n            )}\r\n          </IngredientList>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react'\r\nimport { hourglassFull, blobAzul } from '../../img'\r\nimport { zeroFill } from '../../_helpers'\r\nimport Button from '../Button'\r\n\r\nconst TimerAnounce = ({seconds, onReady}) => {\r\n  return (\r\n    <div style={{position: 'relative', width: '100%', height: '100%',\r\n      backgroundImage: `url(${blobAzul})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n      backgroundSize: '100% 100%'\r\n    }}>\r\n      <div style={{width: 400, margin: '0 auto', paddingTop: '2%', paddinBottom: '2%', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n        <img style={{display: 'block', width: '20%', margin: '0 auto', marginBottom: '10%'}} src={hourglassFull} alt=\"hourglass\" />\r\n        <h1 className=\"type-m type-display type-center subtitle\">\r\n          Você tem\r\n        </h1>\r\n        <h1 style={{fontSize: 92}} className=\"type-l type-display type-center\">\r\n          {zeroFill(Math.floor(seconds / 60).toString(), 2)}:\r\n          {zeroFill((seconds % 60).toString(), 2)}\r\n        </h1>\r\n        <h1 className=\"type-m type-display type-center subtitle\">\r\n          minutos\r\n        </h1>\r\n        <Button style={{marginTop: '10%'}} blink center onClick={onReady}>\r\n          Estou pronto!\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimerAnounce\r\n","import React from \"react\";\r\nimport marked from \"marked\";\r\nimport parse from \"html-react-parser\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nimport { ingredientsListBg, listCheck, listCheckbox, listIcon } from \"../../img\";\r\n\r\nconst Recipe = ({ ingredientsList, hasImage, showCheck, iconShouldShow, onMouseEnter, onMouseLeave }) => {\r\n  const [state, setState] = React.useState(false);\r\n\r\n  return (\r\n    <div className={styles[\"shop-list-div\"]}>\r\n      {state &&\r\n        <div className={styles[\"overlay-shop-list\"]}>\r\n          <div>\r\n            <img src={ingredientsListBg} alt=\"\"/>\r\n            <div className={styles[\"shop-list\"]}>\r\n              { ingredientsList? ingredientsList.map((ingredient, index) => (\r\n                <div className={styles[\"shop-list-item-container\"]} key={index}>\r\n                  <div className={styles[\"shop-list-item\"]}>\r\n                    <img src={listCheckbox} alt=\"\"/>\r\n                    {showCheck(ingredient) && (<img src={listCheck} className={styles[\"checkmark\"]} alt=\"\" />)}\r\n                    {hasImage && (<img src={ingredient.image} className={styles[\"shop-list-item-img\"]} alt=\"\"/>)}\r\n                    <span>{parse(marked.parseInline(ingredient.description))}</span>\r\n                  </div>\r\n                </div>\r\n              )) : (\r\n                <div className={styles[\"shop-list-item-container\"]}>\r\n                  <div className={styles[\"shop-list-item\"]}>\r\n                    <span>Nenhum ingrediente encontrado na lista :(</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      {iconShouldShow && (\r\n        <img\r\n          onMouseEnter={() => {setState(true); onMouseEnter?.()}}\r\n          onMouseLeave={() => {setState(false); onMouseLeave?.()}}\r\n          src={listIcon}\r\n          alt=\"\"\r\n          className={styles[\"list-icon\"]}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport tutorialStyles from \"./index.module.scss\";\r\nimport gameStyles from \"../../index.module.scss\";\r\nimport \"./index.scss\";\r\nimport ChefDialog from \"../ChefDialog\";\r\nimport Aisle from \"../../../../_components/Aisle\";\r\n// import Button from '../../../../_components/Button'\r\nimport TimerAnounce from '../../../../_components/TimerAnounce'\r\nimport {\r\n  cart,\r\n  checkout,\r\n  // ingredientsListBg,\r\n  // listCheck,\r\n  // listIcon,\r\n} from \"../../../../img\";\r\n// import { zeroFill } from \"../../../../_helpers\";\r\n// import { parser } from \"marked\";\r\nimport htmlparse from \"html-react-parser\";\r\nimport Recipe from \"../../../../_components/Recipe\";\r\n\r\nconst Tutorial = ({\r\n  chef,\r\n  aisle,\r\n  seconds,\r\n  shoppingCart,\r\n  ingredientsList,\r\n  hasPlayed,\r\n  addProduct,\r\n  removeProduct,\r\n  toPreviousAisle,\r\n  toNextAisle,\r\n  goToMarket,\r\n}) => {\r\n  const [state, setState] = React.useState({\r\n    step: 0,\r\n    tutorialLine: 0,\r\n    shopList: false,\r\n  });\r\n\r\n  const addProductNextLine = (product) => () => {\r\n    if (state.tutorialLine === 0) {\r\n      addProduct(product)();\r\n      setState({\r\n        ...state,\r\n        tutorialLine: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeProductNextLine = (index) => () => {\r\n    if (state.tutorialLine === 1) {\r\n      removeProduct(index)();\r\n      setState({ ...state, tutorialLine: 2 });\r\n    }\r\n  };\r\n\r\n  const toPreviousAisleNextLine = () => {\r\n    if (state.tutorialLine === 2) {\r\n      toPreviousAisle();\r\n      setState({ ...state, tutorialLine: 3 });\r\n    }\r\n  };\r\n\r\n  const toNextAisleNextLine = () => {\r\n    if (state.tutorialLine === 2) {\r\n      toNextAisle();\r\n      setState({ ...state, tutorialLine: 3 });\r\n    }\r\n  };\r\n\r\n  const shopListNextLine = () => {\r\n    console.log(state.shopList);\r\n    if (state.tutorialLine === 3 && !state.shopList)\r\n      setState({ ...state, shopList: !state.shopList });\r\n    else if (state.tutorialLine === 3 && state.shopList)\r\n      setState({ ...state, tutorialLine: 4, shopList: !state.shopList });\r\n  };\r\n\r\n  const tutorialText = [\r\n    [\"Clique em qualquer item para <strong>adicioná-lo</strong> ao carrinho.\", \"Click on any item to <strong>add it</strong> to your cart.\"],\r\n    [\"Clique em qualquer item do seu carrinho para <strong>retirá-lo</strong>.\", \"Click on any item from your cart to <strong>remove it</strong>.\"],\r\n    [\"Use as setas para navegar pelas prateleiras.\", \"Use the arrows to move through shelves.\"],\r\n    [\"<strong>Passe o mouse</strong> sobre o bloco de notas para ver a lista de compras.\", \"<strong>Hover the mouse</strong> over the notepad to see the shopping list.\"],\r\n    [\"Clique no ícone de dinheiro para finalizar sua compra.\", \"Click on the cash icon to checkout.\"]\r\n  ].map( (line, index) => {return {ptbr: line[0], preferred: line[1]} } )\r\n\r\n  const blobPosition = (state.tutorialLine === 2 || state.tutorialLine === 3) ? tutorialStyles.blobRight : tutorialStyles.blobLeft;\r\n\r\n  return (\r\n    <div id=\"room-itself\" className={\"tutorial tutorialStep\" + state.tutorialLine}>\r\n      {state.step === 0 && (\r\n        <div id={tutorialStyles.tutorialGrid}>\r\n          <div\r\n            className={tutorialStyles.tutorialBlob + \" \" + blobPosition}\r\n          >\r\n            {(state.tutorialLine >= 0 && state.tutorialLine <= 4) && (\r\n              <div>\r\n                <span lang=\"pt-br\">\r\n                  {htmlparse(tutorialText[state.tutorialLine].ptbr)}\r\n                </span>\r\n                <span lang=\"en\">\r\n                  {htmlparse(tutorialText[state.tutorialLine].preferred)}\r\n                </span>\r\n              </div>\r\n            )}\r\n            {hasPlayed && (\r\n              <button\r\n                className=\"btn btn-center\"\r\n                id={tutorialStyles.btnTutorial}\r\n                onClick={goToMarket}\r\n              >\r\n                Skip tutorial\r\n              </button>\r\n            )}\r\n          </div>\r\n          <Aisle\r\n            products={aisle}\r\n            addProduct={addProductNextLine}\r\n            toPreviousAisle={toPreviousAisleNextLine}\r\n            toNextAisle={toNextAisleNextLine}\r\n          />\r\n          <div className={gameStyles.cart}>\r\n            <div className={gameStyles.cartItems}>\r\n              {shoppingCart.map((product, index) => (\r\n                <div className={gameStyles.cartItem} key={index}>\r\n                  <img\r\n                    src={\r\n                      ingredientsList.find(\r\n                        (ingredient) => ingredient.name === product.name\r\n                      ).image\r\n                    }\r\n                    alt=\"\"\r\n                    onClick={removeProductNextLine(index)}\r\n                    className={gameStyles.cartItemImg}\r\n                  />\r\n                  <span>{product.count}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <img\r\n              src={cart}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <Recipe\r\n            ingredientsList={ingredientsList}\r\n            hasImage={true}\r\n            showCheck={(ingredient) => false}\r\n            iconShouldShow={state.tutorialLine === 3}\r\n            onMouseEnter={shopListNextLine}\r\n            onMouseLeave={shopListNextLine}\r\n          />\r\n          <img // Dinheiro\r\n            onClick={() =>\r\n              setState({\r\n                ...state,\r\n                step: 1,\r\n              })\r\n            }\r\n            src={checkout}\r\n            alt=\"\"\r\n            className={gameStyles.moneyIcon + \" tutorial-money-icon\"}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {state.step === 1 && (\r\n        <div id=\"dialog-interact\" style={{position: 'relative', width: '100%', height: '100%', fontSize: '0.75em'}}>\r\n          <ChefDialog chef={chef} onContinue={() => setState({...state, step: 2 }) }\r\n            text=\"Agora você está pronto para começar as compras! Coloque tudo que está na lista no carrinho antes que o tempo acabe!\"\r\n            translation={\"Now you're ready to start shopping! Put everything on the list in the cart before time runs out!\"}/>\r\n        </div>\r\n      )}\r\n\r\n      {state.step === 2 &&\r\n        <TimerAnounce seconds={seconds} onReady={goToMarket}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ButtonConfirm from '../../../../_components/Button'\r\nimport { wallet } from '../../../../img'\r\n\r\n\r\nconst Payment = ({onConfirm, moneyList}) => {\r\n  const [state, setState] = React.useState({payment:[]})\r\n\r\n  const addToPayment = (money) => () => {\r\n    const index = state.payment.findIndex(\r\n      (moneyObj) => moneyObj.value === money\r\n    );\r\n    let paymentUpdate = [...state.payment];\r\n\r\n    if (index >= 0) paymentUpdate[index].count += 1;\r\n    else paymentUpdate.push({ value: money, count: 1 });\r\n    setState({\r\n      ...state,\r\n      payment: paymentUpdate,\r\n    });\r\n  };\r\n\r\n  const removeFromPayment = (value) => () => {\r\n    let paymentUpdate = [...state.payment];\r\n    let money = paymentUpdate.find( m => m.value === value)\r\n    if (money.count > 1) money.count -= 1;\r\n    else{\r\n      let index = paymentUpdate.indexOf(money)\r\n      paymentUpdate = [\r\n        ...state.payment.slice(0, index),\r\n        ...state.payment.slice(index + 1),\r\n      ];\r\n    }\r\n    setState({\r\n      ...state,\r\n      payment: paymentUpdate,\r\n    });\r\n  };\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <div style={{position: 'absolute', height: '20%', top: '25%', width: '60%', right: 0,\r\n        display: 'grid', gridTemplateRows: '33% 33% 33%', gridTemplateColumns: '20% 20% 20% 20% 20%', gridRowGap: '10%'}}className=\"selected-money\">\r\n        {state.payment.filter(m => m.value > 1).map((money, index) => (\r\n          <div key={index} style={{position: 'relative'}}>\r\n            <img\r\n              style={{height: '100%'}}\r\n              src={moneyList.find((moneyObj) => moneyObj.value === money.value).image.url}\r\n              alt=\"\"\r\n              onClick={removeFromPayment(money.value)}\r\n            />\r\n            <div style={{position: 'absolute', left: -10, top: -10,\r\n              backgroundColor: '#F9AFA1', width: 20, height: 20, borderRadius: 10, textAlign: 'center'}}\r\n            >\r\n              {money.count}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {state.payment.filter(m => m.value <= 1).map((money, index) => (\r\n          <div key={index} style={{position: 'relative', gridColumnStart: (index + 1) % 5 }}>\r\n            <img\r\n              style={{height: '100%'}}\r\n              src={moneyList.find((moneyObj) => moneyObj.value === money.value).image.url}\r\n              alt=\"\"\r\n              onClick={removeFromPayment(money.value)}\r\n            />\r\n            <div style={{position: 'absolute', left: -10, top: -10,\r\n              backgroundColor: '#F9AFA1', width: 20, height: 20, borderRadius: 10, textAlign: 'center'}}\r\n            >\r\n              {money.count}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{position: 'absolute', right: 0, bottom: '10%', width: '60%'}}>\r\n        <div style={{position: 'relative', backgroundColor:'#cbe7de', borderRadius: 50}}>\r\n          <div style={{display: 'grid', gridTemplateColumns: '25% 25% 25% 25%', padding: '5% 25% 5% 5%'}}>\r\n            {moneyList.filter(money => money.value > 1).map((money, index) => (\r\n              <Button key={index} onClick={addToPayment(money.value)}>\r\n                <img\r\n                  style={{ width: 110 }}\r\n                  src={money.image.url}\r\n                  alt=\"money\"\r\n                />\r\n              </Button>\r\n            ))}\r\n            <div style={{display: 'grid', gridTemplateRows: '50% 50%', gridTemplateColumns: '33% 33% 33%'}}>\r\n              {moneyList.filter(money => money.value <= 1).map((money, index) => (\r\n                <Button key={index} onClick={addToPayment(money.value)}>\r\n                  <img\r\n                    style={{ width: 20 }}\r\n                    src={money.image.url}\r\n                    alt=\"money\"\r\n                  />\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <img style={{position: 'absolute', top: '-25%', right: '-10%', width: '35%'}}src={wallet} alt=\"\" />\r\n        </div>\r\n\r\n        <ButtonConfirm blink\r\n        style={{position: 'absolute', right: 60, bottom: -15}}\r\n          onClick={onConfirm(state.payment.reduce((acc, money) => acc + money.value * money.count, 0).toFixed(2))}\r\n        >\r\n          Continuar\r\n        </ButtonConfirm>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Payment\r\n","import React from 'react'\r\nimport styles from '../../index.module.scss'\r\nimport { cart as cartImg } from '../../../../img'\r\n\r\nconst ShopCart = ({cart, ingredientList, onItemClick}) => {\r\n  return(\r\n      <div className={styles.cart}>\r\n        <div className={styles.cartItems}>\r\n          {cart.map((product, index) => (\r\n            <div className={styles.cartItem} key={index}>\r\n              <img style={{width: '100%'}}\r\n                src={\r\n                  ingredientList.find(\r\n                    (ingredient) =>\r\n                      ingredient.name === product.name\r\n                  ).image\r\n                }\r\n                alt=\"\"\r\n                onClick={onItemClick(index)}\r\n                className={styles.cartItemImg + ' inflate'}\r\n              />\r\n              <span>{product.count}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <img src={cartImg} alt=\"\" />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ShopCart\r\n","import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./index.scss\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nimport {\r\n  goRound,\r\n  splitArrayIntoChunksOfLen,\r\n  zeroFill,\r\n  numberToMoney,\r\n  shuffle,\r\n} from \"../../_helpers\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\n// import Button from \"@material-ui/core/Button\";\r\n\r\nimport initialState from \"./initialState\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Timer from \"../../_components/Timer\";\r\nimport Aisle from \"../../_components/Aisle\";\r\nimport Intro from \"./components/Intro\";\r\nimport Tutorial from \"./components/Tutorial\";\r\n// import DialogCharacter from \"../../_components/DialogCharacter\";\r\nimport ChefDialog from \"./components/ChefDialog\";\r\nimport Payment from \"./components/Payment\";\r\nimport ShopCart from \"./components/ShopCart\";\r\n\r\nimport {\r\n  cart,\r\n  // ingredientsListBg,\r\n  // recipeBg,\r\n  // listCheck,\r\n  // listIcon,\r\n  checkout,\r\n  // wallet,\r\n  blobLaranja,\r\n  hourglassFull,\r\n  hourglassEmpty,\r\n  cashierTable,\r\n  cashierBg,\r\n  bigBlob,\r\n} from \"../../img\";\r\nimport Recipe from \"../../_components/Recipe\";\r\n\r\nconst endGameLines = [\r\n  {\r\n    text: \"Fazer compras pode ser mais complicado do que parece.\",\r\n    translation:\r\n      \"Time is up! Doing the groceries might be harder than it looks.\",\r\n  },\r\n  {\r\n    text: \"Você finalizou em:\",\r\n    translation: \"Finished in:\",\r\n  },\r\n];\r\n\r\nconst Game3 = (props) => {\r\n  const [state, setState] = React.useState({ ...initialState() });\r\n  const dispatch = useDispatch();\r\n  const id = props.match.params.id;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  let missionData = mission ? mission.missionData : null;\r\n\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const timesPlayed = useSelector((state) => state.game.items.resultsCount);\r\n\r\n  const onStartGame = () => {\r\n    setState({ ...state, scene: \"INTRO\" });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (mission) dispatch(musicActions.set(mission.backgroundAudio.url));\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  React.useEffect(() => {\r\n    if (mission) {\r\n      if (!state.checkedPlayed) {\r\n        dispatch(\r\n          gameActions.find(\"results/count\", {\r\n            user: userId,\r\n            mission: mission.id,\r\n          })\r\n        );\r\n        setState({ ...state, checkedPlayed: true });\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, state.checkedPlayed]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      missionData &&\r\n      state.ingredientsList.length === 0 &&\r\n      timesPlayed !== undefined\r\n    ) {\r\n      let initTime =\r\n        missionData.seconds - 30 * (timesPlayed > 2 ? 2 : timesPlayed);\r\n      let remainingTime = initTime;\r\n\r\n      let recipe =\r\n        missionData.recipes[\r\n          Math.floor(Math.random() * missionData.recipes.length)\r\n        ];\r\n\r\n      let resumeRecipe = {\r\n        id: recipe.id,\r\n        name: recipe.name,\r\n        nameTranslate: recipe.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).text,\r\n        description: recipe.description,\r\n        descriptionTranslate: recipe.descriptionTranslate.find(\r\n          (description) => {\r\n            return description.language.id === lang;\r\n          }\r\n        ).text,\r\n        image: recipe.image ? recipe.image.url : \"\",\r\n      };\r\n\r\n      let aisles;\r\n      let ingredientsList = recipe.ingredients.map((ingredient) => {\r\n        return {\r\n          name: ingredient.asset.name,\r\n          description: ingredient.description,\r\n          type: ingredient.type,\r\n          image: ingredient.asset.image ? ingredient.asset.image.url : \"\",\r\n          shelfImage: ingredient.asset.image ? ingredient.asset.image.url : \"\",\r\n          tag:\r\n            ingredient.measure === \"unidade\"\r\n              ? `R$ ${ingredient.price.toFixed(2)}`\r\n              : `R$ ${(\r\n                  ingredient.price *\r\n                  (100 / ingredient.unityValue)\r\n                ).toFixed(2)}/100${ingredient.measure}`,\r\n          tooltip:\r\n            ingredient.measure === \"unidade\"\r\n              ? 1\r\n              : `${ingredient.unityValue}${ingredient.measure}`,\r\n          unityValue:\r\n            ingredient.measure === \"unidade\" ? 1 : ingredient.unityValue,\r\n          quantity: ingredient.quantity,\r\n          price: ingredient.price,\r\n          shelfCount: 10,\r\n        };\r\n      });\r\n\r\n      if (missionData.separation === \"aislesCount\") {\r\n        aisles = splitArrayIntoChunksOfLen(\r\n          shuffle(ingredientsList),\r\n          missionData.aisles\r\n        );\r\n      } else {\r\n        aisles = ingredientsList.reduce((acc, ingredient) => {\r\n          acc[ingredient.type] = [...(acc[ingredient.type] || []), ingredient];\r\n          return acc;\r\n        }, {});\r\n\r\n        aisles = Object.keys(aisles).reduce((acc, aisle) => {\r\n          return [...acc, aisles[aisle]];\r\n        }, []);\r\n      }\r\n\r\n      setState((state) => {\r\n        return {\r\n          ...state,\r\n          recipe: resumeRecipe,\r\n          aisles,\r\n          ingredientsList,\r\n          remainingTime,\r\n          initTime,\r\n        };\r\n      });\r\n    }\r\n  }, [missionData, state.ingredientsList, timesPlayed, lang]);\r\n\r\n  const addProduct = (product) => () => {\r\n    const index = state.cart.findIndex(\r\n      (ingredient) => ingredient.name === product\r\n    );\r\n    let cartUpdate = [...state.cart];\r\n\r\n    if (index >= 0) cartUpdate[index].count += 1;\r\n    else cartUpdate.push({ name: product, count: 1 });\r\n\r\n    setState({\r\n      ...state,\r\n      cart: cartUpdate,\r\n    });\r\n  };\r\n  const removeProduct = (index) => () => {\r\n    let cartUpdate = [...state.cart];\r\n\r\n    if (cartUpdate[index].count > 1) cartUpdate[index].count -= 1;\r\n    else\r\n      cartUpdate = [\r\n        ...state.cart.slice(0, index),\r\n        ...state.cart.slice(index + 1),\r\n      ];\r\n\r\n    setState({\r\n      ...state,\r\n      cart: cartUpdate,\r\n    });\r\n  };\r\n\r\n  const toPreviousAisle = () => {\r\n    setState({\r\n      ...state,\r\n      currentAisle: goRound(state.currentAisle - 1, state.aisles.length),\r\n    });\r\n  };\r\n\r\n  const toNextAisle = () => {\r\n    setState({\r\n      ...state,\r\n      currentAisle: goRound(state.currentAisle + 1, state.aisles.length),\r\n    });\r\n  };\r\n\r\n  const checkShoppingList = (ingredient) => {\r\n    let cartIngredient = state.cart.find(\r\n      (cartItem) => cartItem.name === ingredient.name\r\n    );\r\n    if (!cartIngredient) return false;\r\n    if (cartIngredient.count * ingredient.unityValue !== ingredient.quantity)\r\n      return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  const haveAll = () => {\r\n    for (let i = 0; i < state.ingredientsList.length; i++) {\r\n      if (!checkShoppingList(state.ingredientsList[i])) return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const moveToCheckout = () => {\r\n    let haveAllValue = haveAll();\r\n    let price = state.cart\r\n      .reduce(\r\n        (acc, product) =>\r\n          acc +\r\n          state.ingredientsList.find(\r\n            (ingredient) => ingredient.name === product.name\r\n          ).price *\r\n            product.count,\r\n        0\r\n      )\r\n      .toFixed(2);\r\n    var updateState = {\r\n      scene: \"CASHIER\",\r\n      checkoutConfirm: false,\r\n      cashierLines: haveAllValue\r\n        ? {\r\n            text: `Maravilha! Sua compra deu ${numberToMoney(\r\n              price\r\n            )}. Agora você só precisa selecionar a quatidade correta de dinheiro. Fique atento ao limite de tempo.`,\r\n            translation: `Wonderful! That's ${numberToMoney(\r\n              price\r\n            )}. Now all you have to do is select the right amount of money. Mind the time limit.`,\r\n          }\r\n        : {\r\n            text: `Você selecionou ${\r\n              getWrongItemsInCart().length\r\n            } ingrediente(s) incorretamente!`,\r\n            translation: `You selected ${\r\n              getWrongItemsInCart().length\r\n            } ingredient(s) incorrectly!`,\r\n          },\r\n      price: price,\r\n    };\r\n    updateState.cashierContinue = haveAllValue\r\n      ? () =>\r\n          setState({\r\n            ...state,\r\n            ...updateState,\r\n            runTimer: true,\r\n            moneySelection: true,\r\n          })\r\n      : () =>\r\n          setState({\r\n            ...state,\r\n            ...updateState,\r\n            scene: \"MARKET\",\r\n            runTimer: true,\r\n            checkoutConfirm: false,\r\n          });\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const doPayment = (value) => {\r\n    let cashierLines;\r\n    let change = value - state.price;\r\n    if (change < 0)\r\n      cashierLines = {\r\n        text:\r\n          \"Nossos patrocinadores vão ter que me pagar um extra para completar sua compra.\",\r\n        translation:\r\n          \"Our sponsors will need to give me an extra to pay for the rest of your purchase.\",\r\n      };\r\n    else if (change > 0)\r\n      cashierLines = {\r\n        text: \"Bem... Obrigada pela gorjeta!\",\r\n        translation: \"Well... Thanks for the tip!\",\r\n      };\r\n    //if( value === 0)\r\n    else\r\n      cashierLines = {\r\n        text:\r\n          \"Você pagou exatamente o que devia para o caixa do supermercado! Mexer com dinheiro é contigo mesmo!\",\r\n        translation:\r\n          \"You gave the exact amout to the supermarket's cashier! Dealing with money is clearly not a problem for you!\",\r\n      };\r\n\r\n    setState((s) => ({\r\n      ...s,\r\n      cashierContinue: () => endGame(false),\r\n      cashierLines: cashierLines,\r\n      change: change,\r\n      moneySelection: false,\r\n      runTimer: false,\r\n    }));\r\n  };\r\n\r\n  const getWrongItemsInCart = () =>\r\n    state.ingredientsList\r\n      .filter((ingredient) => {\r\n        return !checkShoppingList(ingredient);\r\n      })\r\n      .map((ingredient) => ({\r\n        ingredient: ingredient.name,\r\n        rightQuantity: ingredient.quantity,\r\n        userQuantity: state.cart.hasOwnProperty(ingredient.name)\r\n          ? state.cart[ingredient.name] * ingredient.unityValue\r\n          : 0,\r\n      }));\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(false) });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const endGame = (timeUp) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      scene: \"END_GAME\",\r\n      timeUp: timeUp,\r\n    }));\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n\r\n    let wrongIngredients = getWrongItemsInCart();\r\n\r\n    dispatch(\r\n      gameActions.create(\"results\", {\r\n        user: userId,\r\n        mission: mission.id,\r\n        secondsTaken: timeUp\r\n          ? state.initTime + 1\r\n          : state.initTime - state.remainingTime,\r\n        recipe: state.recipe.id,\r\n        rightPayment: state.change === 0,\r\n        won: state.change === 0 && !timeUp && wrongIngredients.length === 0,\r\n        wrongIngredients:\r\n          wrongIngredients.length > 0 ? JSON.stringify(wrongIngredients) : null,\r\n      })\r\n    );\r\n  };\r\n\r\n  //const { mission } = state\r\n  //\r\n  return (\r\n    <React.Fragment>\r\n      {!mission ? (\r\n        <div>Loading..</div>\r\n      ) : (\r\n        <React.Fragment>\r\n          {(function renderScene() {\r\n            switch (state.scene) {\r\n              case \"INIT\":\r\n                return (\r\n                  <Init\r\n                    icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                    name={mission.name}\r\n                    description={mission.description}\r\n                    nameTranslate={\r\n                      mission.nameTranslate.find((name) => {\r\n                        return name.language.id === lang;\r\n                      }).name\r\n                    }\r\n                    descriptionTranslate={\r\n                      mission.descriptionTranslate.find((description) => {\r\n                        return description.language.id === lang;\r\n                      }).description\r\n                    }\r\n                    onStart={onStartGame}\r\n                    onBack={() => setState({ ...state, back: true })}\r\n                    ready={state.ingredientsList.length > 0}\r\n                  />\r\n                );\r\n              case \"INTRO\":\r\n                return (\r\n                  <Intro\r\n                    recipe={state.recipe}\r\n                    chef={missionData.character}\r\n                    ingredientsList={state.ingredientsList}\r\n                    goToTutorial={() =>\r\n                      setState({ ...state, scene: \"TUTORIAL\" })\r\n                    }\r\n                  />\r\n                );\r\n              case \"TUTORIAL\":\r\n                return (\r\n                  <Tutorial\r\n                    chef={missionData.character}\r\n                    seconds={state.initTime}\r\n                    hasPlayed={timesPlayed > 0}\r\n                    aisle={state.aisles[state.currentAisle]}\r\n                    shoppingCart={state.cart}\r\n                    ingredientsList={state.ingredientsList}\r\n                    addProduct={addProduct}\r\n                    removeProduct={removeProduct}\r\n                    toPreviousAisle={toPreviousAisle}\r\n                    toNextAisle={toNextAisle}\r\n                    goToMarket={() =>\r\n                      setState({\r\n                        ...state,\r\n                        scene: \"MARKET\",\r\n                        currentAisle: 0,\r\n                        cart: [],\r\n                      })\r\n                    }\r\n                  />\r\n                );\r\n              case \"MARKET\":\r\n                return (\r\n                  <React.Fragment>\r\n                    <Timer\r\n                      style={{ position: \"absolute\", top: \"5%\", left: \"50%\" }}\r\n                      run={state.runTimer}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) =>\r\n                        setState({ ...state, remainingTime: remaining })\r\n                      }\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n                    <Recipe\r\n                      ingredientsList={state.ingredientsList}\r\n                      hasImage={true}\r\n                      showCheck={(ingredient) => checkShoppingList(ingredient)}\r\n                      iconShouldShow={!state.checkout && !state.checkoutConfirm}\r\n                    />\r\n\r\n                    {!state.checkout && !state.checkoutConfirm && (\r\n                      <div id={styles.gameGrid}>\r\n                        <Aisle\r\n                          products={state.aisles[state.currentAisle]}\r\n                          addProduct={addProduct}\r\n                          toPreviousAisle={toPreviousAisle}\r\n                          toNextAisle={toNextAisle}\r\n                        />\r\n\r\n                        <img\r\n                          onClick={() =>\r\n                            setState({\r\n                              ...state,\r\n                              checkoutConfirm: true,\r\n                              runTimer: false,\r\n                              shopList: false,\r\n                            })\r\n                          }\r\n                          src={checkout}\r\n                          alt=\"\"\r\n                          className={styles.moneyIcon}\r\n                        />\r\n\r\n                        <ShopCart\r\n                          cart={state.cart}\r\n                          ingredientList={state.ingredientsList}\r\n                          onItemClick={removeProduct}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.checkoutConfirm && (\r\n                      <div className={styles.confirmScreen}>\r\n                        <div className={styles.cartItems}>\r\n                          {state.cart.map((product, index) => (\r\n                            <div className={styles.cartItem} key={index}>\r\n                              <img\r\n                                src={\r\n                                  state.ingredientsList.find(\r\n                                    (ingredient) =>\r\n                                      ingredient.name === product.name\r\n                                  ).image\r\n                                }\r\n                                alt=\"\"\r\n                                onClick={removeProduct(index)}\r\n                                className={styles.cartItemImg}\r\n                              />\r\n                              <span>{product.count}</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <div className={styles.confirmBlob}>\r\n                          <div className={styles.blobSpans}>\r\n                            <span lang=\"pt-br\">\r\n                              Tem certeza que isso é tudo?\r\n                            </span>\r\n                            <span lang=\"en\">Are you sure that's all?</span>\r\n                          </div>\r\n                          <div className={styles.btns}>\r\n                            <button\r\n                              className=\"btn btn-center\"\r\n                              id=\"btn-back\"\r\n                              onClick={() =>\r\n                                setState({\r\n                                  ...state,\r\n                                  checkoutConfirm: false,\r\n                                  runTimer: true,\r\n                                })\r\n                              }\r\n                            >\r\n                              Voltar\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-center\"\r\n                              id=\"btn-start\"\r\n                              onClick={moveToCheckout}\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <img src={cart} alt=\"\" />\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              case \"CASHIER\":\r\n                return (\r\n                  <React.Fragment>\r\n                    <img\r\n                      style={{\r\n                        display: \"block\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        zIndex: -4,\r\n                      }}\r\n                      src={bigBlob}\r\n                      alt=\"bigBlob\"\r\n                    />\r\n                    <img\r\n                      style={{\r\n                        display: \"block\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        zIndex: -3,\r\n                      }}\r\n                      src={cashierBg}\r\n                      alt=\"\"\r\n                    />\r\n                    <Timer\r\n                      style={{ position: \"absolute\", top: \"5%\", left: \"50%\" }}\r\n                      run={state.runTimer}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) => {\r\n                        setState((s) => ({\r\n                          ...s,\r\n                          remainingTime: remaining,\r\n                        }));\r\n                      }}\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n                    <ChefDialog\r\n                      chefStyles={{ width: \"35%\" }}\r\n                      chef={missionData.character}\r\n                      hideDialog={state.moneySelection}\r\n                      chefFeeling={\r\n                        state.change < 0 ? \"wrongPayment\" : \"default\"\r\n                      }\r\n                      text={state.cashierLines.text}\r\n                      translation={state.cashierLines.translation}\r\n                      onContinue={state.cashierContinue}\r\n                    />\r\n                    <img\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: \"-10%\",\r\n                        zIndex: 3,\r\n                        width: \"35%\",\r\n                      }}\r\n                      src={cashierTable}\r\n                      alt=\"\"\r\n                    />\r\n                    {state.moneySelection && (\r\n                      <Payment\r\n                        moneyList={missionData.money}\r\n                        onConfirm={(value) => () => doPayment(value)}\r\n                      />\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              case \"END_GAME\":\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      padding: \"12% 20%\",\r\n                      backgroundColor: state.timeUp ? \" #F9AFA1\" : \"#D6E3F4\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        height: \"70%\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <div style={{ position: \"relative\" }}>\r\n                        <img\r\n                          style={{\r\n                            display: \"block\",\r\n                            height: 100,\r\n                            margin: \"0 auto\",\r\n                          }}\r\n                          src={state.timeUp ? hourglassEmpty : hourglassFull}\r\n                          alt=\"\"\r\n                        />\r\n                        {state.timeUp && (\r\n                          <div\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              fontSize: 36,\r\n                              fontFamily: \"Abril fatface\",\r\n                              color: \"rgb(89, 49, 109)\",\r\n                            }}\r\n                          >\r\n                            O tempo acabou!\r\n                          </div>\r\n                        )}\r\n                        <p\r\n                          lang=\"pt-br\"\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            fontFamily: \"Barlow\",\r\n                            fontSize: 24,\r\n                            color: \"rgb(89, 49, 109)\",\r\n                          }}\r\n                        >\r\n                          {endGameLines[state.timeUp ? 0 : 1].text}\r\n                        </p>\r\n                        <hr\r\n                          style={{\r\n                            display: \"block\",\r\n                            margin: \"5% auto\",\r\n                            width: \"30%\",\r\n                          }}\r\n                        />\r\n                        <p\r\n                          lang=\"en\"\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            fontFamily: \"Barlow\",\r\n                            color: \"rgb(89, 49, 109)\",\r\n                            fontStyle: \"italic\",\r\n                          }}\r\n                        >\r\n                          {endGameLines[state.timeUp ? 0 : 1].translation}\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div\r\n                        style={{\r\n                          position: \"relative\",\r\n                          height: 300,\r\n                          width: \"100%\",\r\n                          paddingTop: 70,\r\n\r\n                          backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                          backgroundRepeat: \"no-repeat\",\r\n                          backgroundPosition: \"center center\",\r\n                          textAlign: \"center\",\r\n                          fontSize: 92,\r\n                          fontFamily: \"Abril fatface\",\r\n                          color: \"rgb(89, 49, 109)\",\r\n                        }}\r\n                      >\r\n                        {state.timeUp\r\n                          ? \"0:00\"\r\n                          : `${zeroFill(\r\n                              Math.floor(\r\n                                (state.initTime - state.remainingTime) / 60\r\n                              ).toString(),\r\n                              2\r\n                            )}\r\n                          :\r\n                          ${zeroFill(\r\n                            (\r\n                              (state.initTime - state.remainingTime) %\r\n                              60\r\n                            ).toString(),\r\n                            2\r\n                          )}`}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"block\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: \"10%\",\r\n                      }}\r\n                    >\r\n                      <button onClick={restart}>Tentar novamente</button>\r\n                      <Link to={\"/userspace\"}>Sair do jogo</Link>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              default:\r\n                return <div>Erro</div>;\r\n            }\r\n          })()}\r\n          {state.back && <Redirect to={\"/userspace\"} />}\r\n        </React.Fragment>\r\n      )}\r\n      {process.env.NODE_ENV === \"development\" && (\r\n        <div>\r\n          <button\r\n            style={{ position: \"absolute\", bottom: 0 }}\r\n            onClick={() => setState({ ...state, scene: \"MARKET\" })}\r\n          >\r\n            Pula tutorial\r\n          </button>\r\n          <button\r\n            style={{ position: \"absolute\", bottom: 0, left: 100 }}\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                scene: \"CASHIER\",\r\n                checkoutConfirm: false,\r\n                cashierLines: {\r\n                  text: `Maravilha! Sua compra deu ${numberToMoney(\r\n                    48.05\r\n                  )}. Agora você só precisa selecionar a quatidade correta de dinheiro. Fique atento ao limite de tempo.`,\r\n                  translation: `Wonderful! That's ${numberToMoney(\r\n                    48.05\r\n                  )}. Now all you have to do is select the right amount of money. Mind the time limit.`,\r\n                },\r\n                cashierContinue: () =>\r\n                  setState((s) => ({\r\n                    ...s,\r\n                    runTimer: true,\r\n                    moneySelection: true,\r\n                  })),\r\n                price: 48.05,\r\n              });\r\n            }}\r\n          >\r\n            Para o caixa: Compras certas\r\n          </button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Game3;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport marked from \"marked\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport ChefDialog from \"../../../Game3/components/ChefDialog\"\r\nimport IngredientList from \"../../../Game3/components/IngredientList\"\r\nimport TimerAnounce from '../../../../_components/TimerAnounce'\r\nimport Button from '../../../../_components/Button'\r\nimport {\r\n  // ingredientsListRotated,\r\n  // kitchen,\r\n  recipeBg\r\n} from \"../../../../img\";\r\n\r\n// import { zeroFill } from \"../../../../_helpers\";\r\n\r\nconst Intro = ({ chef, recipe, ingredientsList, seconds, goToKitchen }) => {\r\n  const [state, setState] = React.useState({ screen: 0 });\r\n\r\n  return (\r\n    <div id=\"room-itself\" className=\"intro\">\r\n      {state.screen === 0 && (\r\n        <div id=\"dialog-interact\" style={{position: 'relative', width: '100%', height: '100%'}}>\r\n          <ChefDialog chef={chef} onContinue={() => setState({ screen: 1 })}\r\n            text={`No episódio de hoje, vamos ter o desafio de preparar ${recipe.name}!!`}\r\n            translation={`In today's episode, we'll face the challenge of preparing ${recipe.nameTranslate}!!`}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {state.screen === 1 && (\r\n        <div id=\"dialog-interact\" style={{position: 'relative', width: '100%', height: '100%'}}>\r\n          <div style={{position: 'relative', overflow: 'visible'}}>\r\n            <img style={{position: 'absolute', width: '60%', left: '25%', top: '-130px'}} src={recipeBg} alt=\"\"/>\r\n            <img style={{position: 'absolute', right: '30%', width: '30%'}} src={recipe.image} alt=\"\" />\r\n          </div>\r\n          <ChefDialog chef={chef} onContinue={() => setState({ screen: 2 })}\r\n            text={recipe.description}\r\n            translation={recipe.descriptionTranslate}/>\r\n        </div>\r\n      )}\r\n\r\n      {state.screen === 2 && (\r\n        <div className=\"intro-recipe\">\r\n          <div style={{width: 400, marginLeft: '10%'}}>\r\n            <div>\r\n              <img src={recipe.image} alt=\"\" style={{width: 400}}/>\r\n            </div>\r\n            <h1 className=\"margin-half-top type-l type-display type-center\">\r\n              {recipe.name}\r\n            </h1>\r\n            <Button blink\r\n              style={{display: 'block', margin: '30px auto 0 auto'}}\r\n              onClick={() => setState({ screen: 3 })}\r\n            >\r\n              Continuar\r\n            </Button>\r\n          </div>\r\n          <IngredientList>\r\n            {ingredientsList.map((ingredient, index) => (\r\n              <div key={index} className=\"ingredient\">\r\n                {ingredient.order}.{\" \"}\r\n                {parse(marked.parseInline(ingredient.description))};\r\n              </div>\r\n            ))}\r\n          </IngredientList>\r\n        </div>\r\n      )}\r\n\r\n      {state.screen === 3 &&\r\n        <TimerAnounce seconds={seconds} onReady={goToKitchen} />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","const initialState = (checkedPlayed = false) => {\r\n  return {\r\n    scene: \"INIT\",\r\n    runTimer: false,\r\n    initTime: 0,\r\n    remainingTime: 0,\r\n    timeUp: false,\r\n    showRecipe: false,\r\n    ingredientsList: [],\r\n    recipe: {},\r\n    shuffledIngredients: [],\r\n    tablewares: [],\r\n    recipeContinue: false,\r\n    checkedPlayed: checkedPlayed,\r\n\r\n    showIngredients: true,\r\n    selectedIngredient: null,\r\n    tableIngredients: [],\r\n    sortNameIngredient: null,\r\n\r\n    shuffledName: [],\r\n    userLetterOrder: [],\r\n\r\n    tablewareImagePick: true,\r\n    shuffledTablewares: [],\r\n    shuffledTablewaresNames: [],\r\n    tablewareImageSelected: null,\r\n    tableTablewares: [],\r\n\r\n    // USER ERRORS\r\n    wrongIngredientSelected: [],\r\n    wrongIngredientNameOrder: [],\r\n    wrongTablewarePairSelected: [],\r\n    wrongTablewareSelected: [],\r\n\r\n    // NOTIFICATIONS\r\n    tutorialIngredientSelectionNotification: false,\r\n    tutorialIngredientNameSelectionNotification: false,\r\n    wrongIngredientNotification: false,\r\n    wrongIngredientNameNotification: false,\r\n    // wrongTablewareNotification: false,\r\n    wrongCombinationNotification: false,\r\n\r\n    // FEEDBACK\r\n    feedbackMessages: [],\r\n  };\r\n};\r\n\r\nexport default initialState;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { preventSingleWordBreak } from \"../../../../_helpers\";\r\nimport \"./index.scss\";\r\n\r\nconst FeedbackPanel = ({ feedback, restart, leave }) => {\r\n  const [state, setState] = React.useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"feedback-panel\" id=\"feedback-panel\">\r\n        {state > 0 && (\r\n          <span\r\n            className=\"feedback-arrow feedback-arrow-previous\"\r\n            onClick={() => setState(state - 1)}\r\n          >\r\n            {\"<\"}\r\n          </span>\r\n        )}\r\n        <div className=\"feedback-panel-content\">\r\n          <img\r\n            className=\"feedback-panel-img\"\r\n            src={feedback[state].image}\r\n            alt=\"feedback-panel-icon\"\r\n          />\r\n          <div className=\"feedback-panel-text\">\r\n            <span lang=\"pt-br\">\r\n              {preventSingleWordBreak(feedback[state].message)}\r\n            </span>\r\n            <span\r\n              lang=\"en\"\r\n              className=\"purple-line-before line-before-margin-30-auto italic\"\r\n            >\r\n              {preventSingleWordBreak(feedback[state].messageTranslate)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {state < feedback.length - 1 && (\r\n          <span\r\n            className=\"feedback-arrow feedback-arrow-next\"\r\n            onClick={() => setState(state + 1)}\r\n          >\r\n            {\">\"}\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div id=\"feedback-endGame-action-btns\">\r\n        <Button onClick={restart}>Tentar novamente</Button>\r\n        <Button onClick={leave}>Sair do jogo</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPanel;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { Link, Redirect } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Intro from \"./components/Intro\";\r\nimport Timer from \"../../_components/Timer\";\r\nimport Recipe from \"../../_components/Recipe\";\r\n\r\nimport initialState from \"./initialState\";\r\n\r\nimport { zeroFill, shuffle } from \"../../_helpers\";\r\nimport {\r\n  // listIcon,\r\n  silverCloche,\r\n  hourglassEmpty,\r\n  hourglassFull,\r\n  blobLaranja,\r\n  right,\r\n  error,\r\n  tomato,\r\n} from \"../../img\";\r\nimport DialogCharacter from \"../../_components/DialogCharacter\";\r\nimport FeedbackPanel from \"./components/FeedbackPanel\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Game4 = (props) => {\r\n  const [state, setState] = React.useState({ ...initialState() });\r\n  const dispatch = useDispatch();\r\n  const id = props.match.params.id;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  let missionData = mission ? mission.missionData : null;\r\n\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const timesPlayed = useSelector((state) => state.game.items.resultsCount);\r\n\r\n  React.useEffect(() => {\r\n    if (mission) dispatch(musicActions.set(mission.backgroundAudio.url));\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  React.useEffect(() => {\r\n    if (mission) {\r\n      if (!state.checkedPlayed) {\r\n        dispatch(\r\n          gameActions.find(\"results/count\", {\r\n            user: userId,\r\n            mission: mission.id,\r\n          })\r\n        );\r\n        setState({ ...state, checkedPlayed: true });\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, state.checkedPlayed]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      missionData &&\r\n      state.ingredientsList.length === 0 &&\r\n      timesPlayed !== undefined\r\n    ) {\r\n      let initTime =\r\n        missionData.seconds - 60 * (timesPlayed > 2 ? 2 : timesPlayed);\r\n      let remainingTime = initTime;\r\n\r\n      // safe copies\r\n\r\n      let recipe =\r\n        missionData.recipes[\r\n          Math.floor(Math.random() * missionData.recipes.length)\r\n        ];\r\n\r\n      let resumeRecipe = {\r\n        id: recipe.id,\r\n        name: recipe.name,\r\n        nameTranslate: recipe.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).text,\r\n        description: recipe.description,\r\n        descriptionTranslate: recipe.descriptionTranslate.find(\r\n          (description) => {\r\n            return description.language.id === lang;\r\n          }\r\n        ).text,\r\n        image: recipe.image ? recipe.image.url : \"\",\r\n      };\r\n\r\n      let ingredientsList = recipe.ingredients\r\n        .map((ingredient) => {\r\n          return {\r\n            name: ingredient.asset.name,\r\n            description: ingredient.description,\r\n            order: ingredient.order,\r\n            done: false,\r\n          };\r\n        })\r\n        .sort((a, b) => (a.order > b.order ? 1 : -1));\r\n\r\n      let shuffledIngredients = shuffle(\r\n        recipe.ingredients.map((ingredient) => {\r\n          return {\r\n            name: ingredient.asset.name,\r\n            shuffleName: ingredient.shuffleName.toUpperCase(),\r\n            nameShuffled: shuffle(\r\n              ingredient.shuffleName.toUpperCase().split(\"\")\r\n            ),\r\n            image: ingredient.asset.image ? ingredient.asset.image.url : \"\",\r\n            done: false,\r\n          };\r\n        })\r\n      );\r\n\r\n      let tablewares = recipe.tablewares.map((tableware) => {\r\n        return {\r\n          name: tableware.asset.name,\r\n          image: tableware.asset.image ? tableware.asset.image.url : \"\",\r\n          correct: tableware.correct,\r\n        };\r\n      });\r\n\r\n      setState((state) => {\r\n        return {\r\n          ...state,\r\n          recipe: resumeRecipe,\r\n          ingredientsList,\r\n          shuffledIngredients,\r\n          tablewares,\r\n          remainingTime,\r\n          initTime,\r\n        };\r\n      });\r\n    }\r\n  }, [missionData, state.ingredientsList, timesPlayed, lang]);\r\n\r\n  const onStartGame = () => setState({ ...state, scene: \"INTRO\" });\r\n\r\n  const checkRightIngredient = () => {\r\n    let currentIngredient = state.ingredientsList.find(\r\n      (ingredient) => !ingredient.done\r\n    );\r\n\r\n    console.log(state.wrongIngredientSelected);\r\n\r\n    if (state.selectedIngredient.name !== currentIngredient.name) {\r\n      setState({\r\n        ...state,\r\n        wrongIngredientNotification: true,\r\n        wrongIngredientSelected: [\r\n          ...state.wrongIngredientSelected,\r\n          {\r\n            rightIngredient: currentIngredient.name,\r\n            userSelected: state.selectedIngredient.name,\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      let updatedState = {\r\n        showIngredients: false,\r\n        sortNameIngredient: state.selectedIngredient,\r\n        selectedIngredient: null,\r\n        shuffledName: state.selectedIngredient.nameShuffled.map((letter) => {\r\n          return {\r\n            letter: letter,\r\n            selected: false,\r\n          };\r\n        }),\r\n      };\r\n\r\n      console.log(\r\n        state.ingredientsList.findIndex(\r\n          (ingredient) => ingredient.name === currentIngredient.name\r\n        )\r\n      );\r\n\r\n      if (\r\n        state.ingredientsList.findIndex(\r\n          (ingredient) => ingredient.name === currentIngredient.name\r\n        ) === 0\r\n      ) {\r\n        updatedState.tutorialIngredientNameSelectionNotification = true;\r\n        updatedState.runTimer = false;\r\n      }\r\n\r\n      setState({\r\n        ...state,\r\n        ...updatedState,\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkIngredientName = () => {\r\n    if (\r\n      state.sortNameIngredient.shuffleName ===\r\n      state.userLetterOrder.reduce((acc, letter) => acc + letter.letter, \"\")\r\n    ) {\r\n      let updateIngredientsList = state.ingredientsList.map((ingredient) => {\r\n        if (ingredient.name === state.sortNameIngredient.name)\r\n          return {\r\n            ...ingredient,\r\n            done: true,\r\n          };\r\n        return ingredient;\r\n      });\r\n\r\n      let updateShuffledIngredients = state.shuffledIngredients.map(\r\n        (ingredient) => {\r\n          if (ingredient.name === state.sortNameIngredient.name)\r\n            return {\r\n              ...ingredient,\r\n              done: true,\r\n            };\r\n          return ingredient;\r\n        }\r\n      );\r\n\r\n      if (\r\n        updateIngredientsList.find((ingredient) => !ingredient.done) ===\r\n        undefined\r\n      ) {\r\n        setState({\r\n          ...state,\r\n          doneCooking: true,\r\n          runTimer: false,\r\n        });\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          sortNameIngredient: null,\r\n          ingredientsList: updateIngredientsList,\r\n          shuffledIngredients: updateShuffledIngredients,\r\n          showIngredients: true,\r\n          userLetterOrder: [],\r\n          tableIngredients: [\r\n            ...state.tableIngredients,\r\n            state.sortNameIngredient,\r\n          ],\r\n          // showRecipe: true,\r\n          // recipeContinue: true,\r\n        });\r\n      }\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        wrongIngredientNameNotification: true,\r\n        wrongIngredientNameOrder: [\r\n          ...state.wrongIngredientNameOrder,\r\n          {\r\n            writeOrderName: state.sortNameIngredient.shuffleName,\r\n            userOrderInput: state.userLetterOrder.reduce(\r\n              (acc, letter) => acc + letter.letter,\r\n              \"\"\r\n            ),\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearIngredientName = () => {\r\n    setState({\r\n      ...state,\r\n      wrongIngredientNameNotification: false,\r\n      userLetterOrder: [],\r\n      shuffledName: state.sortNameIngredient.nameShuffled.map((letter) => {\r\n        return {\r\n          letter: letter,\r\n          selected: false,\r\n        };\r\n      }),\r\n    });\r\n  };\r\n\r\n  const addLetter = (letter, index) => () => {\r\n    let updateShuffedName = [...state.shuffledName];\r\n\r\n    updateShuffedName[index].selected = true;\r\n\r\n    setState({\r\n      ...state,\r\n      shuffledName: updateShuffedName,\r\n      userLetterOrder: [...state.userLetterOrder, letter],\r\n    });\r\n  };\r\n\r\n  const moveToServing = () => {\r\n    setState({\r\n      ...state,\r\n      scene: \"SERVE\",\r\n      runTimer: true,\r\n      shuffledTablewares: shuffle(\r\n        state.tablewares.map((tableware) => {\r\n          return {\r\n            name: tableware.name,\r\n            image: tableware.image,\r\n            correct: tableware.correct,\r\n            choosen: false,\r\n          };\r\n        })\r\n      ),\r\n      shuffledTablewaresNames: shuffle(\r\n        state.tablewares.reduce((acc, tableware) => {\r\n          return [...acc, { name: tableware.name, choosen: false }];\r\n        }, [])\r\n      ),\r\n      tutorialTablewareSelectionNotification: true,\r\n    });\r\n  };\r\n\r\n  const addTableware = (selectedTableware) => () => {\r\n    if (selectedTableware.name !== state.tablewareImageSelected.name) {\r\n      setState({\r\n        ...state,\r\n        wrongCombiantionNotification: true,\r\n        wrongTablewarePairSelected: [\r\n          ...state.wrongTablewarePairSelected,\r\n          {\r\n            imageSelected: state.tablewareImageSelected.name,\r\n            nameSelected: selectedTableware.name,\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        shuffledTablewaresNames: state.shuffledTablewaresNames.map(\r\n          (tableware) => {\r\n            if (tableware.name === selectedTableware.name)\r\n              return {\r\n                ...tableware,\r\n                choosen: true,\r\n              };\r\n\r\n            return tableware;\r\n          }\r\n        ),\r\n        shuffledTablewares: state.shuffledTablewares.map((tableware) => {\r\n          if (tableware.name === state.tablewareImageSelected.name)\r\n            return {\r\n              ...tableware,\r\n              choosen: true,\r\n            };\r\n\r\n          return tableware;\r\n        }),\r\n        tablewareImagePick: true,\r\n        tableTablewares: [\r\n          ...state.tableTablewares,\r\n          state.tablewareImageSelected,\r\n        ],\r\n        tablewareImageSelected: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkTableware = () => {\r\n    setState({\r\n      ...state,\r\n      wrongTablewareSelected: state.tableTablewares\r\n        .filter((tableware) => !tableware.correct)\r\n        .map((tableware) => {\r\n          return { name: tableware.name };\r\n        }),\r\n      endConfirmation: true,\r\n      runTimer: false,\r\n    });\r\n  };\r\n\r\n  // const clearTableTableware = () => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     wrongTablewareNotification: false,\r\n  //     shuffledTablewaresNames: state.shuffledTablewaresNames.map(\r\n  //       (tableware) => {\r\n  //         return {\r\n  //           ...tableware,\r\n  //           choosen: false,\r\n  //         };\r\n  //       }\r\n  //     ),\r\n  //     shuffledTablewares: state.shuffledTablewares.map((tableware) => {\r\n  //       return {\r\n  //         ...tableware,\r\n  //         choosen: false,\r\n  //       };\r\n  //     }),\r\n  //   });\r\n  // };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(false) });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const endGame = (timeUp, saveResult = true) => {\r\n    setState({\r\n      ...state,\r\n      scene: \"END_GAME\",\r\n      timeUp: timeUp,\r\n      feedbackMessages: [\r\n        {\r\n          image: tomato,\r\n          message: state.wrongIngredientSelected.length\r\n            ? \"Você se atrapalhou um pouco, mas conseguiu pegar as quantidades certas de ingredientes no final!\"\r\n            : \"Você pegou os ingredientes certos de primeira!\",\r\n          messageTranslate: state.wrongIngredientSelected.length\r\n            ? \"You messed it up a bit but managed to get the right ingredientes!\"\r\n            : \"You picked the right ingredients on your first try!\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: state.wrongIngredientNameOrder.length\r\n            ? \"Dar nomes aos ingredientes te deu algum trabalho!\"\r\n            : \"Acertar os nomes foi moleza para você!\",\r\n          messageTranslate: state.wrongIngredientNameOrder.length\r\n            ? \"Naming the ingredients gave you some trouble!\"\r\n            : \"Getting the names right was a piece of cake for you!\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: state.wrongTablewarePairSelected.length\r\n            ? \"Você teve um pouco de dificuldade em ligar os utensílios aos seus nomes.\"\r\n            : \"Ligar os utensílios aos seus nomes foi fácil para você!\",\r\n          messageTranslate: state.wrongTablewarePairSelected.length\r\n            ? \"Matching the kitchen utensils with their names was a bit tough for you.\"\r\n            : \"Matching the kitchen utensils with their names was pretty easy for you!\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: state.wrongTablewareSelected.length\r\n            ? \"E você tem alguns problemas sobre como servir sua comida...\"\r\n            : \"E você sabe exatamente onde servir sua comida!\",\r\n          messageTranslate: state.wrongTablewareSelected.length\r\n            ? \"And you've got some problems with how to serve your food...\"\r\n            : \"And you know exactly where to serve your food!\",\r\n        },\r\n      ],\r\n    });\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n\r\n    if (saveResult)\r\n      dispatch(\r\n        gameActions.create(\"results\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n          secondsTaken: timeUp\r\n            ? state.initTime + 1\r\n            : state.initTime - state.remainingTime,\r\n          recipe: state.recipe.id,\r\n          won: !timeUp,\r\n          wrongIngredientSelected: state.wrongIngredientSelected.length\r\n            ? JSON.stringify(state.wrongIngredientSelected)\r\n            : null,\r\n          wrongIngredientNameOrder: state.wrongIngredientNameOrder.length\r\n            ? JSON.stringify(state.wrongIngredientNameOrder)\r\n            : null,\r\n          wrongTablewarePairSelected: state.wrongTablewarePairSelected.length\r\n            ? JSON.stringify(state.wrongTablewarePairSelected)\r\n            : null,\r\n          wrongTablewareSelected: state.wrongTablewareSelected.length\r\n            ? JSON.stringify(state.wrongTablewareSelected)\r\n            : null,\r\n        })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div id=\"game2-wrapper\">\r\n      {process.env.NODE_ENV === \"development\" && (\r\n        <div style={{ position: \"absolute\", zIndex: 100000000, top: 0 }}>\r\n          <button onClick={() => setState({ ...state, runTimer: false })}>\r\n            Stop timer\r\n          </button>\r\n          <button onClick={restart}>Restart</button>\r\n          <button onClick={() => endGame(false, false)}>End game win</button>\r\n          <button onClick={() => endGame(true, false)}>End game lose</button>\r\n          <button\r\n            onClick={() =>\r\n              setState({\r\n                ...state,\r\n                scene: \"COOK\",\r\n                tutorialIngredientSelectionNotification: true,\r\n              })\r\n            }\r\n          >\r\n            Cooking\r\n          </button>\r\n          <button onClick={moveToServing}>Serving</button>\r\n        </div>\r\n      )}\r\n      {mission ? (\r\n        //verificar se é possível generalizar esses gameX-wrapper\r\n        <div id=\"game2-content\">\r\n          {(function renderScene() {\r\n            switch (state.scene) {\r\n              case \"INIT\":\r\n                return (\r\n                  <Init\r\n                    icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                    name={mission.name}\r\n                    description={mission.description}\r\n                    nameTranslate={\r\n                      mission.nameTranslate.find((name) => {\r\n                        return name.language.id === lang;\r\n                      }).name\r\n                    }\r\n                    descriptionTranslate={\r\n                      mission.descriptionTranslate.find((description) => {\r\n                        return description.language.id === lang;\r\n                      }).description\r\n                    }\r\n                    onStart={onStartGame}\r\n                    onBack={() => setState({ ...state, back: true })}\r\n                    ready={state.ingredientsList.length > 0}\r\n                  />\r\n                );\r\n              case \"INTRO\":\r\n                return (\r\n                  <Intro\r\n                    recipe={state.recipe}\r\n                    chef={missionData.character}\r\n                    ingredientsList={state.ingredientsList}\r\n                    goToKitchen={() =>\r\n                      setState({\r\n                        ...state,\r\n                        scene: \"COOK\",\r\n                        tutorialIngredientSelectionNotification: true,\r\n                      })\r\n                    }\r\n                    seconds={state.remainingTime}\r\n                  />\r\n                );\r\n              case \"COOK\":\r\n                return (\r\n                  <div>\r\n                    <Timer\r\n                      run={state.runTimer}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) => {\r\n                        setState({\r\n                          ...state,\r\n                          remainingTime: remaining,\r\n                        });\r\n                      }}\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n\r\n                    {!state.doneCooking && state.showIngredients && (\r\n                      <Recipe\r\n                        ingredientsList={state.ingredientsList}\r\n                        hasImage={false}\r\n                        showCheck={(ingredient) => ingredient.done}\r\n                        iconShouldShow={!state.recipeContinue}\r\n                      />\r\n                    )}\r\n\r\n                    {state.tutorialIngredientSelectionNotification && (\r\n                      <div className=\"overlay-tutorial-notification\">\r\n                        <div className=\"overlay-tutorial-notification-content blob-right\">\r\n                          <img\r\n                            src={blobLaranja}\r\n                            alt=\"\"\r\n                            className=\"tutorial-notification-blob\"\r\n                          />\r\n                          <div className=\"tutorial-notification-message\">\r\n                            <span lang=\"pt-br\">\r\n                              Clique no ingrediente que você deseja colocar na\r\n                              bancada para preparar a receita na ordem correta e\r\n                              confirme.\r\n                            </span>\r\n                            <span lang=\"en\">\r\n                              Click on the ingredient you want to put on the\r\n                              conter to preper the recipe in the correct order\r\n                              and confirm.\r\n                            </span>\r\n                            <button\r\n                              className=\"btn\"\r\n                              onClick={() =>\r\n                                setState({\r\n                                  ...state,\r\n                                  runTimer: true,\r\n                                  tutorialIngredientSelectionNotification: false,\r\n                                })\r\n                              }\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.tutorialIngredientNameSelectionNotification && (\r\n                      <div className=\"overlay-tutorial-notification\">\r\n                        <div className=\"overlay-tutorial-notification-content blob-right\">\r\n                          <img\r\n                            src={blobLaranja}\r\n                            alt=\"\"\r\n                            className=\"tutorial-notification-blob\"\r\n                          />\r\n                          <div className=\"tutorial-notification-message\">\r\n                            <span lang=\"pt-br\">\r\n                              Selecione as letras na ordem correta para escrever\r\n                              o nome do ingrediente.\r\n                            </span>\r\n                            <span lang=\"en\">\r\n                              Select the letters in the correct order to write\r\n                              the name of the ingredient.\r\n                            </span>\r\n                            <button\r\n                              className=\"btn\"\r\n                              onClick={() =>\r\n                                setState({\r\n                                  ...state,\r\n                                  runTimer: true,\r\n                                  tutorialIngredientNameSelectionNotification: false,\r\n                                })\r\n                              }\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {!state.doneCooking &&\r\n                      (state.showIngredients ? (\r\n                        <div className=\"ingredients-div\">\r\n                          <div className=\"suffled-ingredients\">\r\n                            {state.shuffledIngredients.map(\r\n                              (ingredient, index) => (\r\n                                <img\r\n                                  key={\"suffled-ingredient-\" + index}\r\n                                  src={ingredient.image}\r\n                                  alt=\"\"\r\n                                  onClick={() =>\r\n                                    setState({\r\n                                      ...state,\r\n                                      selectedIngredient: { ...ingredient },\r\n                                    })\r\n                                  }\r\n                                  style={{\r\n                                    opacity: ingredient.done ? 0 : 1,\r\n                                    pointerEvents: ingredient.done\r\n                                      ? \"none\"\r\n                                      : \"auto\",\r\n                                    width:\r\n                                      (\r\n                                        90 / state.shuffledIngredients.length\r\n                                      ).toString() + \"vw\",\r\n                                  }}\r\n                                  className={\r\n                                    (state.selectedIngredient\r\n                                      ? ingredient.name ===\r\n                                        state.selectedIngredient.name\r\n                                        ? \"selected\"\r\n                                        : \"\"\r\n                                      : \"\") +\r\n                                    (index % 2\r\n                                      ? \" ingredient-selection-img-even\"\r\n                                      : \" ingredient-selection-img-odd\") +\r\n                                    \" ingredient-selection-img\"\r\n                                  }\r\n                                />\r\n                              )\r\n                            )}\r\n                          </div>\r\n                          {state.selectedIngredient && (\r\n                            <button\r\n                              className=\"btn btn-add-to-conter\"\r\n                              onClick={checkRightIngredient}\r\n                            >\r\n                              Adicionar à bancada\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"name-order-div absolute-center\">\r\n                          <div className=\"shuffled-letters\">\r\n                            {state.shuffledName.map((letter, index) => (\r\n                              <span\r\n                                key={index}\r\n                                onClick={addLetter(letter, index)}\r\n                                style={{\r\n                                  opacity: letter.selected ? 0 : 1,\r\n                                  pointerEvents: letter.selected\r\n                                    ? \"none\"\r\n                                    : \"auto\",\r\n                                }}\r\n                                className=\"letter\"\r\n                              >\r\n                                {letter.letter}\r\n                              </span>\r\n                            ))}\r\n                          </div>\r\n                          <div className=\"ordered-letters-div\">\r\n                            <div className=\"ordered-letters\">\r\n                              {state.userLetterOrder.reduce(\r\n                                (acc, letter) => acc + letter.letter,\r\n                                \"\"\r\n                              )}\r\n                            </div>\r\n                            <div className=\"ordered-letters-buttons\">\r\n                              <img\r\n                                onClick={clearIngredientName}\r\n                                src={error}\r\n                                alt=\"clear-ingredient-name\"\r\n                              />\r\n                              <img\r\n                                onClick={checkIngredientName}\r\n                                src={right}\r\n                                alt=\"check-ingredient-name\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n\r\n                    {state.wrongIngredientNotification && (\r\n                      <div className=\"overlay-error-notification\">\r\n                        <div className=\"overlay-error-notification-content\">\r\n                          <img\r\n                            src={blobLaranja}\r\n                            alt=\"\"\r\n                            className=\"error-notification-blob absolute-center\"\r\n                          />\r\n                          <div className=\"error-notification-message absolute-center\">\r\n                            <span>\r\n                              Esse item não é o que você precisa agora.\r\n                            </span>\r\n                            <button\r\n                              className=\"btn\"\r\n                              onClick={() =>\r\n                                setState({\r\n                                  ...state,\r\n                                  selectedIngredient: null,\r\n                                  wrongIngredientNotification: false,\r\n                                })\r\n                              }\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.wrongIngredientNameNotification && (\r\n                      <div className=\"overlay-error-notification\">\r\n                        <div className=\"overlay-error-notification-content\">\r\n                          <img\r\n                            src={blobLaranja}\r\n                            alt=\"\"\r\n                            className=\"error-notification-blob absolute-center\"\r\n                          />\r\n                          <div className=\"error-notification-message absolute-center\">\r\n                            <span>\r\n                              {state.userLetterOrder.reduce(\r\n                                (acc, letter) => acc + letter.letter,\r\n                                \"\"\r\n                              )}{\" \"}\r\n                              não serve para sua receita.\r\n                            </span>\r\n                            <button\r\n                              className=\"btn\"\r\n                              onClick={() => clearIngredientName()}\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {!state.doneCooking &&\r\n                      (state.showIngredients ? (\r\n                        <div className=\"conter\">\r\n                          {state.tableIngredients.map((ingredient, index) => (\r\n                            <img\r\n                              src={ingredient.image}\r\n                              alt={ingredient.name}\r\n                              key={ingredient.name}\r\n                              className={\r\n                                \"conter-ingredient\" +\r\n                                (index % 2\r\n                                  ? \" conter-ingredient-even\"\r\n                                  : \" conter-ingredient-odd\")\r\n                              }\r\n                              style={{\r\n                                width:\r\n                                  (\r\n                                    70 / state.shuffledIngredients.length\r\n                                  ).toString() + \"vw\",\r\n                              }}\r\n                            />\r\n                          ))}\r\n                          {[\r\n                            ...Array(\r\n                              state.ingredientsList.length -\r\n                                state.tableIngredients.length\r\n                            ),\r\n                          ].map((item, index) => (\r\n                            <div\r\n                              key={index}\r\n                              className={\r\n                                \"conter-ingredient\" +\r\n                                (index % 2\r\n                                  ? \" conter-ingredient-even\"\r\n                                  : \" conter-ingredient-odd\")\r\n                              }\r\n                              style={{\r\n                                width:\r\n                                  (\r\n                                    70 / state.shuffledIngredients.length\r\n                                  ).toString() + \"vw\",\r\n                                height: \"4vh\",\r\n                              }}\r\n                            ></div>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <div className=\"conter\"></div>\r\n                          <img\r\n                            src={state.sortNameIngredient.image}\r\n                            alt=\"\"\r\n                            className=\"conter-ingredient-solo absolute-center\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n\r\n                    {state.doneCooking && (\r\n                      <div>\r\n                        <div id=\"dialog-interact\">\r\n                          <div id=\"dialogos\">\r\n                            <div id=\"dialog-box\">\r\n                              <span lang=\"pt-br\">\r\n                                Parabéns! Parece bom, mas você não vai me servir\r\n                                na panela, né? Escolha <strong>três</strong>{\" \"}\r\n                                utensílios adequados para servir seu prato! Nem\r\n                                mais, nem menos.\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                Congratulations! It looks good, but you`re not\r\n                                going to serv me in the pan, are you? Choose{\" \"}\r\n                                <strong>three</strong> approppriate utensils to\r\n                                serve your dish! No more, no less.\r\n                              </span>\r\n                            </div>\r\n                            <button\r\n                              className=\"btn btn-center\"\r\n                              id=\"btn-move-to-payment\"\r\n                              onClick={moveToServing}\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <DialogCharacter\r\n                            character={missionData.character}\r\n                            feeling={\"default\"}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              case \"SERVE\":\r\n                return (\r\n                  <div>\r\n                    <Timer\r\n                      run={state.runTimer}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) => {\r\n                        setState({\r\n                          ...state,\r\n                          remainingTime: remaining,\r\n                        });\r\n                      }}\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n                    {!state.endConfirmation && (\r\n                      <div>\r\n                        {state.wrongCombiantionNotification && (\r\n                          <div className=\"overlay-error-notification\">\r\n                            <div className=\"overlay-error-notification-content\">\r\n                              <img\r\n                                src={blobLaranja}\r\n                                alt=\"\"\r\n                                className=\"error-notification-blob absolute-center\"\r\n                              />\r\n                              <div className=\"error-notification-message absolute-center\">\r\n                                <span>Esse não é o nome desse item.</span>\r\n                                <button\r\n                                  className=\"btn\"\r\n                                  onClick={() =>\r\n                                    setState({\r\n                                      ...state,\r\n                                      tablewareImagePick: true,\r\n                                      tablewareImageSelected: null,\r\n                                      wrongCombiantionNotification: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Continuar\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n\r\n                        {state.tutorialTablewareSelectionNotification && (\r\n                          <div>\r\n                            <img\r\n                              src={blobLaranja}\r\n                              alt=\"\"\r\n                              className=\"smaller-tutorial-notification-blob\"\r\n                            />\r\n                            <div className=\"smaller-tutorial-notification-message\">\r\n                              <span>Quais 3 utensilios você vai escolher?</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n\r\n                        {state.tableTablewares.length === 3 && (\r\n                          <img\r\n                            onClick={() => checkTableware()}\r\n                            src={silverCloche}\r\n                            alt=\"\"\r\n                            className=\"serve-button\"\r\n                          />\r\n                        )}\r\n\r\n                        <div className=\"tableware-selection-div\">\r\n                          <div className=\"shuffled-tablewares\">\r\n                            {state.shuffledTablewares.map(\r\n                              (tableware, index) => (\r\n                                <img\r\n                                  key={index}\r\n                                  src={tableware.image}\r\n                                  style={{\r\n                                    opacity: tableware.choosen\r\n                                      ? 0\r\n                                      : !state.tablewareImagePick\r\n                                      ? 0.4\r\n                                      : 1,\r\n                                    pointerEvents: tableware.choosen\r\n                                      ? \"none\"\r\n                                      : !state.tablewareImagePick\r\n                                      ? \"none\"\r\n                                      : \"auto\",\r\n                                    width:\r\n                                      (\r\n                                        60 / state.shuffledTablewares.length\r\n                                      ).toString() + \"vw\",\r\n                                  }}\r\n                                  onClick={() =>\r\n                                    setState({\r\n                                      ...state,\r\n                                      tutorialTablewareSelectionNotification: false,\r\n                                      tablewareImagePick: false,\r\n                                      tablewareImageSelected: tableware,\r\n                                    })\r\n                                  }\r\n                                  className={\r\n                                    (state.tablewareImageSelected\r\n                                      ? tableware.name ===\r\n                                        state.tablewareImageSelected.name\r\n                                        ? \"selected-tableware\"\r\n                                        : \"\"\r\n                                      : \"\") + \" ingredient-selection-img\"\r\n                                  }\r\n                                  alt=\"\"\r\n                                />\r\n                              )\r\n                            )}\r\n                          </div>\r\n                          <div className=\"shuffled-tableware-names\">\r\n                            {state.shuffledTablewaresNames.map(\r\n                              (tableware, index) => (\r\n                                <span\r\n                                  key={index}\r\n                                  style={{\r\n                                    opacity: tableware.choosen\r\n                                      ? 0\r\n                                      : state.tablewareImagePick\r\n                                      ? 0.4\r\n                                      : 1,\r\n                                    pointerEvents: tableware.choosen\r\n                                      ? \"none\"\r\n                                      : state.tablewareImagePick\r\n                                      ? \"none\"\r\n                                      : \"auto\",\r\n                                    width:\r\n                                      (\r\n                                        60 / state.shuffledTablewares.length\r\n                                      ).toString() + \"vw\",\r\n                                  }}\r\n                                  onClick={addTableware(tableware)}\r\n                                >\r\n                                  {tableware.name}\r\n                                </span>\r\n                              )\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"conter\">\r\n                          {state.tableTablewares.map((tableware, index) => (\r\n                            <img\r\n                              key={index}\r\n                              src={tableware.image}\r\n                              alt=\"\"\r\n                              className=\"table-tableware-space\"\r\n                            />\r\n                          ))}\r\n                          {console.log(Array(3 - state.tableTablewares.length))}\r\n                          {[...Array(3 - state.tableTablewares.length)].map(\r\n                            (item, index) => (\r\n                              <div className=\"table-tableware-space\"></div>\r\n                            )\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.endConfirmation && (\r\n                      <div>\r\n                        <div id=\"dialog-interact\">\r\n                          <div id=\"dialogos\">\r\n                            <div id=\"dialog-box\">\r\n                              <span lang=\"pt-br\">\r\n                                Parabéns! Você é o mais novo finalista do\r\n                                MestreCuca! Agora, aguarde a deliberação dos\r\n                                jurados.{\" \"}\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                Congrats! You are the brand new finalist of\r\n                                MestreCuca! Now, wait while the judges decide.{\" \"}\r\n                              </span>\r\n                            </div>{\" \"}\r\n                            <button\r\n                              className=\"btn btn-center\"\r\n                              id=\"btn-move-to-payment\"\r\n                              onClick={() => {\r\n                                endGame(false);\r\n                              }}\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <DialogCharacter\r\n                            character={missionData.character}\r\n                            feeling={\"default\"}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              case \"END_GAME\":\r\n                return (\r\n                  <div\r\n                    className={\r\n                      state.timeUp ? \"salmon-background\" : \"blue-background\"\r\n                    }\r\n                  >\r\n                    <div className=\"game-4-feedback absolute-center\">\r\n                      {state.timeUp ? (\r\n                        <div>\r\n                          <div className=\"game-4-feedback-lose\">\r\n                            <div className=\"game-4-feedback-lose-content\">\r\n                              <img src={hourglassEmpty} alt=\"hourglass-empty\" />\r\n                              <span className=\"abril-fatface game-4-time-up-title\">\r\n                                O tempo acabou!\r\n                              </span>\r\n                              <div className=\"game-4-time-up-text\">\r\n                                <span lang=\"pt-br\">\r\n                                  Preparar o prato perfeito não é uma tarefa\r\n                                  fácil!\r\n                                </span>\r\n                                <span\r\n                                  lang=\"en\"\r\n                                  className=\"italic white-line-before\"\r\n                                >\r\n                                  Time is up! Making the perfect dish is not an\r\n                                  easy task.\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div\r\n                              className=\"big-time-shower\"\r\n                              style={{\r\n                                backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                backgroundRepeat: \"no-repeat\",\r\n                                backgroundSize: \"contain\",\r\n                                backgroundPosition: \"center\",\r\n                              }}\r\n                            >\r\n                              <span className=\"absolute-center abril-fatface\">\r\n                                0:00\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            id=\"feedback-endGame-action-btns\"\r\n                            style={{ marginTop: \"5vh\" }}\r\n                          >\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"game-4-feedback-win\">\r\n                          <div className=\"game-4-feedback-left\">\r\n                            <div className=\"game-4-finished-in\">\r\n                              <img src={hourglassFull} alt=\"hourglass-full\" />\r\n                              <div className=\"game-4-finished-in-text\">\r\n                                <span lang=\"pt-br\" className=\"abril-fatface\">\r\n                                  Você finalizou em:\r\n                                </span>\r\n                                <span\r\n                                  lang=\"en\"\r\n                                  className=\"salmon-line-before italic line-before-margin-top-5\"\r\n                                >\r\n                                  Finished in:\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div\r\n                              className=\"time-shower\"\r\n                              style={{\r\n                                backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                backgroundRepeat: \"no-repeat\",\r\n                                backgroundSize: \"contain\",\r\n                                backgroundPosition: \"center\",\r\n                              }}\r\n                            >\r\n                              <span className=\"absolute-center abril-fatface\">\r\n                                {zeroFill(\r\n                                  Math.floor(\r\n                                    (state.initTime - state.remainingTime) / 60\r\n                                  ).toString(),\r\n                                  2\r\n                                )}\r\n                                :\r\n                                {zeroFill(\r\n                                  (\r\n                                    (state.initTime - state.remainingTime) %\r\n                                    60\r\n                                  ).toString(),\r\n                                  2\r\n                                )}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <FeedbackPanel\r\n                            feedback={state.feedbackMessages}\r\n                            restart={restart}\r\n                            leave={() => setState({ ...state, back: true })}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              default:\r\n                return <div>Error</div>;\r\n            }\r\n          })()}\r\n          {state.back && <Redirect to=\"/userspace\" />}\r\n        </div>\r\n      ) : (\r\n        <div>Loading..</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game4;\r\n","import React from 'react'\r\n\r\nconst DressingCharacter = ({clothesTypes, clothes, onRemoveClick, ...props}) => {\r\n  return(\r\n    <div {...props}>\r\n      <img src=\"\" alt=\"character\"/>\r\n      <div>\r\n        {clothesTypes.map((item, index) =>\r\n          <div key={index}>{item}: {clothes[index]? clothes[index].name : \"none\"}\r\n            {onRemoveClick && clothes[index] &&\r\n\r\n              <button onClick={onRemoveClick(index)}>Remove</button>\r\n            }\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DressingCharacter\r\n","import React from 'react'\r\n\r\n// import Tabs from '@material-ui/core/Tabs'\r\n// import Tab from '@material-ui/core/Tab'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Wardrobe = ({clothes, onClothesClick, ...props}) => {\r\n  const [state, setState] = React.useState(0)\r\n  const labels = [\"Head\", \"Top\", \"Bottom\", \"Shoes\"]\r\n\r\n  return(\r\n    <div {...props}>\r\n      <div>\r\n        {labels.map((label, index) =>\r\n          <button onClick={() => setState(index)}>{label}</button>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {clothes.filter( item => item.type === state)\r\n        .map((item, index) =>\r\n            <Button key={index} onClick={onClothesClick(item)}>{item.name}</Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wardrobe\r\n","const initialState = () => ({\r\n  clothesTypes: [\"HEAD\", \"TOP\", \"BOTTOM\", \"SHOES\"],\r\n  scene: 'INIT',\r\n  chooseCharacterScreen: true,\r\n  choosenCharacter: null,\r\n  showInvitation: false,\r\n  proceedToDressingConfirmation: false,\r\n  dressingContext: false,\r\n  dressingTabIndex: 0,\r\n  clothes: [null, null, null, null],\r\n  readyAlert: false\r\n})\r\n\r\nexport default initialState\r\n","const stub = {\r\n  id:'0',\r\n  name: 'Missão do jogo 5 yay',\r\n  nameTranslate: 'Titulo só que em inglês',\r\n  description: 'O jogo 5 é de vestir roupinha. Simbora.',\r\n  descriptionTranslate: 'Descrição em inglês',\r\n  invitation:{\r\n    text: \"Você foi convidado para um rolê!\",\r\n    date: \"01/04\",\r\n    time: \"16h\",\r\n    season: \"Verão\",\r\n  },\r\n  clothes:[\r\n    {\r\n      type: 0,\r\n      name: \"chapeu de couro\"\r\n    },\r\n    {\r\n      type: 0,\r\n      name: \"chapeu do kiko\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa normal\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa de frio\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"bermuda\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"calça jeans\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"tenis\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"chinelo\"\r\n    },\r\n  ]\r\n}\r\n\r\nexport default stub\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Init from '../../_components/Init'\r\nimport DressingCharacter from '../../_components/DressingCharacter'\r\nimport Wardrobe from '../../_components/Wardrobe'\r\n\r\n\r\n\r\nimport initialState from './initialState'\r\n\r\nimport stub from './stub'\r\n\r\nconst Game5 = () => {\r\n  const [state, setState] = React.useState(initialState())\r\n  const mission = stub\r\n\r\n  const onStartGame = () => setState({...state, scene: 'GAME'})\r\n\r\n  return(\r\n    <div>\r\n      {(function scene(){\r\n        switch(state.scene){\r\n          case 'INIT':\r\n          return (\r\n            <Init\r\n              name={mission.name}\r\n              description={mission.description}\r\n              nameTranslate={ mission.nameTranslate\r\n                //mission.nameTranslate.find((name) => {\r\n                //  return name.language.id === lang;\r\n                //}).name\r\n              }\r\n              descriptionTranslate={ mission.descriptionTranslate\r\n                //mission.descriptionTranslate.find((description) => {\r\n                //  return description.language.id === lang;\r\n                //}).description\r\n              }\r\n              onStart={onStartGame}\r\n              onBack={() => setState({ ...state, back: true })}\r\n              ready={mission.id}\r\n            />\r\n          )\r\n\r\n          case 'GAME':\r\n            return(\r\n              <div>\r\n                {state.chooseCharacterScreen &&\r\n                  <div>\r\n                    Escolha quem vestir\r\n                    <div>\r\n                      <button onClick={()=> setState({...state, choosenCharacter: 1, showInvitation: true, chooseCharacterScreen: false})}>Personagem 1</button>\r\n                      <button onClick={()=> setState({...state, choosenCharacter: 2, showInvitation: true, chooseCharacterScreen: false})}>Personagem 2</button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                {state.showInvitation &&\r\n                  <div>\r\n                    <div>{mission.invitation.text}</div>\r\n                    <div>{mission.invitation.season}</div>\r\n                    <div>{mission.invitation.date}</div>\r\n                    <div>{mission.invitation.time}</div>\r\n                    <div>\r\n                      <button onClick={()=>setState({...state, proceedToDressingConfirmation: true, showInvitation: false})}>Estou pronto!</button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                {state.proceedToDressingConfirmation &&\r\n                  <div>\r\n                    <div>Tem certeza?</div>\r\n                    <div>ocê terá apenas uma (1) chance de rever cada informação do convite</div>\r\n                    <div>Deseja continuar?</div>\r\n                    <button onClick={()=>setState({...state, proceedToDressingConfirmation: false, showInvitation: true})}>Ver o convite novamente</button>\r\n                    <button onClick={()=>setState({...state, proceedToDressingConfirmation: false, dressingContext: true})}>Estou pronto(a)!</button>\r\n                  </div>\r\n                }\r\n                {state.dressingContext &&\r\n                  <div>\r\n                    <DressingCharacter clothesTypes={state.clothesTypes} clothes={state.clothes}\r\n                      onRemoveClick={ index => () => {\r\n                        let clothes = [...state.clothes]\r\n                        clothes[index] = null\r\n                        setState({...state, clothes:clothes})\r\n                      }}\r\n                    />\r\n                    <Wardrobe clothes={mission.clothes}\r\n                      onClothesClick={ item => () =>\r\n                        {\r\n                          var clothes = [...state.clothes]\r\n                          clothes[item.type] = item\r\n                          setState({...state, clothes: clothes})\r\n                        }\r\n                      }\r\n                    />\r\n                    <button onClick={() =>{\r\n                        let clotheCount = state.clothes.reduce((acc, item)=> (item === null ? acc: acc + 1), 0)\r\n                        setState({...state, ready: clotheCount >= 2, readyAlert: clotheCount < 2})\r\n                      }}\r\n                    >\r\n                      Estou pronto!\r\n                    </button>\r\n                    {state.readyAlert &&\r\n                      <div>\r\n                        Não pode sair vestido tão pouco!\r\n                        <button onClick={()=>setState({...state, readyAlert: false})}>Voltar a vestir</button>\r\n                      </div>\r\n                    }\r\n                    {state.ready &&\r\n                      <div>\r\n                        Esse é seu look ideal?\r\n                        <button onClick={()=>setState({...state, ready: false, scene: \"END\"})}>Sim</button>\r\n                        <button onClick={()=>setState({...state, ready: false})}>Não</button>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                }\r\n              </div>\r\n            )\r\n          case \"END\":\r\n            return(\r\n              <div>\r\n                Fim de jogo! altos feedbacks.\r\n                <button onClick={() => setState(initialState())}>Jogar novamente</button>\r\n                <button onClick={() => setState({...state, back: true})}>Sair</button>\r\n              </div>\r\n            )\r\n          default:\r\n            return(<div>Error</div>)\r\n        }\r\n      })()}\r\n\r\n      {state.back && <Redirect to='/userspace' />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game5\r\n","const initialState = () => ({\r\n  scene: 'INIT',\r\n  back: false,\r\n  clothesTypes: [\"HEAD\", \"TOP\", \"BOTTOM\", \"SHOES\"],\r\n  dressingTabIndex: 0,\r\n  chooseCharacterScreen: true,\r\n  choosenCharacter: null,\r\n  cellPhoneStart: false,\r\n  showCellphone: false,\r\n  dressingContext: false,\r\n  clothes: [null, null, null, null],\r\n  dialog: [],\r\n  namingClothesContext: false,\r\n  selectedClothesName: null,\r\n  selectedColor: null\r\n\r\n})\r\n\r\nexport default initialState\r\n","const stub = {\r\n  id: '0',\r\n  name: 'Jogo6',\r\n  description: 'Descrição do jogo 6',\r\n  nameTranslate: 'Game6',\r\n  descriptionTranslate: 'Game 6 description',\r\n  clothes:[\r\n    {\r\n      type: 0,\r\n      name: \"chapeu de couro\",\r\n      color: \"marrom\"\r\n    },\r\n    {\r\n      type: 0,\r\n      name: \"chapeu do kiko\",\r\n      color: \"blue\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa normal\",\r\n      color: \"branco\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa de frio\",\r\n      color: \"preto\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"bermuda\",\r\n      color: \"amarelo\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"calça jeans\",\r\n      color: \"azul\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"tenis\",\r\n      color: \"verde\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"chinelo\",\r\n      color: \"laranja\"\r\n    },\r\n  ],\r\n  day: \"Dia tal\",\r\n  where: \"tal lugal\",\r\n  when: \"I don't know\"\r\n}\r\n\r\nexport default stub\r\n","import React from 'react'\r\n// import DialogHistory from '../../../../_components/DialogHistory'\r\n\r\n\r\nconst Cellphone = ({children, style, ...props}) => {\r\n  return(\r\n    <div style={{...style, position: 'relative'}}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cellphone\r\n","import React from 'react'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nimport initialState from './initialState'\r\nimport stub from './stub'\r\nimport Init from '../../_components/Init'\r\nimport FullscreenOverlay from '../../_components/FullscreenOverlay'\r\nimport DressingCharacter from '../../_components/DressingCharacter'\r\nimport Wardrobe from '../../_components/Wardrobe'\r\nimport DialogHistory from '../../_components/DialogHistory'\r\nimport Cellphone from './components/Cellphone'\r\nimport Button from '../../_components/Button'\r\n\r\nconst Game6 = () => {\r\n  const [state, setState] = React.useState(initialState())\r\n  const mission = stub\r\n  const onStartGame = () => setState({...state, scene: 'GAME'})\r\n  return(\r\n    <div>\r\n      {(function scene(){\r\n        switch(state.scene){\r\n          case 'INIT':\r\n            return(\r\n              <Init\r\n              name={mission.name}\r\n              description={mission.description}\r\n              nameTranslate={ mission.nameTranslate\r\n                //mission.nameTranslate.find((name) => {\r\n                //  return name.language.id === lang;\r\n                //}).name\r\n              }\r\n              descriptionTranslate={ mission.descriptionTranslate\r\n                //mission.descriptionTranslate.find((description) => {\r\n                //  return description.language.id === lang;\r\n                //}).description\r\n              }\r\n              onStart={onStartGame}\r\n              onBack={() => setState({ ...state, back: true })}\r\n              ready={mission.id}\r\n              />\r\n            )\r\n          case 'GAME':\r\n            return(\r\n              <div>\r\n              {state.chooseCharacterScreen &&\r\n                <div>\r\n                  Escolha quem vestir\r\n                  <div>\r\n                    <button onClick={()=> setState({...state, choosenCharacter: 1, cellPhoneStart: true, chooseCharacterScreen: false})}>Personagem 1</button>\r\n                    <button onClick={()=> setState({...state, choosenCharacter: 2, cellPhoneStart: true, chooseCharacterScreen: false})}>Personagem 2</button>\r\n                  </div>\r\n                </div>\r\n              }\r\n              {state.cellPhoneStart &&\r\n                <div>\r\n                  <button onClick={()=>setState({...state, cellPhoneStart: false, dressingContext: true})}>Estou pronto!</button>\r\n                </div>\r\n              }\r\n              {state.dressingContext &&\r\n                <div>\r\n                  {state.showCellphone ?\r\n                    <FullscreenOverlay onClickClose={() => setState({...state, showCellphone: false})}\r\n                      style={{width: '100%', height: '100%', backgroundColor: 'blue', zIndex: 10}}>\r\n                      <Cellphone style={{width: '30%', height: '90%', margin: '2% auto', backgroundColor: 'red', border: '1px solid red'}}>\r\n                        <DialogHistory dialogHistory={[{speaker: '', text: 'stuff'}, {speaker: '', text: 'stuff2'}, {speaker: 'player', text: 'stuff3'}]}\r\n                        />\r\n                        <div style={{display: 'flex', flexDirection: 'column', position: 'absolute', bottom: 0, width: '100%', backgroundColor: 'green'}}>\r\n                          <button>Que dia?</button>\r\n                          <button>Onde?</button>\r\n                          <button>Quando?</button>\r\n                        </div>\r\n                      </Cellphone>\r\n                    </FullscreenOverlay>\r\n                    :\r\n                    <div style={{position: 'absolute', top: '2%', left: '2%'}}>\r\n                      <button onClick={()=>setState({...state, showCellphone: true, dressingContext: true})}>Celular</button>\r\n                    </div>\r\n                  }\r\n                  <div style={{marginTop: '15%', display: 'flex', flexDirection: 'row', flexWrap: 'wrap', width: '100%'}}>\r\n                    <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                      <DressingCharacter clothesTypes={state.clothesTypes}\r\n                        clothes={state.clothes}\r\n                        showRemove\r\n                        onRemoveClick={ index => () => {\r\n                          let clothes = [...state.clothes]\r\n                          clothes[index] = null\r\n                          setState({...state, clothes:clothes})\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                      <Wardrobe style={{border: '1px solid red'}} clothes={mission.clothes}\r\n                          onClothesClick={ item => () =>\r\n                          {\r\n                            var clothes = [...state.clothes]\r\n                            clothes[item.type] = item\r\n                            setState({...state, clothes: clothes})\r\n                          }\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <button onClick={() =>{\r\n                      let clotheCount = state.clothes.reduce((acc, item)=> (item === null ? acc: acc + 1), 0)\r\n                      setState({...state, ready: clotheCount >= 2, readyAlert: clotheCount < 2})\r\n                    }}\r\n                  >\r\n                    Estou pronto!\r\n                  </button>\r\n                  {state.readyAlert &&\r\n                    <div>\r\n                      Não pode sair vestido tão pouco!\r\n                      <button onClick={()=>setState({...state, readyAlert: false})}>Voltar a vestir</button>\r\n                    </div>\r\n                  }\r\n                  {state.ready &&\r\n                    <FullscreenOverlay showCloseBtn={false}\r\n                      style={{width: '100%', height: '100%', backgroundColor: 'blue', zIndex: 10}}\r\n                    >\r\n                      <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                        <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                          <DressingCharacter\r\n                            clothesTypes={state.clothesTypes}\r\n                            clothes={state.clothes}\r\n                          />\r\n                        </div>\r\n                        <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                          Esse é seu look ideal?\r\n                          <button onClick={()=>setState({...state, ready: false, dressingContext:false, namingClothesContext: true})}>Sim</button>\r\n                          <button onClick={()=>setState({...state, ready: false})}>Não</button>\r\n                        </div>\r\n                      </div>\r\n                    </FullscreenOverlay>\r\n                  }\r\n                </div>\r\n              }\r\n              {state.namingClothesContext &&\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                  <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                    <Cellphone style={{width: '30%', height: '90%', margin: '2% auto', backgroundColor: 'red', border: '1px solid red'}}>\r\n                      <DialogHistory dialogHistory={[{speaker: '', text: 'stuff'}, {speaker: '', text: 'stuff2'}, {speaker: 'player', text: 'stuff3'}]}/>\r\n\r\n                      {!state.ready ?\r\n                        <div>\r\n                          <div style={{display: 'flex', flexDirection: 'column', position: 'absolute', bottom: 0, width: '100%', backgroundColor: 'green'}}>\r\n                            <button >Que dia?</button>\r\n                            <button>Onde?</button>\r\n                            <button>Quando?</button>\r\n                          </div>\r\n\r\n                          <button onClick={() => setState({...state, ready: true})}\r\n                            style={{width: '60%', marginLeft: '-30%', position: 'absolute', bottom: '-5%', left: '50%'}}>\r\n                            Prontinho!\r\n                          </button>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                          <button onClick={() => setState({...state, lastConfirmation: true, namingClothesContext: false})}>Sim</button>\r\n                          <button>Não</button>\r\n                        </div>\r\n                      }\r\n                    </Cellphone>\r\n                  </div>\r\n                  <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                    <DressingCharacter clothesTypes={state.clothesTypes}\r\n                      clothes={state.clothes}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              }\r\n              {state.lastConfirmation &&\r\n                <div>\r\n                  <Cellphone style={{width: '30%', height: '90%', margin: '2% auto', backgroundColor: 'red', border: '1px solid red'}}>\r\n                    <DressingCharacter clothesTypes={state.clothesTypes}\r\n                      clothes={state.clothes}\r\n                    />\r\n                  </Cellphone>\r\n                  <button onClick={()=>setState({...state, scene: 'END'})}>Next</button>\r\n                </div>\r\n              }\r\n              </div>\r\n            )\r\n          case 'END':\r\n            return(\r\n              <div>\r\n                <div>Tela de feedback</div>\r\n                <Button blink onClick={() => setState(initialState())}>Jogar novamente</Button>\r\n                <Button blink onClick={() => setState({...state, back: true})}>Sair do jogo</Button>\r\n              </div>\r\n            )\r\n          default:\r\n            return(<div>Error</div>)\r\n        }\r\n      }())}\r\n      {state.back && <Redirect to='/userspace'/>}\r\n    </div>\r\n  )\r\n}\r\n/*\r\n<div>\r\n  {!state.selectedClothesName &&\r\n    mission.clothes.map((item, index) =>\r\n    <button key={index} onClick={()=> setState({...state, selectedClothesName: item.name})}>\r\n      {item.name}\r\n    </button>\r\n  )}\r\n  {!state.selectedColor &&\r\n    mission.clothes.map((item, index) =>\r\n    <button key={index} onClick={()=> setState({...state, selectedColor: item.color})}>\r\n      {item.color}\r\n    </button>\r\n  )}\r\n  <div>\r\n    {state.selectedClothesName}\r\n  </div>\r\n  <div>\r\n    {state.selectedColor}\r\n  </div>\r\n</div>\r\n\r\n*/\r\nexport default Game6\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nfunction PrivateRoute ({component: Component, roles, render, ...rest}){\r\n    return (\r\n        <Route {...rest}\r\n          render={ props => localStorage.getItem('user') ?\r\n                    Component ? <Component {...props} />\r\n                  : render && render(props)\r\n                  : <Redirect to={{ pathname: '/login', state: {from:props.location} }} />\r\n          }\r\n        />\r\n    )\r\n}\r\n\r\nexport { PrivateRoute }\r\n","import './index.scss'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport { login } from '../../_actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://source.unsplash.com/random)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    }\r\n  }));\r\n\r\nconst Login = () => {\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [submitted, setSubmitted ] = useState(false)\r\n    const { email, password } = inputs\r\n    const loggingIn = useSelector(state => state.authentication.loggingIn)\r\n    const user = useSelector(state => state.authentication.user)\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const alert = useAlert()\r\n\r\n    function handleChange(e) { \r\n        const {name, value} = e.target\r\n        setInputs(inputs => ({...inputs, [name]: value}))\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        setSubmitted(true)\r\n\r\n        if(email && password){\r\n            dispatch(login(email, password))\r\n              .catch(() => {\r\n                alert.error('Email and/or password invalid! Please, check your inputs and try again!')\r\n              })\r\n\r\n        } else {\r\n          alert.error('Email and/or password missing! Please, check your inputs and try again!')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          {user ? user.user ? <Redirect to='/userspace' /> : null : null}\r\n          <CssBaseline />\r\n          <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n          <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"E-mail\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  className={'form-control' + (submitted && !email ? ' is-invalid' : '')}\r\n                  onChange={handleChange}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Senha\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  className={'form-control' + (submitted && !password ? ' is-invalid' : '')}\r\n                  onChange={handleChange}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                {loggingIn && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                  Sign in\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link to=\"/register\" variant=\"body2\">\r\n                    Don't have an account yet? Sign up!\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n\r\n\r\n}\r\n\r\nexport default Login \r\n","import './index.scss'\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { gameActions } from '../../_actions'\r\n\r\nconst UserSpace = () => {\r\n\r\n  const user = useSelector(state => state.authentication.user.user)\r\n  const game = useSelector( state => state.game)\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(gameActions.getAll('missions'))\r\n  }, [dispatch])\r\n\r\n  // React.useEffect(()=>{\r\n  //   dispatch(game_1_missionsActions.getAll())\r\n  // }, [dispatch, game_1_missionsActions])\r\n\r\n  // React.useEffect(()=>{\r\n  //   dispatch(game_3_missionsActions.getAll())\r\n  // }, [dispatch, game_3_missionsActions])\r\n\r\n  return(\r\n    <div id=\"userspace\">\r\n      {!user.id ?\r\n        <div>Loading...</div>\r\n        :\r\n        <div>\r\n          <p>Oi {user.username}!</p>\r\n\r\n          {/* user.role.type === \"professor\"  && <div id=\"area-criacao\">\r\n            Área de criação\r\n            <div>\r\n              <Link to='/missions'>Ver Missões</Link>\r\n            </div>\r\n\r\n            <div>\r\n              <Link to='/characters'>Personagens</Link>\r\n            </div>\r\n\r\n            <div>\r\n              <Link to='/questions'>Perguntas</Link>\r\n            </div>\r\n          </div>\r\n        */}\r\n\r\n          <div className=\"jogos\">\r\n            <p>Jogos:</p>\r\n            <div id=\"missoes\">\r\n              {game.loading ? <div>Loading...</div> :\r\n                game.items.missions && game.items.missions.map( (mission, index) =>\r\n                <div key={index} className=\"missao\">\r\n                  <Link to={`/game${mission.gameType.game}/${mission.id}`}>\r\n                    <div id=\"imagem\"></div>\r\n                    <div id=\"card-text-wrapper\">\r\n                      <div id=\"nome-missao\">{mission.name}</div>\r\n                      <div id=\"descricao\">{mission.description}</div>\r\n                      <div id=\"recompensas\">Recompensas</div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {process.env.NODE_ENV === 'development' &&\r\n            <div>\r\n              Development\r\n              <div>\r\n                <Link to='/game4/0'>Game4 Stub</Link><br/>\r\n                <Link to='/game5/0'>Game5 Stub</Link><br/>\r\n                <Link to='/game6/0'>Game6 Stub</Link><br/>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserSpace\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { apiActions, register } from '../../_actions'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { useAlert } from 'react-alert'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { MenuItem } from '@material-ui/core'\r\n\r\nimport { login } from '../../_actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\n\r\nconst Register = () => {\r\n  const classes = useStyles()\r\n  const alert = useAlert()\r\n\r\n  const { languagesActions } = apiActions\r\n\r\n  const [inputs, setInputs] = useState({\r\n      email: '',\r\n      password: '',\r\n      username: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      language: ''\r\n  })\r\n  const languages = useSelector(state => state.languages.items)\r\n  const [submitted, setSubmitted ] = useState(false)\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [blocked, setBlocked] = useState(false)\r\n  const registering = useSelector(state => state.authentication.registering)\r\n  const user = useSelector(state => state.authentication.user)\r\n  const dispatch = useDispatch()\r\n\r\n  function handleChange(e) {\r\n      const {name, value} = e.target\r\n      setInputs(inputs => ({...inputs, [name]: value}))\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n\t\tdispatch(languagesActions.getAll())\r\n\t}, [dispatch, languagesActions])\r\n\r\n  // É para executar somente no primeiro render\r\n  // Como um ComponentDidMount\r\n  React.useEffect(() => {\r\n    if( user?.user ) setRedirect(true)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  function handleSubmit(e) {\r\n      e.preventDefault()\r\n      setSubmitted(true)\r\n      setBlocked(true)\r\n      alert.info(\"Creating your account. Hold tight!\")\r\n\r\n      if(inputs.email && inputs.password && inputs.username && inputs.language){\r\n          dispatch(register(inputs))\r\n            .then(() => {\r\n              alert.success('Account succesfully created! Logging you in...')\r\n              dispatch(login(inputs.email, inputs.password))\r\n              setTimeout(()=>{\r\n                setRedirect(true)\r\n              }, 3000)\r\n            })\r\n            .catch(error => {\r\n              alert.error(error)\r\n              setBlocked(false)\r\n            })\r\n      } else {\r\n        alert.error('Required fields missing! Please, check your inputs and try again!')\r\n        setBlocked(false)\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n    {/*<Container maxWidthXs=\"xs\">*/}\r\n      {(redirect && user?.user) && <Redirect to={'/userspace'} />}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                className={submitted && !inputs.username ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                className={submitted && !inputs.email ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                className={submitted && !inputs.password ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"language\"\r\n                  label=\"Language\"\r\n                  type=\"language\"\r\n                  id=\"language\"\r\n                  className={submitted && !inputs.language ? 'danger' : ''}\r\n                  onChange={handleChange}\r\n                  select\r\n                  disabled={blocked}\r\n                >\r\n                  {languages.map((language, index) =>\r\n                    <MenuItem value={language.id} key={index}>{language.name}</MenuItem>\r\n                  )}\r\n              </TextField>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={blocked}\r\n          >\r\n          {registering && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n           Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n              Already have an account? Sign in!\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\n\r\nconst UserInfo = ({user}) => {\r\n  return(\r\n    <div>\r\n      Username: {user.username}\r\n      Email: {user.email}\r\n      Provider: {user.provider}\r\n      Confirmed: <input type='checkbox' checked={user.confirmed} />\r\n      Blocked: <input type='checkbox' checked={user.blocked} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInfo\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { userActions } from '../../_actions'\r\nimport Register from '../Register'\r\nimport UserInfo from '../../_components/UserInfo'\r\n\r\nconst UsersCRUD = () => {\r\n  const dispatch = useDispatch()\r\n  const users = useSelector( state => state.users )\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(userActions.getAll())\r\n  }, [dispatch])\r\n\r\n  console.log('users:', users)\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Create User:\r\n        <Register />\r\n      </div>\r\n      <div>\r\n        All Users:\r\n        {users && users.items ? users.items.map( (user, index) =>\r\n          <div key={index}>\r\n            <UserInfo user={user} />\r\n            <button onClick={()=>{}}>\r\n              UPDATE USER\r\n            </button>\r\n            <button onClick={()=>dispatch(userActions.delete(user.id))}>\r\n              DELETE USER\r\n            </button>\r\n          </div>\r\n        ): null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersCRUD\r\n","import React from 'react'\r\n\r\nconst Mission = ({mission}) => {\r\n\r\n  return(\r\n    <div>\r\n      <div>Nome: {mission.name}</div>\r\n      <div>\r\n        <div>Descrição:</div>\r\n        <div>{mission.description}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mission\r\n","import React from 'react'\r\n\r\nconst Character = ({character}) => {\r\n  const getAnswer = (qId) => {\r\n    let a = character.answers.find( answer => answer.question && answer.question.id === qId)\r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div style={{borderStyle: 'groove', borderRadius: 5}}>\r\n      <div style={{borderStyle: 'groove', borderRadius: 5}}>\r\n        <div>Name: {character.name}</div>\r\n        <div style={{display: 'flex'}}>\r\n          {character.characterAssets && character.characterAssets.length > 0 ?\r\n            character.characterAssets.map((characterAsset, index) =>\r\n              <div key={index}>\r\n                <img style={{width: 50}} src={`${character.characterAssets[index].image[0].url}`} alt={characterAsset.name}/>\r\n              </div>\r\n            ):'nenhum'\r\n          }\r\n        </div>\r\n        {character.characterAssets && <div>Layers: {character.characterAssets.length}</div>}\r\n        <div>Job: {character.job}</div>\r\n        <div>Country: {character.country}</div>\r\n        <div>Civil state: {character.civilState}</div>\r\n      </div>\r\n      <div>\r\n        <div> JOGO 1 - Missões que participa: </div>\r\n        {character.game_1_missions && character.game_1_missions.map((mission, index)=>\r\n          <div key={index}>\r\n            <div>{index+1}: {mission.name}</div>\r\n            {mission.questions.map((question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>Pergunta: {question.question}</div>\r\n                <div>Resposta: {getAnswer(question.id)}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <div> JOGO 2 - Missões que participa: </div>\r\n        {character.missions && character.missions.map((mission, index)=>\r\n          <div key={index}>\r\n            <div>{index+1}: {mission.name}</div>\r\n            {mission.questions.map((question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>Pergunta: {question.question}</div>\r\n                <div>Resposta: {getAnswer(question.id)}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div>Errou alguma: {character.wrongAnswer}</div>\r\n        <div>Acertou o suficiente: {character.rightAnswer}</div>\r\n        <div>Dica: {character.tip}</div>\r\n        <div>Resposta à acusação: {character.acusationAnswer}</div>\r\n        <div>Despedida: {character.endDialog}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Character\r\n","import React from 'react'\r\n\r\nconst Question = ({question}) => {\r\n  return(\r\n    <div style={{display: 'flex', flexDirection: 'row'}}>\r\n      <span>{question.question}</span> <span>{question.correct? 'true' : 'false'}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question\r\n","import React from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nimport Character from '../Character'\r\nimport Question from '../Question'\r\n\r\nconst EditMission = ({mission, onDone}) => {\r\n  const [state, setState] = React.useState(mission)\r\n\r\n  const [charList, setCharList] = React.useState(mission.missionCharacters)\r\n  const [locationList, setLocationList] = React.useState(mission.locations)\r\n  const [questionList, setQuestionList] = React.useState(mission.questions)\r\n  const characters = useSelector(state => state.characters)\r\n  const locations = useSelector(state => state.locations)\r\n  const questions = useSelector(state => state.questions)\r\n\r\n  const addToMission = (character) => () => {\r\n    setCharList([...charList, character])\r\n  }\r\n\r\n  const removeFromMission = (character) => () => {\r\n    setCharList(charList.filter( c => c.id !== character.id) )\r\n  }\r\n\r\n  const addLocationToMission = (location) => () => {\r\n    setLocationList([...locationList, location])\r\n  }\r\n\r\n  const removeLocationFromMission = (location) => () => {\r\n    setLocationList(locationList.filter( l => l.id !== location.id) )\r\n  }\r\n\r\n  const addQuestionToMission = (question) => () => {\r\n    setQuestionList([...questionList, question])\r\n  }\r\n\r\n  const removeQuestionFromMission = (question) => () => {\r\n    setQuestionList(questionList.filter(c => c.id !== question.id))\r\n  }\r\n\r\n  const onClick = () => {\r\n    let newState = {\r\n      id: state.id,\r\n      name: state.name,\r\n      description: state.description\r\n    }\r\n    newState.characters = charList.reduce((acc, character) => [...acc, character.id], [] )\r\n    newState.locations = locationList.reduce((acc, location) => [...acc, location.id], [] )\r\n    newState.questions = questionList.reduce((acc, question) => [...acc, question.id], [] )\r\n    onDone(newState)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Nome: <input value={state.name} onChange={ e => setState({...state, name: e.target.value})} />\r\n      </div>\r\n      <div>\r\n        Descrição: <input value={state.description} onChange={ e => setState({...state, description: e.target.value})} />\r\n      </div>\r\n\r\n      <div>\r\n        <div>Personagens na missão:</div>\r\n        {charList.map((character, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeFromMission(character)}><RemoveIcon /></Button>\r\n            <Character character={character}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Personagens disponíveis</div>\r\n        {characters.items && characters.items.length > 0 && characters.items\r\n          .filter( character => !charList.find( c => c.id === character.id ) )\r\n          .map( (character, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addToMission(character)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <Character character={character}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Locais na missão:</div>\r\n        {locationList.map((location, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeLocationFromMission(location)}><RemoveIcon /></Button>\r\n            <div>{location.name}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Locais disponíveis</div>\r\n        {locations.items && locations.items.length > 0 && locations.items\r\n          .filter( location => !locationList.find( l => l.id === location.id ) )\r\n          .map( (location, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addLocationToMission(location)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <div>{location.name}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Questions:</div>\r\n        {questionList.map( ( question, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeQuestionFromMission(question)}><RemoveIcon /></Button>\r\n            <Question question={question}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Preset questions</div>\r\n        {questions.items && questions.items.length > 0 && questions.items\r\n          .filter( question => !questionList.find( c => c.id === question.id) )\r\n          .map( (question, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addQuestionToMission(question)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <Question question={question}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Button onClick={onClick}><DoneIcon/></Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditMission\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n\r\nimport Mission from '../Mission'\r\nimport EditMission from '../EditMission'\r\n\r\nconst Missions = () => {\r\n  const { missionsActions, game_1_missionsActions } = apiActions\r\n  const dispatch = useDispatch()\r\n  const missions = useSelector( state => state.missions)\r\n  const game1missions = useSelector( state => state.game_1_missions)\r\n  const [ createMission, setCreateMission ] = React.useState(false)\r\n  const [ edit, setEdit ] = React.useState(-1)\r\n\r\n  React.useEffect(()=> {\r\n    setEdit(-1)\r\n    setCreateMission(false)\r\n  }, [missions])\r\n\r\n  React.useEffect(() => {\r\n    dispatch(game_1_missionsActions.getAll())\r\n  }, [dispatch, game_1_missionsActions])\r\n\r\n  React.useEffect(() => {\r\n    dispatch(missionsActions.getAll())\r\n  }, [dispatch, missionsActions])\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>Missões jogo 1</div>\r\n        {game1missions.items && game1missions.items.length > 0 && game1missions.items.map((mission, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            {edit !== index ?\r\n              <Mission key={index} mission={mission} />\r\n              : <EditMission mission={mission} onDone={(newState) => {\r\n                  setEdit(-1)\r\n                  dispatch(game_1_missionsActions.update(newState))\r\n                }} /> }\r\n\r\n            {edit !== index ?\r\n              <Button><Link to={`missions/edit/game_1_missions/${mission.id}`}><EditIcon/></Link></Button>\r\n              : <Button onClick={() => setEdit(-1) }><CancelIcon/></Button>\r\n             }\r\n\r\n            <Button onClick={() => dispatch(game_1_missionsActions.delete(mission.id))}><DeleteIcon/></Button>\r\n          </div>\r\n        )}\r\n        <Button onClick={() => setCreateMission(!createMission)}>\r\n          {createMission? 'Cancelar' : 'Criar Missão'}\r\n        </Button>\r\n        {createMission &&  <Redirect to='missions/create'/>}\r\n      </div>\r\n      <div>\r\n        <div>Missões jogo 2</div>\r\n        {missions.items && missions.items.length > 0 && missions.items.map((mission, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            {edit !== index ?\r\n              <Mission key={index} mission={mission} />\r\n              : <EditMission mission={mission} onDone={(newState) => {\r\n                  setEdit(-1)\r\n                  dispatch(missionsActions.update(newState))\r\n                }} /> }\r\n\r\n            {edit !== index ?\r\n              <Button><Link to={`missions/edit/${mission.id}`}><EditIcon/></Link></Button>\r\n              : <Button onClick={() => setEdit(-1) }><CancelIcon/></Button>\r\n             }\r\n\r\n            <Button onClick={() => dispatch(missionsActions.delete(mission.id))}><DeleteIcon/></Button>\r\n          </div>\r\n        )}\r\n        <Button onClick={() => setCreateMission(!createMission)}>\r\n          {createMission? 'Cancelar' : 'Criar Missão'}\r\n        </Button>\r\n        {createMission &&  <Redirect to='missions/create'/>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Missions\r\n","import React from 'react'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\nimport { useAlert } from 'react-alert'\r\n\r\nconst CreateCharacter = () => {\r\n  const { charactersActions } = apiActions\r\n  const [name, setName] = React.useState('')\r\n  const [job, setJob] = React.useState('')\r\n  const [civilState, setCivilState] = React.useState('single')\r\n  const civilStates = ['single', 'married', 'divorced', 'widowed']\r\n  const estadosCivis = ['solteir@', 'casad@', 'divorciad@', 'viúv@']\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert()\r\n\r\n  const create = () => {\r\n    dispatch(charactersActions.create({name: name, job: job, civilState: civilState})).then(() => {\r\n        alert.success('Character created!')\r\n    })\r\n    .catch(error => {\r\n        alert.error(error)\r\n    })\r\n    setName('')\r\n    setJob('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>Criador de personagens:</div>\r\n      <div>Nome: <input type='text' value={name} onChange={ e => setName(e.target.value)} /> </div>\r\n      <div>Trabalho: <input type='text' value={job} onChange={ e => setJob(e.target.value)} /> </div>\r\n      <div>Estado civil:\r\n        {civilStates.map((cs, index) =>\r\n          <div key={index}>\r\n            <Radio checked={civilState === civilStates[index]} value={civilStates[index]} onChange={ e => setCivilState(e.target.value)}/>\r\n            {estadosCivis[index]}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button onClick={create}>Criar</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateCharacter\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst CreateLocation = () => {\r\n  const [state, setState] = React.useState({name: ''})\r\n  const dispatch = useDispatch()\r\n  const { locationsActions } = apiActions\r\n\r\n  const create = () => {\r\n    dispatch(locationsActions.create(state))\r\n    setState({name: ''})\r\n  }\r\n  return (\r\n    <div>\r\n      Nome: <input value={state.name} onChange={ e => setState({...state, name:e.target.value})} placeholder='Sala de estar' />\r\n      <Button onClick={create}>Salvar</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateLocation\r\n","import { React, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst CreateQuestion = () => {\r\n    const { questionsActions }= apiActions\r\n    const dispatch = useDispatch()\r\n    const [inputs, setInputs] = useState({\r\n        question: '',\r\n        group: 0,\r\n        correct: true\r\n    })\r\n    const submitted = false\r\n    const classes = useStyles()\r\n    const creating = useSelector(state => state.authentication.registering)\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        console.log('inputs', inputs)\r\n        dispatch(questionsActions.create(inputs))\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                Create Question\r\n                </Typography>\r\n                <form id=\"create-question-form\" onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                            type=\"textArea\"\r\n                            name=\"question\"\r\n                            variant=\"outlined\"\r\n                            id=\"question\"\r\n                            label=\"Question\"\r\n                            fullWidth\r\n                            required\r\n                            className={submitted && (inputs.question === \"\") ? 'danger' : ''}\r\n                            onChange={e => {setInputs(inputs => ({...inputs, question: e.target.value}))}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"group\"\r\n                            label=\"Group\"\r\n                            name=\"group\"\r\n                            required\r\n                            aria-describedby=\"my-helper-text\"\r\n                            className={submitted && !inputs.group ? 'danger' : ''}\r\n                            onChange={e => {setInputs(inputs => ({...inputs,  group: parseInt(e.target.value)}))}}\r\n                            />\r\n                            <span id=\"my-helper-text\">Group is a integer that defines the which questions to show in every step. For example, if a question is group 1, it will be displayed on the first user interaction with a character.</span>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} justify=\"center\">\r\n                            <FormLabel component=\"legend\">Is question correct?</FormLabel>\r\n\r\n                            <RadioGroup\r\n                            aria-label=\"correct\"\r\n                            id=\"correct\"\r\n                            name=\"correct\"\r\n                            value={inputs.correct.toString()}\r\n                            required\r\n                            onChange={e => {setInputs(inputs => ({...inputs, correct: e.target.value === \"true\" ? true : false}))}}\r\n                            >\r\n                                <FormControlLabel value=\"true\" control={<Radio />} label=\"Correct\"/>\r\n                                <FormControlLabel value=\"false\" control={<Radio />} label=\"Incorrect\"/>\r\n                            </RadioGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    >\r\n                    {creating && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                    Create\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreateQuestion\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditMissionCharacter = ({missionCharacter, onDone, questions, cancel}) => {\r\n\r\n  const [state, setState] = React.useState({\r\n    answers: missionCharacter.answers ? [...missionCharacter.answers] : []\r\n  })\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    console.log('question:', question)\r\n    let aQ = _.cloneDeep(missionCharacter.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...state.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setState({\r\n      ...state,\r\n      answers: [\r\n        ...state.answers.slice(0, index),\r\n        changedIndex,\r\n        ...state.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n  const getAnswer = (qId) => {\r\n    let a = state.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    console.log('a:', a)\r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div>Answers:</div>\r\n            {questions.map( (question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>{question.question}</div>\r\n                <input type='text' value={getAnswer(question.id)}\r\n                  onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n              </div>\r\n            )}  \r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAnswer} onChange={e => setState({...state, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAnswer} onChange={e => setState({...state, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={missionCharacter.tip} onChange={e => setState({...state, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação certa:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAcusationAnswer} onChange={e => setState({...state, rightAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação errada:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAcusationAnswer} onChange={e => setState({...state, wrongAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={missionCharacter.endDialog} onChange={e => setState({...state, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(state)}>Salvar</button>\r\n        <button onClick={cancel()}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditMissionCharacter","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditNewMissionCharacter = ({character, onDone, questions, cancel}) => {\r\n\r\n  const [missionCharacter, setmissionCharacter] = React.useState({...character})\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    let aQ = _.cloneDeep(missionCharacter.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...missionCharacter.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setmissionCharacter({\r\n      ...missionCharacter,\r\n      answers: [\r\n        ...missionCharacter.answers.slice(0, index),\r\n        changedIndex,\r\n        ...missionCharacter.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n\r\n  const getAnswer = (qId) => {\r\n    let a = missionCharacter.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    \r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div>Answers:</div>\r\n            {questions.map( (question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>{question.question}</div>\r\n                <input type='text' value={getAnswer(question.id)}\r\n                  onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n              </div>\r\n            )}  \r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAnswer} onChange={e => setmissionCharacter({...missionCharacter, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAnswer} onChange={e => setmissionCharacter({...missionCharacter, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={missionCharacter.tip} onChange={e => setmissionCharacter({...missionCharacter, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação certa:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAcusationAnswer} onChange={e => setmissionCharacter({...missionCharacter, rightAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação errada:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAcusationAnswer} onChange={e => setmissionCharacter({...missionCharacter, wrongAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={missionCharacter.endDialog} onChange={e => setmissionCharacter({...missionCharacter, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(missionCharacter)}>Salvar</button>\r\n        <button onClick={cancel()}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditNewMissionCharacter\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nconst missionCharacterInitialState = (character) => ({\r\n  character: character,\r\n  answers: [],\r\n  tip: '',\r\n  endDialog: '',\r\n  wrongAnswer: '',\r\n  rightAnswer: '',\r\n  wrongAcusationAnswer: '',\r\n  rightAcusationAnswer: '',\r\n  targetCharacter: false,\r\n})\r\n  \r\nexport default missionCharacterInitialState\r\n  \r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../../_actions'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nconst CreateGame1Data = ({data, characters}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onCheckChange = (id, type) => e => {\r\n\r\n    let payload = {id: id, [type]: e.target.checked}\r\n    dispatch(apiActions.game_1_mission_charactersActions.update(payload))\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      Dados do Game1:\r\n      {data && data.map((d, index) =>\r\n        <div>\r\n          <div>{characters.find(character => d.character === character.id).name}</div>\r\n          <div>\r\n            <Checkbox checked={d.showJob} onChange={onCheckChange(d.id, 'showJob')}/>\r\n            Show Job\r\n          </div>\r\n          <div>\r\n            <Checkbox checked={d.showCountry} label='ShowCountry' onChange={onCheckChange(d.id, 'showCountry')}/>\r\n            Show Country\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateGame1Data\r\n","import React from 'react'\r\n\r\nconst Game2Data = () => {\r\n  return (\r\n    <div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game2Data\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport CreateCharacter from '../CreateCharacter'\r\nimport CreateLocation from '../CreateLocation'\r\nimport Question from '../Question'\r\nimport CreateQuestion from '../CreateQuestion'\r\nimport EditMissionCharacter from './components/EditMissionCharacter'\r\nimport EditNewMissionCharacter from './components/EditNewMissionCharacter'\r\nimport missionCharacterInitialState from './missionCharacterInitialState'\r\n\r\n// import { useAlert } from 'react-alert'\r\n\r\nimport CreateGame1Data from './Game1Data'\r\nimport Game2Data from './Game2Data'\r\n\r\nimport { apiActions } from '../../_actions'\r\n\r\n//used for game 1 and 2 coincident data\r\nconst CreateMissionGame1 = (props) => {\r\n  const dispatch = useDispatch()\r\n  // const alert = useAlert()\r\n\r\n  //for edit\r\n  const game = props && props.match? props.match.params.game : null\r\n  const id = props && props.match ? props.match.params.id : null\r\n  const originalMission = useSelector( state => id && state[game].items.length > 0 ? state[game].items.filter(m => m.id === id)[0] : null )\r\n\r\n  const characters = useSelector( state => state.characters)\r\n  const locations = useSelector( state => state.locations)\r\n  const questions = useSelector( state => state.questions)\r\n\r\n  const [state, setState] = React.useState({\r\n    mission: {\r\n      name: '',\r\n      description: '',\r\n      missionCharacters: [],\r\n      locations: [],\r\n      questions:[]\r\n    },\r\n    charactersList: [],\r\n    charactersConfigList: [],\r\n    characterConfig: null,\r\n    newCharacterConfig: null,\r\n  })\r\n\r\n  //for edit\r\n  if(originalMission && !state.mission.id)\r\n    setState({...state, mission: {...originalMission}})\r\n\r\n  //refrashed route\r\n  React.useEffect(() => {\r\n    if(id && !originalMission)\r\n      dispatch(apiActions[game+\"Actions\"].getById(id))\r\n    if(characters.items.length === 0)\r\n      dispatch(apiActions.charactersActions.getAll())\r\n    if(locations.items.length === 0)\r\n      dispatch(apiActions.locationsActions.getAll())\r\n    if(questions.items.length === 0)\r\n      dispatch(apiActions.questionsActions.getAll())\r\n  }, [dispatch, id, originalMission, questions.items.length, locations.items.length, characters.items.length, game])\r\n\r\n  const [createCharacter, setCreateCharacter] = React.useState(false)\r\n  const [createLocation, setCreateLocation] = React.useState(false)\r\n  const [createQuestion, setCreateQuestion] = React.useState(false)\r\n\r\n  const createMission = () => {\r\n/*\r\n    let data = {...state.mission,\r\n      missionCharacters: state.mission.missionCharacters.map(missionCharacter => {\r\n        return missionCharacter.id\r\n      }),\r\n      missionCharactersCreate: [...state.charactersConfigList, ...state.charactersList]\r\n    }\r\n\r\n//  algo muito errado aqui\r\n\r\n//\r\n    state.charactersConfigList = []\r\n    state.charactersList = []\r\n\r\n    dispatch(apiActions.missionsActions.create(data))\r\n\r\n    data = {...state.mission}\r\n\r\n    let data = {...state.mission}\r\n    dispatch(apiActions[game+\"Actions\"].create(data))\r\n  */\r\n  }\r\n\r\n  const editMission = () => {\r\n    // state.mission.missionCharacters = [...state.mission.missionCharacters]\r\n    // state.charactersConfigList = []\r\n    // state.charactersList = []\r\n    let data = {...state.mission,\r\n      missionCharacters: state.mission.missionCharacters.map(missionCharacter => {\r\n        return missionCharacter.id\r\n      }),\r\n      missionCharactersCreate: [...state.charactersConfigList, ...state.charactersList]\r\n    }\r\n\r\n\r\n//  algo errado aqui\r\n//\r\n    state.charactersConfigList = []\r\n    state.charactersList = []\r\n\r\n    dispatch(apiActions.missionsActions.update(data))\r\n\r\n    // data = {...state.mission}\r\n    // dispatch(apiActions[game+\"Actions\"].update(data))\r\n\r\n    data = {...state.mission}\r\n    dispatch(apiActions[game+\"Actions\"].update(data))\r\n  }\r\n\r\n  const addToMission = (type, data) => () => {\r\n    setState({...state, mission: {...state.mission, [type]:[...state.mission[type], data]}})\r\n  }\r\n\r\n  const removeFromMission = (type, data) => () => {\r\n      setState({...state, mission: {...state.mission, [type]: state.mission[type].filter(d => d.id !== data.id)}})\r\n  }\r\n\r\n  const editCharacterConfig = (character) => () => {\r\n    setState({...state, characterConfig: character})\r\n  }\r\n\r\n  const createCharacterConfig = (character) => () => {\r\n    setState({...state, newCharacterConfig: character})\r\n  }\r\n\r\n  const cancelCharacterConfig = () => () => {\r\n    setState({...state, characterConfig: null, newCharacterConfig: null})\r\n  }\r\n\r\n  const addCharacterToList = (character) => () => {\r\n    setState({...state, charactersList: [...state.charactersList, missionCharacterInitialState(character)]})\r\n  }\r\n\r\n  const removeCharacterFromList = (character) => () => {\r\n    setState({...state, charactersList: state.charactersList.filter(d => d.character.id !== character.character.id)})\r\n  }\r\n\r\n  const removeCharacterFromConfigList = (character) => () => {\r\n    setState({...state, charactersConfigList: state.charactersList.filter(d => d.character.id !== character.character.id)})\r\n  }\r\n\r\n  const updateCharacterConfig = (character) => () => {\r\n    dispatch(apiActions.mission_charactersActions.update(character))\r\n    setState({...state, characterConfig: null})\r\n  }\r\n\r\n  const addCharacterConfig = (missionCharacter) => () => {\r\n    setState({...state, charactersConfigList: [...state.charactersConfigList, missionCharacter], charactersList: state.charactersList.filter(d => d.character.id !== missionCharacter.character.id), newCharacterConfig: null})\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <div style={{\r\n          display: 'flex', flexGrow: 1,\r\n          flexShrink: 1,\r\n          flexBasis: 0,\r\n          flexDirection: 'row'}}>\r\n        <div>\r\n          <div>\r\n            <div>Nome:</div>\r\n            <div>\r\n              <input type='text' value={state.mission.name} onChange={e => setState({...state, mission: {...state.mission, name: e.target.value}})} placeholder='Missão maneira'/>\r\n            </div>\r\n          </div>\r\n\r\n          <div>Texto da missão:</div>\r\n          <textarea value={state.mission.description} onChange={e => setState({...state, mission: {...state.mission, description: e.target.value}})} />\r\n          <div>\r\n            {id ?\r\n              <Button onClick={editMission}>{'Salvar Missão'}</Button>\r\n              :<Button onClick={createMission}>{'Criar Missão'}</Button>\r\n            }\r\n          </div>\r\n\r\n          <div>\r\n            <div>Personagens na missão:</div>\r\n            {state.mission.missionCharacters.map( ( missionCharacter, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('missionCharacters', missionCharacter)}><RemoveIcon /></Button>\r\n                <Button onClick={editCharacterConfig(missionCharacter)}>\r\n                  {missionCharacter.character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {state.charactersConfigList.map( ( missionCharacter, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeCharacterFromConfigList('missionCharacters', missionCharacter)}><RemoveIcon /></Button>\r\n                <Button onClick={editCharacterConfig(missionCharacter)}>\r\n                  {missionCharacter.character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {state.charactersList.map( ( character, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeCharacterFromList(character)}><RemoveIcon /></Button>\r\n                <Button onClick={createCharacterConfig(character)}>\r\n                  {character.character.name}\r\n                </Button>\r\n                {state.charactersList.indexOf(character) !== -1 ? <div >!\r\n                  <span>This character has no config!</span>\r\n                </div> : null}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Locais na missão:</div>\r\n            {state.mission.locations.map((location, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('locations', location)}><RemoveIcon /></Button>\r\n                <div>{location.name}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Questions:</div>\r\n            {state.mission.questions.map((question, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('questions', question)}><RemoveIcon /></Button>\r\n                <Question question={question}/>\r\n              </div>\r\n            )}\r\n          </div>\r\n            {game === 'game_1_missions' &&\r\n              <CreateGame1Data data={state.mission.game_1_mission_characters} characters={state.mission.characters}\r\n                onChangeCharacter={()=>{}} onJobCheckChange={()=>{}} onCountryCheckChange={()=>{}}/>\r\n            }\r\n            {game === 'game2' &&\r\n              <Game2Data />\r\n            }\r\n        </div>\r\n\r\n        <div>\r\n          <div>\r\n            <div>Personagens disponíveis</div>\r\n            {characters.items && characters.items.length > 0 && characters.items\r\n              .filter( character => !state.mission.missionCharacters.find( c => c.character.id === character.id) && !state.charactersList.find( c => c.character.id === character.id) && !state.charactersConfigList.find( c => c.character.id === character.id))\r\n              .map( (character, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addCharacterToList(character)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <Button onClick={editCharacterConfig(character)}>\r\n                  {character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateCharacter(!createCharacter)}>\r\n              {createCharacter ? \"Cancelar\" : \"Criar personagem\"}\r\n            </Button>\r\n            {createCharacter && <CreateCharacter /> }\r\n          </div>\r\n\r\n          <div>\r\n            <div>Locais disponíveis</div>\r\n            {locations.items && locations.items.length > 0 && locations.items\r\n              .filter( location => !state.mission.locations.find( l => l.id === location.id) )\r\n              .map( (location, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addToMission('locations', location)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <div>{location.name}</div>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateLocation(!createLocation)}>\r\n            {createLocation ? \"Cancelar\" : \"Criar local\"}\r\n            </Button>\r\n            {createLocation && <CreateLocation />}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Preset questions</div>\r\n            {questions.items && questions.items.length > 0 && questions.items\r\n              .filter( question => !state.mission.questions.find( c => c.id === question.id) )\r\n              .map( (question, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addToMission('questions', question)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <Question question={question}/>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateQuestion(!createQuestion)}>\r\n              {createQuestion ? \"Cancel\" : \"Create question\"}\r\n            </Button>\r\n            {createQuestion && <CreateQuestion /> }\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h5>Detalhes do personagem:</h5>\r\n          {state.characterConfig && <EditMissionCharacter missionCharacter={state.characterConfig} onDone={updateCharacterConfig} questions={state.mission.questions} cancel={cancelCharacterConfig}/>}\r\n          {state.newCharacterConfig && <EditNewMissionCharacter character={state.newCharacterConfig} onDone={addCharacterConfig} questions={state.mission.questions} cancel={cancelCharacterConfig}/>}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateMissionGame1\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditCharacter = ({character, onDone}) => {\r\n  const [state, setState] = React.useState({\r\n    name: character.name,\r\n    job: character.job ? character.job : '',\r\n    id: character.id,\r\n    answers: character.answers ? [...character.answers] : []\r\n  })\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    let aQ = _.cloneDeep(character.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...state.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setState({\r\n      ...state,\r\n      answers: [\r\n        ...state.answers.slice(0, index),\r\n        changedIndex,\r\n        ...state.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n  const getAnswer = (qId) => {\r\n    let a = state.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    \r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          Name:<input type='text' value={state.name} onChange={ e => setState({...state, name: e.target.value}) }/>\r\n        </div>\r\n        <div>\r\n          Job:<input type='text' value={state.job} onChange={ e => setState({...state, job: e.target.value}) } />\r\n        </div>\r\n        <div>\r\n          Country:<input type='text' value={state.country} onChange={ e => setState({...state, country: e.target.value}) } />\r\n        </div>\r\n        <div>{character.civilState}</div>\r\n        <div>\r\n          <div>JOGO 1 - Missões que participa:</div>\r\n          {character.game_1_missions.map((mission, mIndex) =>\r\n            <div key={mIndex}>\r\n              <div>{mIndex+1}: {mission.name}</div>\r\n              <div>\r\n                {mission.questions.map( (question, qIndex) =>\r\n                  <div key={qIndex}>\r\n                    <div>{question.question}</div>\r\n                    <input type='text' value={getAnswer(question.id)}\r\n                      onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <div>JOGO 2 - Missões que participa:</div>\r\n          {character.missions.map((mission, mIndex) =>\r\n            <div key={mIndex}>\r\n              <div>{mIndex+1}: {mission.name}</div>\r\n              <div>\r\n                {mission.questions.map( (question, qIndex) =>\r\n                  <div key={qIndex}>\r\n                    <div>{question.question}</div>\r\n                    <input type='text' value={getAnswer(question.id)}\r\n                      onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={character.wrongAnswer} onChange={e => setState({...state, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={character.rightAnswer} onChange={e => setState({...state, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={character.tip} onChange={e => setState({...state, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação:\r\n            </div>\r\n            <input type='text' value={character.acusationAnswer} onChange={e => setState({...state, acusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={character.endDialog} onChange={e => setState({...state, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(state)}>Salvar</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditCharacter\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport Character from '../Character'\r\nimport CreateCharacter from '../CreateCharacter'\r\nimport EditCharacter from '../EditCharacter'\r\n\r\nconst Characters = ({onAdd}) => {\r\n  const { charactersActions } = apiActions\r\n  const [createCharacter, setCreateCharacter] = React.useState(false)\r\n  const [edit, setEdit] = React.useState(-1)\r\n  const dispatch = useDispatch()\r\n  const characters = useSelector( state => state.characters)\r\n\r\n  React.useEffect(()=>{\r\n      dispatch(charactersActions.getAll())\r\n  }, [dispatch, charactersActions])\r\n\r\n  React.useEffect(()=>{\r\n    setEdit(-1)\r\n  }, [characters])\r\n\r\n  return (\r\n    <div>\r\n      <div>Área de personagens</div>\r\n      <button onClick={() => setCreateCharacter(!createCharacter)}>{createCharacter? 'Cancelar' : 'Criar personagem'} </button>\r\n      { createCharacter && <CreateCharacter /> }\r\n      <div>\r\n        <div>All Characters:</div>\r\n        { characters.loading && <div>Loading...</div> }\r\n        <div>\r\n          <span>Nome</span> <span>Estado civil</span> <span>Trabalho</span>\r\n        </div>\r\n        <div>\r\n          {characters.items.map((character, index) =>\r\n            <React.Fragment key={index}>\r\n              {edit === index ?\r\n                <div>\r\n                  <EditCharacter character={character} onDone={ state => () => dispatch(charactersActions.update(state))}/>\r\n                  <Button onClick={ () => setEdit(-1) }><CancelIcon /></Button>\r\n                </div>\r\n                : <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                    <Character character={character}/>\r\n                    <Button onClick={ () => setEdit(index) }><EditIcon /></Button>\r\n                  </div>\r\n              }\r\n              <br/>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Characters\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Question from '../Question'\r\nimport CreateQuestion from '../CreateQuestion'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst Questions = ({onAdd}) => {\r\n  const { questionsActions } = apiActions\r\n  const [createQuestion, setCreateQuestion] = React.useState(false)\r\n  const dispatch = useDispatch()\r\n  const questions = useSelector( state => state.questions)\r\n\r\n  React.useEffect(()=>{\r\n    if(questions.items.length === 0)\r\n      dispatch(questionsActions.getAll())\r\n  }, [dispatch, questionsActions, questions.items.length])\r\n\r\n  const editQuestion = (question) => () => {\r\n\r\n  }\r\n\r\n  const deleteQuestion = (question) => () => dispatch(questionsActions.delete(question.id))\r\n\r\n  return (\r\n    <div>\r\n      <div>Questions</div>\r\n      <button onClick={() => setCreateQuestion(!createQuestion)}>{createQuestion? 'Cancelar' : 'Criar pergunta'} </button>\r\n      { createQuestion && <CreateQuestion /> }\r\n      <div>\r\n        <div>All questions:</div>\r\n        <div>\r\n          <span>Question</span> <span>Correct</span>\r\n        </div>\r\n        <div>\r\n          {questions.items.map((question, index) =>\r\n            <div key={index}>\r\n              <Question question={question}/>\r\n              <Button onClick={editQuestion(question)}><EditIcon/></Button>\r\n              <Button onClick={deleteQuestion(question)}><DeleteIcon/></Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Questions\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Questionnaire from '../Questionnaire'\r\n// import CreateQuestionnaire from '../CreateQuestionnaire'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst Questionnaires = ({onAdd}) => {\r\n  const { questionnairesActions } = apiActions\r\n  const dispatch = useDispatch()\r\n  const questionnaires = useSelector( state => state.questionnaires)\r\n\r\n  React.useEffect(()=>{\r\n    if(questionnaires.items.length === 0)\r\n      dispatch(questionnairesActions.getAll())\r\n  }, [dispatch, questionnairesActions, questionnaires.items.length])\r\n\r\n  const editQuestionnaire = (questionnaire) => () => {\r\n\r\n  }\r\n\r\n  const deleteQuestionnaire = (questionnaire) => () => dispatch(questionnairesActions.delete(questionnaire.id))\r\n\r\n  return (\r\n    <div>\r\n      <div>Questionnaires</div>\r\n      {/* <button onClick={() => setCreateQuestionnaire(!createQuestionnaire)}>{createQuestionnaire? 'Cancel' : 'Create Questionnaire'} </button>\r\n      { createQuestionnaire && <CreateQuestionnaire /> } */}\r\n      <div>\r\n        <div>All questionnaires:</div>\r\n        <div>\r\n          <span>Questionnaire</span>\r\n        </div>\r\n        <div>\r\n          {questionnaires.items.map((questionnaire, index) =>\r\n            <div key={index}>\r\n              <Questionnaire questionnaire={questionnaire}/>\r\n              <Button onClick={editQuestionnaire(questionnaire)}><EditIcon/></Button>\r\n              <Button onClick={deleteQuestionnaire(questionnaire)}><DeleteIcon/></Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Questionnaires\r\n","import React from 'react'\r\nimport { apiActions } from '../../_actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst PlaySessions = () => {\r\n  const dispatch = useDispatch()\r\n  const playSessions = useSelector( state => state.play_sessions.items)\r\n  const { play_sessionsActions } = apiActions\r\n\r\n  React.useEffect(() => {\r\n    dispatch(play_sessionsActions.getAll())\r\n  }, [dispatch, play_sessionsActions])\r\n\r\n  return(\r\n    <div>\r\n      <div>PlaySessions:</div>\r\n      {playSessions.length > 0 && playSessions.map((playSession, index) =>\r\n        <div key={index}>\r\n          <div>User: {playSession.usersPermissionsUser.firstName} {playSession.usersPermissionsUser.lastName}</div>\r\n          <div>Missão: {playSession.mission.name}</div>\r\n          <div>\r\n          <div>PlayerActions:</div>\r\n          {playSession.player_actions.map((playerAction, index) =>\r\n            <div key={index}>TAG:{playerAction.data.tag}</div>\r\n          )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaySessions\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst Config = (props) => {\r\n  return(\r\n    <div id=\"config-dialog\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Config\r\n","import React from 'react'\r\nimport Config from '../Config'\r\n\r\nconst ConfigWindow = ({onConfig, onStatistics, onLeave, onClose}) => {\r\n  return(\r\n    <Config>\r\n      <div className=\"config-option\" onClick={onConfig}>\r\n        <span lang=\"pt-br\">Configurações de jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Game settings</span>\r\n      </div>\r\n      <div className=\"config-option\" onClick={onStatistics}>\r\n        <span lang=\"pt-br\">Estatísticas</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Statistics</span>\r\n      </div>\r\n      <div className=\"config-option\" onClick={onLeave}>\r\n        <span lang=\"pt-br\">Sair do jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Leave game</span>\r\n      </div>\r\n      <div id=\"config-fechar\" onClick={onClose}>×</div>\r\n    </Config>\r\n  )\r\n}\r\n\r\nexport default ConfigWindow\r\n","import React from 'react'\r\nimport Config from '../Config'\r\nimport Button from '@material-ui/core/Button'\r\nimport VolumeMute from '@material-ui/icons/VolumeMute'\r\nimport VolumeUp from '@material-ui/icons/VolumeUp'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\n\r\nconst GameConfig = (\r\n  {\r\n    onVolumeMute, onVolumeUp, volume, onVolumeChange,\r\n    fontSize, onFontSizeChange, assistMode, onAssistModeChange,\r\n    onAccessibilityLeft, onAccessibilityRight,\r\n    onBack, onClose\r\n  }) => {\r\n  return(\r\n    <Config>\r\n      <div id=\"title\">\r\n        <span lang=\"pt-br\">Configurações de jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Game settings</span>\r\n      </div>\r\n      <table id=\"game-options\">\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Volume</span>\r\n              <span lang=\"en\">Volume</span>\r\n            </td>\r\n            <td>\r\n              <Button onClick={onVolumeMute}>\r\n                <VolumeMute />\r\n              </Button>\r\n                <Slider value={volume} onChange={onVolumeChange}/>\r\n              <Button onClick={onVolumeUp}>\r\n                <VolumeUp />\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Tamanho da fonte</span>\r\n              <span lang=\"en\">Font size</span>\r\n            </td>\r\n            <td id=\"tamanho-fonte\">\r\n              <span className=\"label-pequeno\">Aa</span>\r\n              <Slider value={fontSize} onChange={onFontSizeChange}/>\r\n              <span className=\"label-grande\">Aa</span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Modo assistência</span>\r\n              <span lang=\"en\">Assist mode</span>\r\n            </td>\r\n            <td>\r\n              <Checkbox checked={assistMode} onChange={onAssistModeChange}/>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Acessibilidade</span>\r\n              <span lang=\"en\">Accessibility</span>\r\n            </td>\r\n            <td id=\"tipo-acessibilidade\">\r\n              <Button onClick={onAccessibilityLeft}> {'❮'} </Button>\r\n              <div>\r\n                <span lang=\"pt-br\">Nenhum</span>\r\n                <span lang=\"en\">None</span>\r\n              </div>\r\n              <Button onClick={onAccessibilityRight}> {'❯'} </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td id=\"voltar-cell\" colSpan=\"2\">\r\n              <Button onClick={onBack}>Voltar</Button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div id=\"config-fechar\" onClick={onClose}>×</div>\r\n    </Config>\r\n  )\r\n}\r\n\r\nexport default GameConfig\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { headerActions, musicActions } from \"../../_actions\";\r\nimport ConfigWindow from \"../../_components/ConfigWindow\";\r\nimport GameConfig from \"../../_components/GameConfig\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { settings } from \"../../img\";\r\nimport \"./index.scss\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nconst dimensions = { width: 16, height: 9}\r\nconst ALIGNMENTS = {\r\n  TOP: \"flex-start\",\r\n  LEFT: \"flex-start\",\r\n  CENTER: \"center\",\r\n  RIGHT: \"flex-end\",\r\n  BOTTOM: \"flex-end\"\r\n}\r\n\r\nconst GameContext = (props) => {\r\n  const [state, setState] = React.useState({\r\n    fontSize: 12,\r\n    assistMode: false,\r\n    accessibility: \"NONE\",\r\n    gameConfig: false,\r\n    back: false,\r\n    config: false,\r\n    debug: true,\r\n    alignment: {vertical: ALIGNMENTS.CENTER, horizontal: ALIGNMENTS.CENTER}\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const music = useSelector( state  => state.music)\r\n  let headerInfo = useSelector( state  => state.header)\r\n\r\n  let { children } = props;\r\n  children = { ...children, props: { ...props } };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n    return () => {\r\n      dispatch(headerActions.clearAll());\r\n      dispatch(headerActions.setState(headerConstants.STATES.NORMAL));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {headerInfo.state === headerConstants.STATES.HIDDEN && (\r\n        <div\r\n          id=\"floating-config-btn\"\r\n          onClick={() => setState({ ...state, config: true })}\r\n        >\r\n          <img src={settings} alt=\"config\" />\r\n        </div>\r\n      )}\r\n      {state.config && (\r\n        <ConfigWindow\r\n          onConfig={() =>\r\n            setState({ ...state, config: false, gameConfig: true })\r\n          }\r\n          onStatistics={() => {}}\r\n          onLeave={() => setState({ ...state, back: true })}\r\n          onClose={() => setState({ ...state, config: false })}\r\n        />\r\n      )}\r\n      {state.gameConfig && (\r\n        <GameConfig\r\n          volume={music.volume}\r\n          onVolumeMute={() => dispatch(musicActions.volume(0)) }\r\n          onVolumeUp={() => dispatch(musicActions.volume(100)) }\r\n          onVolumeChange={(e, newValue) => dispatch(musicActions.volume(newValue)) }\r\n          fontSize={state.fontSize}\r\n          onFontSizeChange={(e, newValue) => setState({ ...state, fontSize: newValue }) }\r\n          assistMode={state.assistMode}\r\n          onAssistModeChange={(e) => setState({ ...state, assistMode: e.target.checked }) }\r\n          onAccessibilityLeft={() => {}}\r\n          onAccessibilityRight={() => {}}\r\n          onBack={() => setState({ ...state, gameConfig: false, config: true })}\r\n          onClose={() => setState({ ...state, gameConfig: false })}\r\n        />\r\n      )}\r\n      <ReactAudioPlayer\r\n        src={music.url}\r\n        autoPlay\r\n        volume={music.volume / 100}\r\n        loop={true}\r\n      />\r\n      <div id=\"game-screen-wrapper\" style={{alignItems: state.alignment.vertical, justifyContent: state.alignment.horizontal}}>\r\n        <div id=\"game-screen\" className={state.debug && \"debug\"} style={{\"--aspectRatio\": dimensions.width / dimensions.height}}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n      {state.back && <Redirect to=\"/userspace\" />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GameContext;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Conversa from \"./_components/Conversa\";\r\nimport { headerActions } from \"./_actions\";\r\nimport { headerConstants } from \"./_constants\";\r\n\r\nconst TestPage = () => {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n    return () => {\r\n      dispatch(headerActions.setState(headerConstants.STATES.NORMAL));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const divStyle = {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  };\r\n\r\n  // -------------------------------------------\r\n  // MODIFICAR SOMENTE DAQUI PARA BAIXO\r\n  // -------------------------------------------\r\n\r\n  return (\r\n    <div style={divStyle}>\r\n      {\" \"}\r\n      {/* NÃO MODIFICAR ESSA LINHA */}\r\n      <Conversa\r\n        convOptions={[\r\n          { question: \"Pergunta 1\", answers: [\"Resposta 1.1\", \"Resposta 1.2\"] },\r\n          { question: \"Pergunta 2\", answers: [\"Resposta 2.1\"] },\r\n          { question: \"Pergunta 3\", answers: [\"Resposta 3.1\"] },\r\n          { question: \"Pergunta 4\", answers: [\"Resposta 4.1\"] },\r\n        ]}\r\n      />\r\n    </div> /* NÃO MODIFICAR ESSA LINHA */\r\n  );\r\n\r\n  // -------------------------------------------\r\n  // MODIFICAR SOMENTE ATÉ AQUI\r\n  // -------------------------------------------\r\n};\r\n\r\nexport default TestPage;\r\n","\r\nconst rootUrl = process.env.NODE_ENV === 'development'? ''\r\n              : process.env.NODE_ENV === 'production'? process.env.PUBLIC_URL\r\n              : ''\r\n\r\nexport default rootUrl\r\n","import './App.scss'\r\nimport AppHeader from './_components/AppHeader'\r\nimport Home from './pages/Home'\r\nimport Game1 from './pages/Game1'\r\nimport Game2 from './pages/Game2'\r\nimport Game3 from './pages/Game3'\r\nimport Game4 from './pages/Game4'\r\nimport Game5 from './pages/Game5'\r\nimport Game6 from './pages/Game6'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\"\r\n\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { PrivateRoute } from './_components/PrivateRoute'\r\n// import { history } from './_helpers'\r\nimport Login from './pages/Login'\r\nimport UserSpace from './pages/UserSpace'\r\nimport UsersCRUD from './pages/UsersCRUD'\r\nimport Missions from './pages/Missions'\r\nimport CreateMission from './pages/CreateMission'\r\nimport Characters from './pages/Characters'\r\nimport Questions from './pages/Questions'\r\nimport Register from './pages/Register'\r\nimport Questionnaires from './pages/Questionnaires'\r\nimport PlaySessions from './pages/PlaySessions'\r\nimport GameContext from './pages/GameContext'\r\nimport { headerConstants } from './_constants'\r\nimport TestPage from './TestPage'\r\nimport rootUrl from './rootUrl'\r\n\r\nconst App = () => {\r\n\r\n  let palette = \"palette01\"\r\n  document.getElementsByTagName('html')[0].className = palette\r\n\r\n  let gameMode = useSelector( state => state.header.state ) !== headerConstants.STATES.NORMAL;\r\n  console.log('env:', process.env.NODE_ENV)\r\n  console.log('rootUrl:', rootUrl)\r\n  return (\r\n    <div className={ \"App\" + (gameMode? \" game-mode\" : \"\")}>\r\n      <Router basename={rootUrl}>\r\n        <AppHeader props={{isLogged: useSelector(state => state.authentication.loggedIn)}} />\r\n        <Switch>\r\n          <Redirect path={'/EADLearningTool'} to={'/userspace'}/>\r\n          <Route exact path={'/'} component={Home} />\r\n          <Route exact path={'/home'} component={Home} />\r\n          <Route path={`/login`} component={Login} />\r\n          <Route path={`/register`} component={Register} />\r\n          <PrivateRoute exact path={`/game1/:id`} render={(props) => <GameContext {...props}><Game1 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game2/:id`} render={(props) => <GameContext {...props}><Game2 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game3/:id`} render={(props) => <GameContext {...props}><Game3 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game4/:id`} render={(props) => <GameContext {...props}><Game4 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game5/:id`} render={(props) => <GameContext {...props}><Game5 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game6/:id`} render={(props) => <GameContext {...props}><Game6 /></GameContext>} />\r\n          <PrivateRoute exact path={`/test`} component={TestPage} />\r\n          <PrivateRoute exact path={`/userspace`} component={UserSpace} />\r\n          <PrivateRoute exact path={`/missions`} component={Missions} />\r\n          <PrivateRoute exact path={`/questions`} component={Questions} />\r\n          <PrivateRoute exact path={`/questionnaires`} component={Questionnaires} />\r\n          <PrivateRoute exact path={`/missions/create`} component={CreateMission} />\r\n          <PrivateRoute exact path={`/missions/edit/:game/:id`} component={CreateMission} />\r\n          <PrivateRoute exact path={`/characters`} component={Characters} />\r\n          <PrivateRoute exact path={`/users`} component={UsersCRUD} />\r\n          <PrivateRoute exact path={`/playSessions`} component={PlaySessions}/>\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n/*\r\nreturn (\r\n  <div>\r\n    {/* { alert.message &&\r\n      <div className={`alert ${alert.type}`}>{alert.message}</div>\r\n    })\r\n*/\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport {positions, Provider as AlertProvider} from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\nimport { store } from './_helpers'\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.TOP_RIGHT\r\n}\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <AlertProvider template={AlertTemplate} {...options}>\r\n        <App />\r\n      </AlertProvider>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameGrid\":\"Game3_gameGrid__2IQD-\",\"listIcon\":\"Game3_listIcon__2u8aA\",\"moneyIcon\":\"Game3_moneyIcon__3OMi8\",\"cart\":\"Game3_cart__1kJId\",\"cartItems\":\"Game3_cartItems__2W4bO\",\"cartItem\":\"Game3_cartItem__32Swv\",\"cartItemImg\":\"Game3_cartItemImg__2yqdF\",\"inflate\":\"Game3_inflate__4-_1s\",\"shopList\":\"Game3_shopList__UcSQw\",\"shopListItemCheck\":\"Game3_shopListItemCheck__3J7PW\",\"shopListItemImg\":\"Game3_shopListItemImg__XlpJ3\",\"paymentMoneyImg\":\"Game3_paymentMoneyImg__3pgNl\",\"paymentMoney\":\"Game3_paymentMoney__TWq8-\",\"confirmScreen\":\"Game3_confirmScreen__2vuTe\",\"confirmBlob\":\"Game3_confirmBlob__2DmAf\",\"blobSpans\":\"Game3_blobSpans__1D9dg\",\"btns\":\"Game3_btns__2daLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-icon\":\"Recipe_list-icon__a_AXK\",\"shop-list-div\":\"Recipe_shop-list-div__3gNwZ\",\"overlay-shop-list\":\"Recipe_overlay-shop-list__1u00Y\",\"shop-list\":\"Recipe_shop-list__2WXwd\",\"shop-list-item-container\":\"Recipe_shop-list-item-container__3NokD\",\"shop-list-item\":\"Recipe_shop-list-item__2Y13T\",\"checkmark\":\"Recipe_checkmark__kc7nT\",\"shop-list-item-img\":\"Recipe_shop-list-item-img__kyjNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aisle\":\"Aisle_aisle__3gMqN\",\"shelves\":\"Aisle_shelves__UkDxP\",\"items\":\"Aisle_items__39nZ0\",\"shelfPrice\":\"Aisle_shelfPrice__zy-up\",\"products\":\"Aisle_products__20GuL\",\"tooltip\":\"Aisle_tooltip__3lINX\",\"tooltiptext\":\"Aisle_tooltiptext__2LTTO\",\"inflate\":\"Aisle_inflate__331c-\",\"btnChangeAisle\":\"Aisle_btnChangeAisle__paw27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1PAGM\",\"blink\":\"Button_blink__2RH7L\",\"inflate\":\"Button_inflate__3zdLc\",\"left\":\"Button_left__29Owi\",\"stayAsPill\":\"Button_stayAsPill__3NBom\",\"showArrow\":\"Button_showArrow__3ICQb\",\"right\":\"Button_right__rgcaJ\",\"cor1\":\"Button_cor1__2DG9N\",\"cor2\":\"Button_cor2__1ENHW\",\"cor3\":\"Button_cor3__1lJIu\",\"cor4\":\"Button_cor4__2aFBm\",\"jump\":\"Button_jump__3HGqC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tutorialBlob\":\"Tutorial_tutorialBlob__3y7Ta\",\"tutorialGrid\":\"Tutorial_tutorialGrid__gIbgh\",\"blobLeft\":\"Tutorial_blobLeft__BDtTI\",\"blobRight\":\"Tutorial_blobRight__p79xL\",\"btnTutorial\":\"Tutorial_btnTutorial__2iAz2\"};"],"sourceRoot":""}
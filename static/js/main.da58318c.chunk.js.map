{"version":3,"sources":["pages/Game3/index.module.scss","img/Game1/Celular Base.svg","img/Game1/Mão dedão.svg","img/Game1/Mão palma.svg","img/Game1/Celular Sala.svg","img/Game2/parabens_vitoria-persistente.svg","img/Game2/parabens_vitoria-primeira.svg","img/Game2/símbolo_feedback errado.svg","img/Game2/bloco.svg","img/Game2/blocoButton.svg","img/Game3/shelf.svg","img/Game3/cart.svg","img/Game3/ingredients-list.svg","img/Game3/recipe-bg-round.svg","img/Game3/ingredients-list-full.svg","img/Game3/recipe-bg.svg","img/Game3/check.svg","img/Game3/checkbox.svg","img/Game3/list-icon.svg","img/Game3/checkout.svg","img/Game3/wallet.svg","img/Game3/hourglass-full.svg","img/Game3/hourglass-empty.svg","img/Game3/chashier-table.svg","img/Game3/cashier-bg.svg","img/Game3/bigBlob.svg","img/Game3/kitchen.svg","img/Game3/ingredients-list-rotated.svg","img/Game3/Tomate_lista.svg","img/avatar1.svg","img/Game4/table.svg","img/i-home.svg","img/i-notification.svg","img/i-settings.svg","img/lampada_apagada.svg","img/lampada_acesa.svg","img/ícone_jogo1.svg","img/bg-forma-azul.svg","img/bg-forma-verde.svg","img/bg-forma-azul2.svg","img/Score Baixo_blob.svg","img/bg-forma-laranja.svg","img/placeholders/CL32_ml.png","img/apagar.svg","img/confirmar.svg","_constants/alert.constants.js","_constants/user.constants.js","_constants/header.constants.js","apiValues.js","_constants/api.constants.js","_helpers/apiConstantBuilder.js","_constants/game.constants.js","_constants/music.constants.js","_actions/alert.actions.js","_helpers/history.js","_reducers/authentication.reducer.js","_helpers/reducerBuilder.js","_reducers/api.reducers.js","_reducers/apiGame.reducer.js","_reducers/index.js","_reducers/registration.reducer.js","_reducers/users.reducer.js","_reducers/alert.reducer.js","_reducers/header.reducer.js","_reducers/music.reducer.js","_helpers/store.js","_helpers/auth-header.js","_helpers/generalFunctions.js","_services/api.services.js","_services/user.services.js","_services/apiGame.services.js","_actions/user.actions.js","_actions/header.actions.js","_actions/apiGame.actions.js","_actions/api.actions.js","_actions/music.actions.js","_components/UserHeader/index.js","_components/DefaultHeader/index.js","_components/AppHeader/index.js","pages/Home/index.js","sounds/pwu.mp3","_components/Button/index.js","_components/Blob/index.js","_components/Init/index.js","pages/Game2/components/Result/index.js","_components/RoomSelect/index.js","_components/Sala/index.js","_components/Character/index.js","pages/Game1/initialState.js","pages/Game1/initialDialog.js","pages/Game1/stub.js","_components/Dropdown/index.js","_components/FullscreenOverlay/index.js","_components/Phone/index.js","_components/Menu/index.js","_components/DialogCharacter/index.js","_components/DialogHistory/index.js","sounds/writerLetter3.flac","_components/Writer/index.js","_components/Conversa/index.js","pages/Game1/index.js","_components/Lamp/index.js","pages/Game2/initialState.js","pages/Game2/index.js","pages/Game3/initialState.js","_components/Timer/index.js","_components/Aisle/index.js","_components/DialogBox/index.js","pages/Game3/components/DialogCharacter/index.js","pages/Game3/components/ChefDialog/index.js","pages/Game3/components/IngredientList/index.js","pages/Game3/components/ListedIngredient/index.js","pages/Game3/components/Intro/index.js","_components/TimerAnounce/index.js","_components/Recipe/index.js","pages/Game3/components/Tutorial/index.js","pages/Game3/components/Payment/index.js","pages/Game3/components/ShopCart/index.js","pages/Game3/index.js","pages/Game4/initialState.js","pages/Game4/components/FeedbackPanel/index.js","pages/Game4/components/Tutorial/index.js","pages/Game4/index.js","_components/DressingCharacter/index.js","_components/Wardrobe/index.js","pages/Game5/initialState.js","pages/Game5/components/Tutorial/index.js","pages/Game5/components/Notification/index.js","pages/Game5/components/FeedbackPanel/index.js","pages/Game5/components/TutorialWardrobe/index.js","pages/Game5/index.js","pages/Game6/initialState.js","pages/Game6/stub.js","pages/Game6/components/Cellphone/index.js","pages/Game6/index.js","_components/PrivateRoute/index.js","pages/Login/index.js","pages/UserSpace/index.js","pages/Register/index.js","_components/UserInfo/index.js","pages/UsersCRUD/index.js","pages/Mission/index.js","pages/Character/index.js","pages/Question/index.js","pages/EditMission/index.js","pages/Missions/index.js","pages/CreateCharacter/index.js","pages/CreateLocation/index.js","pages/CreateQuestion/index.js","pages/CreateMission/components/EditMissionCharacter.js","pages/CreateMission/components/EditNewMissionCharacter.js","pages/CreateMission/missionCharacterInitialState.js","pages/CreateMission/Game1Data/index.js","pages/CreateMission/Game2Data/index.js","pages/CreateMission/index.js","pages/EditCharacter/index.js","pages/Characters/index.js","pages/Questions/index.js","pages/Questionnaires/index.js","pages/PlaySessions/index.js","_components/Config/index.js","_components/ConfigWindow/index.js","_components/GameConfig/index.js","pages/GameContext/index.js","TestPage.js","rootUrl.js","App.js","reportWebVitals.js","index.js","_components/Recipe/index.module.scss","_components/Aisle/index.module.scss","_components/Button/index.module.scss","pages/Game3/components/Tutorial/index.module.scss"],"names":["module","exports","alertConstants","userConstants","headerConstants","NORMAL","HIDDEN","OVERLAY","apiValues","apiConstants","map","value","UPDATE_REQUEST","apiDataType","UPDATE_SUCCESS","UPDATE_FAILURE","CREATE_REQUEST","CREATE_SUCCESS","CREATE_FAILURE","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","GETBYID_REQUEST","GETBYID_SUCCESS","GETBYID_FAILURE","FIND_REQUEST","FIND_SUCCESS","FIND_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","gameConstants","musicConstants","alertActions","success","message","type","error","clear","createBrowserHistory","user","JSON","parse","localStorage","getItem","initialState","loggedIn","loading","items","apiReducers","Object","keys","forEach","apiType","constants","toLowerCase","state","action","creating","data","updating","index","findIndex","item","id","copy","slice","deleting","filter","deleteError","rootReducer","combineReducers","authentication","loggingIn","logginFailure","registration","registering","users","userCopy","roles","alert","header","title","subtitle","newTitle","newSubtitle","newState","music","url","volume","game","loggerMiddleware","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","authHeader","jwt","numberToMoney","n","units","tens","hundreds","chunks","chunk","ints","i","word","words","string","toString","parseInt","split","length","push","reverse","parseFloat","replace","join","goRound","max","Math","abs","shuffle","array","temporaryValue","randomIndex","currentIndex","shuffledArray","floor","random","zeroFill","s","size","preventSingleWordBreak","sentence","api","axios","create","baseURL","getByIdBuilder","routeName","method","headers","then","handleResponse","findBuilder","query","createBuilder","updateBuilder","deleteBuilder","response","status","location","reload","Promise","reject","statusText","apiServices","getAll","getById","find","update","delete","userService","login","email","password","identifier","setItem","stringify","logout","register","console","log","getRoles","removeItem","apiGameServices","params","userActions","dispatch","failure","request","resolve","messages","headerActions","requester","service","route","payload","gameActions","info","getByIdConstructor","findData","findConstructor","createData","createConstructor","updateData","updateConstructor","deleteData","deleteConstructor","getAllConstructor","apiActions","musicActions","v","UserHeader","pageInfo","headerInfo","useSelector","React","useState","view","setState","useDispatch","useAlert","className","onClick","show","src","home","alt","notifications","settings","avatar","style","position","backgroundColor","top","margin","width","height","DefaultHeader","AppHeader","props","isLogged","Home","to","BUTTON_DIRECTIONS","freeze","LEFT","CENTER","RIGHT","COLOR_SCHEMES","COR_1","COR_2","COR_3","COR_4","COR_5","COR_6","ButtonConfigs","Button","children","blink","direction","colorScheme","stayAsPill","showArrow","sfx","Audio","sound","styles","btn","onPointerEnter","play","Iniciar","label","Voltar","PularTutorial","Blob","duration","fill","stroke","strokeWidth","animation","xmlns","preserveAspectRatio","viewBox","data-name","d","dur","repeatCount","attributeName","values","Init","icon","name","description","nameTranslate","descriptionTranslate","onStart","onBack","ready","CircularProgress","pointerEvents","left","zIndex","Result","gameEndState","str","RoomSelect","buttonList","onChange","showInBtnFormat","useEffect","lang","num","Sala","roomData","img","setCurrentChar","background","Character","zDepth","character","dragPosition","showNameOnHover","characterAssets","asset","bodyPart","image","initialValue","back","scene","endGame","currentLocationIndex","locations","jobs","countries","names","contactsTemplate","contactsAtSession","dialogs","questionsAsked","result","totalFields","mainError","feedback","dialogHistory","answers","preSpeech","currentChar","characterFeeling","showContacts","maxQuestions","shouldMinimize","shouldCloseDialog","wrongContacts","tracking","question","stub","backgroundAssets","characters","answer","Dropdown","defaultText","optionList","disabled","option","FullscreenOverlay","showCloseBtn","shouldExit","onClickClose","onReadyToExit","bgRGBA","closeRGB","closeHoverRGB","Error","onAnimationEnd","event","target","currentTarget","r","g","b","a","Phone","modifyContact","contacts","onFinish","onAddContact","onMinimize","maximized","_shouldMinimize","smallPhone","palma","bigPhone","dedao","contact","key","showName","e","showJob","job","showCountry","country","_contatoTemplate","Menu","onButtonClick","color","fontSize","button","hasOwnProperty","active","DialogCharacter","feeling","characterImg","DialogHistory","dialog","speaker","text","JSXindexer","jsx","substring","used","Writer","characterTime","onWritten","afterWrittenTime","timeoutID","setTimeout","audio","clearTimeout","parser","mkd_parser","Conversa","showDialogHistory","onClearDialogHistory","callAfterWritterForEveryMsg","msPerCharacter","waitAfterWritten","prevDialogHistory","charPreSpeech","convOptions","charFeeling","afterWriter","onExited","onConvoChoiceMade","convoChoosen","querFechar","currentAnswer","flexGrow","updateState","Game1","play_sessionsActions","match","missions","mission","missionData","userId","currentPlaySession","play_sessions","language","backgroundAudio","trackPlayerInput","getClickedObject","actions","tag","nodeName","class","innerHTML","includes","clickTime","Date","document","addEventListener","removeEventListener","Set","missionCharacters","reduce","acc","missionCharacter","flat","sort","hasEmptyField","onStartGame","convOption","updatedState","close","shouldCloseConvo","onMenuButtonClick","indexOf","c","closeDialog","restart","hasPlayed","onPhoneFinish","missionContact","contactAtSession","gabarito","contactTemplate","changeRoomPopUp","onGoNextRoom","metrics","metric","metricTranslate","translate","count","t","score","toFixed","obj","feedbacks","minScore","maxScore","won","initIcon","refreshDialog","initialDialog","nextRoomTextWrong","nextRoomTextWrongTranslate","translation","nextRoomTextRight","nextRoomTextRightTranslate","min","topAsset","textTranslate","href","backgroundImage","blobLaranja","blobLowScore","mobileBackground","tries","Lamp","lamp_apagada","lamp_acesa","currentRoom","isOnDialog","found","tips","acusation","closeAcusation","validQuestions","tutorialStep","seeTutorial","checkedPlayed","tipsCount","dialogStep","totalDialogSteps","questionsByStep","showConvo","questions","targetName","correct","ncorrect","correctMinimum","startedTimestamp","now","elapsedTime","spokenCharacters","Game2","resultsCount","dialogInitialState","availableCharacters","tutorialRoom","tutorial","totalWeight","crowdestRoomPop","emptiestRoomPop","maxWeight","weights","weight","rand","locationIndex","availableAnswers","selectedQuestions","source","splice","temp","amountChars","j","exchangeWith","aux","tip","endTutorial","mc","wrongEndAnswer","refresh","endDialog","rightEndAnswer","tchaus","rIdx","closeAfterWritter","onRefreshDialog","tutorialCharacter","tutorialScreen","showTips","marginLeft","bloco","blocoButton","iconVitoriaPrim","iconVitoriaPers","blobAzul","blobVerde","iconDerrota","iconDicas","spokenCharactersCount","validQuestionsCount","cart","recipe","ingredientsList","aisles","currentAisle","checkout","onPayment","payment","win","change","runTimer","remainingTime","initTime","moneySelection","Timer","seconds","onEnd","onStop","run","timeout","sentRemaning","previousRef","useRef","current","Aisle","products","addProduct","toPreviousAisle","toNextAisle","aisle","btnChangeAisle","shelves","shelf","product","Array","element","tooltip","shelfImage","tooltiptext","shelfPrice","DialogBox","alternative","borderRadius","padding","marginBottom","boxShadow","transition","overflow","bottom","ChefDialog","hideDialog","onContinue","chef","writerDone","chefStyles","Fragment","paddingLeft","borderColor","right","fontWeight","IngredientList","ListedIngredient","ingredient","richText","order","marked","parseInline","Intro","recipeName","recipeNameTranslate","goToTutorial","screen","instructions","en","ptbr","kitchen","opacity","recipeBgRound","flex","display","TimerAnounce","onReady","backgroundRepeat","backgroundPosition","backgroundSize","paddingTop","paddinBottom","flexDirection","alignItems","hourglassFull","marginTop","center","Recipe","hasImage","showCheck","iconShouldShow","onMouseEnter","onMouseLeave","ingredientsListBg","listCheckbox","listCheck","listIcon","Tutorial","shoppingCart","removeProduct","goToMarket","step","tutorialLine","shopList","removeProductNextLine","shopListNextLine","tutorialText","line","preferred","blobPosition","tutorialStyles","blobRight","blobLeft","tutorialGrid","tutorialBlob","htmlparse","btnTutorial","gameStyles","cartItems","cartItem","cartItemImg","moneyIcon","Payment","onConfirm","moneyList","addToPayment","money","moneyObj","paymentUpdate","removeFromPayment","m","gridTemplateRows","gridTemplateColumns","gridRowGap","textAlign","gridColumnStart","wallet","ShopCart","ingredientList","onItemClick","cartImg","endGameLines","Game3","timesPlayed","undefined","recipes","resumeRecipe","ingredients","measure","price","unityValue","quantity","shelfCount","separation","arr","len","splitArrayIntoChunksOfLen","cartUpdate","checkShoppingList","cartIngredient","moveToCheckout","haveAllValue","haveAll","checkoutConfirm","cashierLines","getWrongItemsInCart","cashierContinue","rightQuantity","userQuantity","timeUp","wrongIngredients","secondsTaken","rightPayment","remaining","gameGrid","confirmScreen","confirmBlob","blobSpans","btns","bigBlob","cashierBg","chefFeeling","cashierTable","doPayment","justifyContent","hourglassEmpty","fontFamily","fontStyle","process","showRecipe","shuffledIngredients","tablewares","recipeContinue","showIngredients","selectedIngredient","tableIngredients","sortNameIngredient","shuffledName","userLetterOrder","tablewareImagePick","shuffledTablewares","shuffledTablewaresNames","tablewareImageSelected","tableTablewares","wrongIngredientSelected","wrongIngredientNameOrder","wrongTablewarePairSelected","wrongTablewareSelected","tutorialIngredientSelectionNotification","tutorialIngredientNameSelectionNotification","wrongIngredientNotification","wrongIngredientNameNotification","wrongCombinationNotification","feedbackMessages","blobToShow","showBlob","FeedbackPanel","leave","showBtns","setShowBtns","messageTranslate","onClickToEnd","Game4","done","shuffleName","toUpperCase","nameShuffled","tableware","checkRightIngredient","currentIngredient","rightIngredient","userSelected","letter","selected","checkIngredientName","updateIngredientsList","updateShuffledIngredients","doneCooking","writeOrderName","userOrderInput","clearIngredientName","addLetter","updateShuffedName","moveToServing","choosen","tutorialTablewareSelectionNotification","saveResult","tomato","transform","endConfirmation","wrongCombiantionNotification","silverCloche","tablewarePicked","amountChoosen","wasThisPicked","canBePicked","shouldDim","classes","selectedTableware","imageSelected","nameSelected","DressingCharacter","clothes","onRemoveClick","clothing","Wardrobe","wardrobe","onClothesClick","rowGap","cursor","picked","chooseCharacterScreen","choosenCharacter","showInvitation","proceedToDressingConfirmation","dressingContext","dressingTabIndex","rightTags","invitation","Tronco","Pernas","Pés","Acessórios","readyAlert","tutorialBlobsText","inviteQuestions","showInviteAnswer","showInviteQuestions","inviteAnswer","chooseCharacterScreenNotification","showClothingSpaceTakenErrorNotification","blobMessage","Notification","continueButtonLabel","onClickToContinue","backButtonLabel","onClickToBack","TutorialWardrobe","Game5","wardrobeBody","clothingReduce","cover","category","tags","time","weather","invites","month","asked","season","addClothesToBody","removeClothesFromBody","checkFullOutfit","hasInteiroCover","clothesCovers","getWrongClothes","wrongClothes","flexWrap","border","showRemove","clothesCount","sawInvite","invite","sawInviteAgain","wrongClothesCount","outfit","clothesTypes","cellPhoneStart","showCellphone","namingClothesContext","selectedClothesName","selectedColor","day","where","when","Cellphone","Game6","clotheCount","lastConfirmation","PrivateRoute","Component","component","render","rest","pathname","from","useStyles","makeStyles","theme","root","palette","grey","paper","spacing","secondary","main","form","submit","Login","inputs","setInputs","submitted","setSubmitted","handleChange","Grid","container","CssBaseline","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","onSubmit","preventDefault","catch","noValidate","TextField","required","fullWidth","autoComplete","autoFocus","justify","UserSpace","username","gameType","Register","languagesActions","firstName","lastName","languages","redirect","setRedirect","blocked","setBlocked","Container","select","MenuItem","UserInfo","provider","checked","confirmed","UsersCRUD","Mission","getAnswer","qId","borderStyle","characterAsset","civilState","game_1_missions","qIndex","wrongAnswer","rightAnswer","acusationAnswer","Question","EditMission","onDone","charList","setCharList","locationList","setLocationList","questionList","setQuestionList","addToMission","removeFromMission","addLocationToMission","removeLocationFromMission","l","addQuestionToMission","removeQuestionFromMission","Missions","missionsActions","game_1_missionsActions","game1missions","createMission","setCreateMission","edit","setEdit","CreateCharacter","charactersActions","setName","setJob","setCivilState","civilStates","estadosCivis","cs","Radio","CreateLocation","locationsActions","placeholder","CreateQuestion","questionsActions","group","maxWidth","aria-describedby","FormLabel","RadioGroup","aria-label","FormControlLabel","control","EditMissionCharacter","cancel","editAnswer","aQ","_","cloneDeep","changedIndex","rightAcusationAnswer","wrongAcusationAnswer","EditNewMissionCharacter","setmissionCharacter","missionCharacterInitialState","targetCharacter","CreateGame1Data","onCheckChange","game_1_mission_charactersActions","Checkbox","Game2Data","CreateMissionGame1","originalMission","charactersList","charactersConfigList","characterConfig","newCharacterConfig","createCharacter","setCreateCharacter","createLocation","setCreateLocation","createQuestion","setCreateQuestion","editCharacterConfig","createCharacterConfig","cancelCharacterConfig","addCharacterToList","removeCharacterFromList","flexShrink","flexBasis","missionCharactersCreate","game_1_mission_characters","onChangeCharacter","onJobCheckChange","onCountryCheckChange","mission_charactersActions","EditCharacter","mIndex","Characters","onAdd","Questions","deleteQuestion","Questionnaires","questionnairesActions","questionnaires","deleteQuestionnaire","questionnaire","PlaySessions","playSessions","playSession","usersPermissionsUser","player_actions","playerAction","Config","ConfigWindow","onConfig","onStatistics","onLeave","onClose","GameConfig","onVolumeMute","onVolumeUp","onVolumeChange","onFontSizeChange","assistMode","onAssistModeChange","onAccessibilityLeft","onAccessibilityRight","Slider","colSpan","dimensions","ALIGNMENTS","GameContext","accessibility","gameConfig","config","debug","alignment","vertical","horizontal","newValue","autoPlay","loop","TestPage","rootUrl","App","getElementsByTagName","gameMode","basename","path","exact","CreateMission","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","options","positions","TOP_RIGHT","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.da58318c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameGrid\":\"Game3_gameGrid__3KBBL\",\"listIcon\":\"Game3_listIcon__3b3D1\",\"moneyIcon\":\"Game3_moneyIcon__2jXnN\",\"cart\":\"Game3_cart__3fKop\",\"cartItems\":\"Game3_cartItems__2X4oc\",\"cartItem\":\"Game3_cartItem__3uuQx\",\"cartItemImg\":\"Game3_cartItemImg__1BC8C\",\"inflate\":\"Game3_inflate__1tFg0\",\"shopList\":\"Game3_shopList__3wZTB\",\"shopListItemCheck\":\"Game3_shopListItemCheck__Nlhdz\",\"shopListItemImg\":\"Game3_shopListItemImg__1KppB\",\"paymentMoneyImg\":\"Game3_paymentMoneyImg__2GOOP\",\"paymentMoney\":\"Game3_paymentMoney__3CpPS\",\"confirmScreen\":\"Game3_confirmScreen__Kno9F\",\"confirmBlob\":\"Game3_confirmBlob__dfumH\",\"blobSpans\":\"Game3_blobSpans__3VTiG\",\"btns\":\"Game3_btns__1qjNe\"};","export default __webpack_public_path__ + \"static/media/Celular Base.794704d0.svg\";","export default __webpack_public_path__ + \"static/media/Mão dedão.60615287.svg\";","export default __webpack_public_path__ + \"static/media/Mão palma.ff873eea.svg\";","export default __webpack_public_path__ + \"static/media/Celular Sala.f026f530.svg\";","export default __webpack_public_path__ + \"static/media/parabens_vitoria-persistente.62184df1.svg\";","export default __webpack_public_path__ + \"static/media/parabens_vitoria-primeira.a06b772e.svg\";","export default __webpack_public_path__ + \"static/media/símbolo_feedback errado.7ae11eab.svg\";","export default __webpack_public_path__ + \"static/media/bloco.18b55b9f.svg\";","export default __webpack_public_path__ + \"static/media/blocoButton.99d070aa.svg\";","export default __webpack_public_path__ + \"static/media/shelf.bedc3c7c.svg\";","export default __webpack_public_path__ + \"static/media/cart.e38072ee.svg\";","export default __webpack_public_path__ + \"static/media/ingredients-list.fe3fd54b.svg\";","export default __webpack_public_path__ + \"static/media/recipe-bg-round.c7e0a423.svg\";","export default __webpack_public_path__ + \"static/media/ingredients-list-full.c74a264e.svg\";","export default __webpack_public_path__ + \"static/media/recipe-bg.6f1d88ac.svg\";","export default __webpack_public_path__ + \"static/media/check.faea4e4c.svg\";","export default __webpack_public_path__ + \"static/media/checkbox.587fe984.svg\";","export default __webpack_public_path__ + \"static/media/list-icon.022d0ebd.svg\";","export default __webpack_public_path__ + \"static/media/checkout.e736737a.svg\";","export default __webpack_public_path__ + \"static/media/wallet.74eef3a3.svg\";","export default __webpack_public_path__ + \"static/media/hourglass-full.3946bb9c.svg\";","export default __webpack_public_path__ + \"static/media/hourglass-empty.f2a68e53.svg\";","export default __webpack_public_path__ + \"static/media/chashier-table.aab5bb14.svg\";","export default __webpack_public_path__ + \"static/media/cashier-bg.2fd3ef7f.svg\";","export default __webpack_public_path__ + \"static/media/bigBlob.a77c2953.svg\";","export default __webpack_public_path__ + \"static/media/kitchen.8fd918a2.svg\";","export default __webpack_public_path__ + \"static/media/ingredients-list-rotated.2096f259.svg\";","export default __webpack_public_path__ + \"static/media/Tomate_lista.d06e7242.svg\";","export default __webpack_public_path__ + \"static/media/avatar1.48f082ac.svg\";","export default __webpack_public_path__ + \"static/media/table.229eef98.svg\";","export default __webpack_public_path__ + \"static/media/i-home.949bb3de.svg\";","export default __webpack_public_path__ + \"static/media/i-notification.995f04ef.svg\";","export default __webpack_public_path__ + \"static/media/i-settings.1d1409d0.svg\";","export default __webpack_public_path__ + \"static/media/lampada_apagada.3f2311d7.svg\";","export default __webpack_public_path__ + \"static/media/lampada_acesa.aeef7b84.svg\";","export default __webpack_public_path__ + \"static/media/ícone_jogo1.244e8c29.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-azul.185d92a7.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-verde.60dfa7ed.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-azul2.c589078f.svg\";","export default __webpack_public_path__ + \"static/media/Score Baixo_blob.f42aa286.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-laranja.01e2bb93.svg\";","export default __webpack_public_path__ + \"static/media/CL32_ml.e7d2349f.png\";","export default __webpack_public_path__ + \"static/media/apagar.476394f4.svg\";","export default __webpack_public_path__ + \"static/media/confirmar.76c6e030.svg\";","export const alertConstants = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    CLEAR: 'ALERT_CLEAR'\r\n}","export const userConstants = {\r\n    REGISTER_REQUEST: 'USER_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USER_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USER_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USER_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USER_LOGIN_FAILURE',\r\n\r\n    UPDATE_REQUEST: 'USER_UPDATE_REQUEST',\r\n    UPDATE_SUCCESS: 'USER_UPDATE_SUCCESS',\r\n    UPDATE_FAILURE: 'USER_UPDATE_FAILURE',\r\n\r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USER_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USER_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USER_GETALL_FAILURE',\r\n\r\n    GETBYID_REQUEST: 'USER_GETBYID_REQUEST',\r\n    GETBYID_SUCCESS: 'USER_GETBYID_SUCCESS',\r\n    GETBYID_FAILURE: 'USER_GETBYID_FAILURE',\r\n\r\n    FIND_REQUEST: 'USER_FIND_REQUEST',\r\n    FIND_SUCCESS: 'USER_FIND_SUCCESS',\r\n    FIND_FAILURE: 'USER_FIND_FAILURE',\r\n    \r\n    DELETE_REQUEST: 'USER_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USER_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USER_DELETE_FAILURE',\r\n\r\n    GETROLES_REQUEST: 'USER_GETROLES_REQUEST',\r\n    GETROLES_SUCCESS: 'USER_GETROLES_SUCCESS',\r\n    GETROLES_FAILURE: 'USER_GETROLES_FAILURE',\r\n}","export const headerConstants = {\r\n\tSET_TITLE:\t\t'SET_HEADER_TITLE',\r\n\tSET_SUBTITLE:\t'SET_HEADER_SUBTITLE',\r\n\tSET_ALL:\t\t'SET_HEADER_ALL',\r\n\r\n\tCLEAR_TITLE:\t'CLEAR_HEADER_TITLE',\r\n\tCLEAR_SUBTITLE:\t'CLEAR_HEADER_SUBTITLE',\r\n\tCLEAR_ALL:\t\t'CLEAR_HEADER_ALL',\r\n\r\n\tSET_STATE:\t\t'SET_HEADER_STATE',\r\n\tSTATES:\t\t\t{\r\n\t\tNORMAL:\t\t'NORMAL',\r\n\t\tHIDDEN:\t\t'HIDDEN',\r\n\t\tOVERLAY:\t'OVERLAY'\r\n\t},\r\n}\r\n","const apiValues = [\r\n  'GAMES_TYPES', 'MISSIONS', 'ASSETS',\r\n  'CHARACTERS', 'CHARACTER_ASSETS', \r\n  'LOCATIONS', 'QUESTIONS', 'LANGUAGES', 'PLAY_SESSIONS'\r\n]\r\n\r\nexport default apiValues\r\n","import { apiConstantBuilder } from '../_helpers/apiConstantBuilder'\r\nimport apiValues from '../apiValues'\r\n\r\nlet apiConstants = {}\r\n\r\napiValues.map( value => apiConstants[value] = apiConstantBuilder(value) )\r\n\r\nexport { apiConstants }\r\n","export const apiConstantBuilder = apiDataType => {\r\n  return {\r\n    UPDATE_REQUEST: `${apiDataType}_UPDATE_REQUEST`,\r\n    UPDATE_SUCCESS: `${apiDataType}_UPDATE_SUCCESS`,\r\n    UPDATE_FAILURE: `${apiDataType}_UPDATE_FAILURE`,\r\n\r\n    CREATE_REQUEST: `${apiDataType}_CREATE_REQUEST`,\r\n    CREATE_SUCCESS: `${apiDataType}_CREATE_SUCCESS`,\r\n    CREATE_FAILURE: `${apiDataType}_CREATE_FAILURE`,\r\n\r\n    GETALL_REQUEST: `${apiDataType}_GETALL_REQUEST`,\r\n    GETALL_SUCCESS: `${apiDataType}_GETALL_SUCCESS`,\r\n    GETALL_FAILURE: `${apiDataType}_GETALL_FAILURE`,\r\n\r\n    GETBYID_REQUEST: `${apiDataType}_GETBYID_REQUEST`,\r\n    GETBYID_SUCCESS: `${apiDataType}_GETBYID_SUCCESS`,\r\n    GETBYID_FAILURE: `${apiDataType}_GETBYID_FAILURE`,\r\n\r\n    FIND_REQUEST: `${apiDataType}_REQUES `,\r\n    FIND_SUCCESS: `${apiDataType}_SUCCES `,\r\n    FIND_FAILURE: `${apiDataType}_FAILUR `,\r\n\r\n    DELETE_REQUEST: `${apiDataType}_DELETE_REQUEST`,\r\n    DELETE_SUCCESS: `${apiDataType}_DELETE_SUCCESS`,\r\n    DELETE_FAILURE: `${apiDataType}_DELETE_FAILURE`,\r\n  }\r\n}\r\n","export const gameConstants =  {\r\n  UPDATE_REQUEST: 'GAME_UPDATE_REQUEST',\r\n  UPDATE_SUCCESS: 'GAME_UPDATE_SUCCESS',\r\n  UPDATE_FAILURE: 'GAME_UPDATE_FAILURE',\r\n\r\n  CREATE_REQUEST: 'GAME_CREATE_REQUEST',\r\n  CREATE_SUCCESS: 'GAME_CREATE_SUCCESS',\r\n  CREATE_FAILURE: 'GAME_CREATE_FAILURE',\r\n\r\n  GETALL_REQUEST: 'GAME_GETALL_REQUEST',\r\n  GETALL_SUCCESS: 'GAME_GETALL_SUCCESS',\r\n  GETALL_FAILURE: 'GAME_GETALL_FAILURE',\r\n\r\n  GETBYID_REQUEST: 'GAME_GETBYID_REQUEST',\r\n  GETBYID_SUCCESS: 'GAME_GETBYID_SUCCESS',\r\n  GETBYID_FAILURE: 'GAME_GETBYID_FAILURE',\r\n\r\n  FIND_REQUEST: 'GAME_REQUEST',\r\n  FIND_SUCCESS: 'GAME_SUCCESS',\r\n  FIND_FAILURE: 'GAME_FAILURE',\r\n\r\n  DELETE_REQUEST: 'GAME_DELETE_REQUEST',\r\n  DELETE_SUCCESS: 'GAME_DELETE_SUCCESS',\r\n  DELETE_FAILURE: 'GAME_DELETE_FAILURE',\r\n}","export const musicConstants = {\r\n\tSET:\t'SET',\r\n\tVOLUME: 'VOLUME'\r\n}\r\n","import { alertConstants } from '../_constants'\r\n\r\nexport const alertActions = {\r\n    success,\r\n    error,\r\n    clear\r\n}\r\n\r\nfunction success(message) {\r\n    return {\r\n        type: alertConstants.SUCCESS, \r\n        message\r\n    }\r\n}\r\n\r\nfunction error(message) {\r\n    return {\r\n        type: alertConstants.ERROR,\r\n        message\r\n    }\r\n}\r\n\r\nfunction clear() {\r\n    return {\r\n        type: alertConstants.CLEAR\r\n    }\r\n}","import { createBrowserHistory } from 'history'\r\n\r\nexport const history = createBrowserHistory()","import { userConstants } from '../_constants'\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'))\r\nconst initialState = user ? { loggedIn: true, user } : {}\r\n\r\nexport function authentication (state = initialState, action){\r\n    switch (action.type) {\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {\r\n                loggingIn: true,\r\n                user: action.user\r\n            }\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            }\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {\r\n                logginFailure: true\r\n            }\r\n        case userConstants.LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {\r\n  loading: false,\r\n  items: []\r\n}\r\n\r\nexport const reducerBuilder = constants => (state = initialState, action) =>\r\n{\r\n  switch (action.type) {\r\n      case constants.CREATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            creating: true\r\n          }\r\n      case constants.CREATE_SUCCESS:\r\n          return {...state,\r\n            creating: false,\r\n            items: [...state.items, action.data]\r\n          }\r\n      case constants.CREATE_FAILURE:\r\n          return {\r\n            error: action.error\r\n          }\r\n\r\n      case constants.UPDATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            updating: true\r\n          }\r\n      case constants.UPDATE_SUCCESS:\r\n          let index = state.items.findIndex( item => item.id === action.data.id )\r\n          let copy = [...state.items.slice(0, index), action.data, ...state.items.slice(index + 1)]\r\n          return {...state, updating: false,\r\n            items: copy\r\n          }\r\n      case constants.UPDATE_FAILURE:\r\n          return {...state, updating: false}\r\n\r\n      case constants.GETALL_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case constants.GETALL_SUCCESS:\r\n          return {...state,\r\n              loading: false,\r\n              items: action.data\r\n          };\r\n      case constants.GETALL_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n      case constants.GETBYID_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case constants.GETBYID_SUCCESS:\r\n          return {...state,\r\n              items: [...state.items, action.data],\r\n              loading: false\r\n          };\r\n      case constants.GETBYID_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n        case constants.FIND_REQUEST:\r\n            return {...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case constants.FIND_SUCCESS:\r\n            return {...state,\r\n                items: action.data,\r\n                loading: false\r\n            };\r\n        case constants.FIND_FAILURE:\r\n            return {...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n      case constants.DELETE_REQUEST:\r\n          // add 'deleting:true' property to character being deleted\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item =>\r\n                  item.id === action.id\r\n                      ? { ...item, deleting: true }\r\n                      : item\r\n              )\r\n          };\r\n      case constants.DELETE_SUCCESS:\r\n          // remove deleted character from state\r\n          return {...state,\r\n              items: state.items.filter(item => item.id !== action.id)\r\n          }\r\n      case constants.DELETE_FAILURE:\r\n          // remove 'deleting:true' property and add 'deleteError:[error]' property to character\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item => {\r\n                  if (item.id === action.id) {\r\n                      // make copy of character without 'deleting:true' property\r\n                      const { deleting, ...copy } = item;\r\n                      // return copy of character with 'deleteError:[error]' property\r\n                      return { ...copy, deleteError: action.error };\r\n                  }\r\n                  return item;\r\n              })\r\n          };\r\n      default:\r\n          return state\r\n  }\r\n}\r\n","import { reducerBuilder } from '../_helpers/reducerBuilder'\r\nimport { apiConstants } from '../_constants'\r\n\r\nconst apiReducers = { }\r\nObject.keys(apiConstants).forEach(apiType => {\r\n  apiReducers[apiType.toLowerCase()] = reducerBuilder(apiConstants[apiType])\r\n})\r\n\r\n\r\nexport default apiReducers\r\n","import { gameConstants } from '../_constants'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  items: []\r\n}\r\n\r\nexport function game (state = initialState, action) {\r\n  switch (action.type) {\r\n      case gameConstants.CREATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            creating: true\r\n          }\r\n      case gameConstants.CREATE_SUCCESS:\r\n          return {...state,\r\n            creating: false,\r\n            items: {...state.items, ...action.data }\r\n          }\r\n      case gameConstants.CREATE_FAILURE:\r\n          return {\r\n            error: action.error\r\n          }\r\n\r\n      case gameConstants.UPDATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            updating: true\r\n          }\r\n      case gameConstants.UPDATE_SUCCESS:\r\n          let index = state.items.findIndex( item => item.id === action.data.id )\r\n          let copy = [...state.items.slice(0, index), action.data, ...state.items.slice(index + 1)]\r\n          return {...state, updating: false,\r\n            items: copy\r\n          }\r\n      case gameConstants.UPDATE_FAILURE:\r\n          return {...state, updating: false}\r\n\r\n      case gameConstants.GETALL_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case gameConstants.GETALL_SUCCESS:\r\n          return {...state,\r\n              loading: false,\r\n              items: {...state.items, ...action.data }\r\n          };\r\n      case gameConstants.GETALL_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n      case gameConstants.GETBYID_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case gameConstants.GETBYID_SUCCESS:\r\n          return {...state,\r\n              items: {...state.items, ...action.data },\r\n              loading: false\r\n          };\r\n      case gameConstants.GETBYID_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n        case gameConstants.FIND_REQUEST:\r\n            return {...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case gameConstants.FIND_SUCCESS:\r\n            return {...state,\r\n                items:{...state.items, ...action.data },\r\n                loading: false\r\n            };\r\n        case gameConstants.FIND_FAILURE:\r\n            return {...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n      case gameConstants.DELETE_REQUEST:\r\n          // add 'deleting:true' property to character being deleted\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item =>\r\n                  item.id === action.id\r\n                      ? { ...item, deleting: true }\r\n                      : item\r\n              )\r\n          };\r\n      case gameConstants.DELETE_SUCCESS:\r\n          // remove deleted character from state\r\n          return {...state,\r\n              items: state.items.filter(item => item.id !== action.id)\r\n          }\r\n      case gameConstants.DELETE_FAILURE:\r\n          // remove 'deleting:true' property and add 'deleteError:[error]' property to character\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item => {\r\n                  if (item.id === action.id) {\r\n                      // make copy of character without 'deleting:true' property\r\n                      const { deleting, ...copy } = item;\r\n                      // return copy of character with 'deleteError:[error]' property\r\n                      return { ...copy, deleteError: action.error };\r\n                  }\r\n                  return item;\r\n              })\r\n          };\r\n      default:\r\n        return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { authentication } from './authentication.reducer'\r\nimport { registration } from './registration.reducer'\r\nimport { users } from './users.reducer'\r\nimport { alert } from './alert.reducer'\r\nimport { header } from './header.reducer'\r\nimport { music } from './music.reducer'\r\nimport apiReducers from './api.reducers'\r\nimport { game } from './apiGame.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    registration,\r\n    users,\r\n    alert,\r\n    header,\r\n    music,\r\n    game,\r\n    ...apiReducers,\r\n})\r\n\r\nexport default rootReducer\r\n","import { userConstants } from '../_constants'\r\n\r\nexport function registration (state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.REGISTER_REQUEST:\r\n            return {registering: true}\r\n        case userConstants.REGISTER_SUCCESS:\r\n            return {}\r\n        case userConstants.REGISTER_FAILURE:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import { userConstants } from '../_constants';\r\n\r\nexport function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.UPDATE_REQUEST:\r\n            return {updating: true}\r\n        case userConstants.UPDATE_SUCCESS:\r\n            return {}\r\n        case userConstants.UPDATE_FAILURE:\r\n            return {}\r\n        case userConstants.GETALL_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETALL_SUCCESS:\r\n            return {...state,\r\n                items: action.users\r\n            };\r\n        case userConstants.GETALL_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.GETBYID_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETBYID_SUCCESS:\r\n            return {...state,\r\n                items: action.user\r\n            };\r\n        case userConstants.GETBYID_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.FIND_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.FIND_SUCCESS:\r\n            return {...state,\r\n                items: action.user\r\n            };\r\n        case userConstants.FIND_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.DELETE_REQUEST:\r\n            // add 'deleting:true' property to user being deleted\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user =>\r\n                    user.id === action.id\r\n                        ? { ...user, deleting: true }\r\n                        : user\r\n                )\r\n            };\r\n        case userConstants.DELETE_SUCCESS:\r\n            // remove deleted user from state\r\n            return {...state,\r\n                items: state.items.filter(user => user.id !== action.id)\r\n            };\r\n        case userConstants.DELETE_FAILURE:\r\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user => {\r\n                    if (user.id === action.id) {\r\n                        // make copy of user without 'deleting:true' property\r\n                        const { deleting, ...userCopy } = user;\r\n                        // return copy of user with 'deleteError:[error]' property\r\n                        return { ...userCopy, deleteError: action.error };\r\n                    }\r\n\r\n                    return user;\r\n                })\r\n            };\r\n        case userConstants.GETROLES_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETROLES_SUCCESS:\r\n            return {...state,\r\n                roles: action.users.roles\r\n            };\r\n        case userConstants.GETROLES_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { alertConstants} from '../_constants'\r\n\r\nexport function alert (state = {}, action) {\r\n    switch(action.type) {\r\n        case alertConstants.SUCCESS:\r\n            return {\r\n                type: 'alert-succes',\r\n                message: action.message\r\n            }\r\n        case alertConstants.ERROR:\r\n            return {\r\n                type: 'alert-danger',\r\n                message: action.message\r\n            }\r\n        case alertConstants.CLEAR:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { headerConstants } from '../_constants'\r\n\r\nexport function header (state = {state: headerConstants.STATES.NORMAL, title: \"\", subtitle: \"\"}, action) {\r\n    switch(action.type) {\r\n        case headerConstants.SET_TITLE:\r\n\t\t\treturn {...state, title: action.newTitle};\r\n\r\n\t\tcase headerConstants.SET_SUBTITLE:\r\n\t\t\treturn {...state, subtitle: action.newSubtitle};\r\n\r\n\t\tcase headerConstants.SET_ALL:\r\n\t\t\treturn {...state, title: action.newTitle, subtitle: action.newSubtitle};\r\n\r\n\t\tcase headerConstants.CLEAR_TITLE:\r\n\t\t\treturn {...state, title: \"\"};\r\n\r\n\t\tcase headerConstants.CLEAR_SUBTITLE:\r\n\t\t\treturn {...state, subtitle: \"\"};\r\n\r\n\t\tcase headerConstants.CLEAR_ALL:\r\n\t\t\treturn {...state, title: \"\", subtitle: \"\"};\r\n\r\n\t\tcase headerConstants.SET_STATE:\r\n\t\t\treturn {...state, state: action.newState};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n    }\r\n}\r\n","import { musicConstants } from '../_constants/music.constants'\r\n\r\nexport function music ( state = {url: '', volume: 15}, action ) {\r\n\tswitch( action.type ) {\r\n\t\tcase musicConstants.SET:\r\n\t\t\treturn {...state, url: action.url}\r\n\t\tcase musicConstants.VOLUME:\r\n\t\t\treturn {...state, volume: action.volume}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from '../_reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n          thunkMiddleware,\r\n          loggerMiddleware\r\n      )\r\n    )\r\n)\r\n\r\nexport { store }\r\n","export function authHeader () {\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n    return user && user.jwt ? {\r\n        'Authorization': 'Bearer ' + user.jwt\r\n    } : {}\r\n}\r\n","function numberToMoney(n) {\r\n  var string = n.toString(),\r\n    units,\r\n    tens,\r\n    hundreds,\r\n    chunks,\r\n    chunk,\r\n    ints,\r\n    i,\r\n    word,\r\n    words;\r\n\r\n  /* Is number zero? */\r\n  if (parseInt(string) === 0) {\r\n    return \"zero\";\r\n  }\r\n\r\n  /* Array of units as words */\r\n  units = [\r\n    \"\",\r\n    \"um\",\r\n    \"dois\",\r\n    \"três\",\r\n    \"quatro\",\r\n    \"cinco\",\r\n    \"seis\",\r\n    \"sete\",\r\n    \"oito\",\r\n    \"nove\",\r\n    \"dez\",\r\n    \"onze\",\r\n    \"doze\",\r\n    \"treze\",\r\n    \"quatorze\",\r\n    \"quize\",\r\n    \"dezesseis\",\r\n    \"dezessete\",\r\n    \"dezoito\",\r\n    \"dezenove\",\r\n  ];\r\n\r\n  /* Array of tens as words */\r\n  tens = [\r\n    \"\",\r\n    \"\",\r\n    \"vinte\",\r\n    \"trinta\",\r\n    \"quarenta\",\r\n    \"cinquenta\",\r\n    \"sessenta\",\r\n    \"setenta\",\r\n    \"oitenta\",\r\n    \"noventa\",\r\n  ];\r\n\r\n  /* Array of scales as words */\r\n  hundreds = [\r\n    \"\",\r\n    \"cento\",\r\n    \"duzentos\",\r\n    \"trezentos\",\r\n    \"quatrocentos\",\r\n    \"quinhentos\",\r\n    \"seissentos\",\r\n    \"setecentos\",\r\n    \"oitocentos\",\r\n    \"novecentos\",\r\n  ];\r\n\r\n  chunks = string.split(\".\");\r\n\r\n  /* Stringify each integer in each chunk */\r\n  words = [];\r\n  for (i = 0; i < chunks.length; i++) {\r\n    chunk = parseInt(chunks[i]);\r\n\r\n    if (chunk) {\r\n      if (i === 1) words.push(\"e\");\r\n\r\n      if (chunk === 100) {\r\n        words.push(\"cem reais\");\r\n        continue;\r\n      }\r\n\r\n      /* Split chunk into array of individual integers */\r\n      ints = chunks[i].split(\"\").reverse().map(parseFloat);\r\n\r\n      /* If tens integer is 1, i.e. 10, then add 10 to units integer */\r\n      if (ints[1] === 1) {\r\n        ints[0] += 10;\r\n      }\r\n\r\n      if ((word = hundreds[ints[2]])) {\r\n        words.push(word + \" e\");\r\n      }\r\n\r\n      /* Add tens word if array item exists */\r\n      if ((word = tens[ints[1]])) {\r\n        words.push(word + \" e\");\r\n      }\r\n\r\n      /* Add unit word if array item exists */\r\n      if ((word = units[ints[0]])) {\r\n        words.push(word);\r\n      } else {\r\n        words[words.length - 1] = words[words.length - 1].replace(\" e\", \"\");\r\n      }\r\n\r\n      if (i === 0) {\r\n        if (chunk > 1) words.push(\"reais\");\r\n        else words.push(\"real\");\r\n      } else {\r\n        if (chunk > 1) words.push(\"centavos\");\r\n        else words.push(\"centavo\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return words.join(\" \");\r\n}\r\n\r\nfunction goRound(value, max) {\r\n  return value >= 0 ? value % max : max - (Math.abs(value) % max);\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex,\r\n    shuffledArray = [...array];\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = shuffledArray[currentIndex];\r\n    shuffledArray[currentIndex] = shuffledArray[randomIndex];\r\n    shuffledArray[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return shuffledArray;\r\n}\r\n\r\nfunction splitArrayIntoChunksOfLen(arr, len) {\r\n  var chunks = [],\r\n    i = 0,\r\n    n = arr.length;\r\n  while (i < n) {\r\n    chunks.push(arr.slice(i, (i += len)));\r\n  }\r\n  return chunks;\r\n}\r\n\r\nfunction zeroFill(s, size) {\r\n  while (s.length < size) {\r\n    s = \"0\" + s;\r\n  }\r\n  return s;\r\n}\r\n\r\nfunction preventSingleWordBreak(sentence) {\r\n  let words = sentence.split(\" \");\r\n\r\n  return (\r\n    words.slice(0, words.length - 3).join(\" \") +\r\n    \" \" +\r\n    words.slice(words.length - 3).join(\"\\u00a0\")\r\n  );\r\n}\r\n\r\n// function setElementPositonX(rect, element) {\r\n//   return rect.left - element.offsetWidth < 0\r\n//     ? rect.left + element.offsetWidth\r\n//     : rect.left - element.offsetWidth;\r\n// }\r\n\r\n// function setElementPositonY(rect, element) {\r\n//   return rect.top - element.offsetHeight < 0\r\n//     ? rect.top + element.offsetHeight\r\n//     : rect.top - element.offsetHeight;\r\n// }\r\n\r\nexport {\r\n  numberToMoney,\r\n  zeroFill,\r\n  splitArrayIntoChunksOfLen,\r\n  shuffle,\r\n  goRound,\r\n  preventSingleWordBreak,\r\n};\r\n","import axios from \"axios\";\r\nimport { authHeader } from \"../_helpers\";\r\nimport apiValues from \"../apiValues\";\r\n\r\nconst baseURL = \"https://learning-tool-backend.herokuapp.com\";\r\nconst api = axios.create({ baseURL });\r\n\r\nconst getAllBuilder = (routeName) =>\r\n  function getAll() {\r\n    // pegar rota\r\n    return api({\r\n      method: \"get\",\r\n      url: `/${routeName.toLowerCase().replace(/_/g, \"-\")}`,\r\n      headers: authHeader(),\r\n    }).then(handleResponse);\r\n  };\r\n\r\nconst getByIdBuilder = (routeName) =>\r\n  function getById(id) {\r\n    return api({\r\n      method: \"get\",\r\n      url: `/${routeName.toLowerCase().replace(/_/g, \"-\")}/${id}`,\r\n      headers: authHeader(),\r\n    }).then(handleResponse);\r\n  };\r\n\r\nconst findBuilder = (routeName) =>\r\n  function find(data) {\r\n    return api({\r\n      method: \"get\",\r\n      url: `/${routeName.toLowerCase().replace(/_/g, \"-\")}`,\r\n      headers: authHeader(),\r\n      query: data,\r\n    }).then(handleResponse);\r\n  };\r\n\r\nconst createBuilder = (routeName) =>\r\n  function create(data) {\r\n    return api({\r\n      method: \"post\",\r\n      url: `/${routeName.toLowerCase().replace(/_/g, \"-\")}`,\r\n      headers: authHeader(),\r\n      data: data,\r\n    }).then(handleResponse);\r\n  };\r\n\r\nconst updateBuilder = (routeName) =>\r\n  function update(data) {\r\n    return api({\r\n      method: \"put\",\r\n      url: `/${routeName.toLowerCase().replace(/_/g, \"-\")}/${data.id}`,\r\n      headers: {\r\n        ...authHeader(),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    }).then(handleResponse);\r\n  };\r\n\r\nconst deleteBuilder = (routeName) =>\r\n  function _delete(id) {\r\n    return api({\r\n      method: \"delete\",\r\n      url: `/${routeName.toLowerCase().replace(/_/g, \"-\")}/${id}`,\r\n      headers: authHeader(),\r\n    }).then(handleResponse);\r\n  };\r\n\r\nfunction handleResponse(response) {\r\n  if (response.status !== 200) {\r\n    if (response.status === 401) {\r\n      window.location.reload();\r\n    }\r\n    return Promise.reject(response.statusText);\r\n  }\r\n\r\n  return response.data;\r\n}\r\n\r\nlet apiServices = {};\r\n\r\napiValues.map(\r\n  (apiDataType) =>\r\n    (apiServices[`${apiDataType}`] = {\r\n      getAll: getAllBuilder(apiDataType),\r\n      getById: getByIdBuilder(apiDataType),\r\n      find: findBuilder(apiDataType),\r\n      create: createBuilder(apiDataType),\r\n      update: updateBuilder(apiDataType),\r\n      delete: deleteBuilder(apiDataType),\r\n    })\r\n);\r\n\r\nexport { apiServices, baseURL };\r\nexport default api;\r\n","import { authHeader } from \"../_helpers\";\r\nimport api from \"./api.services\";\r\n\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  register,\r\n  getAll,\r\n  getById,\r\n  find,\r\n  update,\r\n  delete: _delete,\r\n  getRoles,\r\n};\r\n\r\nfunction login(email, password) {\r\n  return api({\r\n    method: \"post\",\r\n    url: \"/auth/local\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: {\r\n      identifier: email,\r\n      password: password,\r\n    },\r\n  }).then((response) => {\r\n    if (response.data.jwt) {\r\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    }\r\n\r\n    return response.data;\r\n  });\r\n}\r\n\r\nfunction logout() {\r\n  localStorage.removeItem(\"user\");\r\n}\r\n\r\nfunction getAll() {\r\n  // pegar rota\r\n  return api({\r\n    method: \"get\",\r\n    url: \"/users\",\r\n    headers: authHeader(),\r\n  }).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n  return api({\r\n    method: \"get\",\r\n    url: `/users/${id}`,\r\n    headers: authHeader(),\r\n  }).then(handleResponse);\r\n}\r\n\r\nfunction find(data) {\r\n  return api({\r\n    method: \"get\",\r\n    url: \"/users\",\r\n    headers: authHeader(),\r\n    query: data,\r\n  }).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n  return api({\r\n    method: \"post\",\r\n    url: \"/auth/local/register\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: user,\r\n  }).then((response) => {\r\n    if (response.data.jwt) {\r\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    }\r\n\r\n    return response.data;\r\n  });\r\n}\r\n\r\nfunction update(user) {\r\n  // checar rotausers\r\n  return api({\r\n    method: \"put\",\r\n    url: `/users/${user.id}`,\r\n    headers: {\r\n      ...authHeader(),\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: user,\r\n  }).then((response) => {\r\n    console.log(response);\r\n  });\r\n}\r\n\r\nfunction _delete(id) {\r\n  return api({\r\n    method: \"delete\",\r\n    url: `/users/${id}`,\r\n    headers: authHeader(),\r\n  }).then(handleResponse);\r\n}\r\n\r\nfunction getRoles() {\r\n  return api({\r\n    method: \"get\",\r\n    url: \"/users-permissions/roles\",\r\n    headers: authHeader(),\r\n  }).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  if (response.status !== 200) {\r\n    if (response.status === 401) {\r\n      logout();\r\n      window.location.reload();\r\n    }\r\n\r\n    return Promise.reject(response.statusText);\r\n  }\r\n\r\n  return response.data;\r\n}\r\n","import axios from \"axios\";\r\nimport { authHeader } from \"../_helpers\";\r\n\r\nconst baseURL = \"https://learning-tool-backend.herokuapp.com\";\r\nconst api = axios.create({ baseURL });\r\n\r\nconst getAll = (routeName) => {\r\n  // pegar rota\r\n  return api({\r\n    method: \"get\",\r\n    url: `/game/${routeName}`,\r\n    headers: authHeader(),\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst getById = (routeName, id) => {\r\n  return api({\r\n    method: \"get\",\r\n    url: `/game/${routeName}/${id}`,\r\n    headers: authHeader(),\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst find = (routeName, data) => {\r\n  return api({\r\n    method: \"get\",\r\n    url: `/game/${routeName}`,\r\n    headers: authHeader(),\r\n    params: data,\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst create = (routeName, data) => {\r\n  return api({\r\n    method: \"post\",\r\n    url: `/game/${routeName}`,\r\n    headers: authHeader(),\r\n    params: data,\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst update = (routeName, data) => {\r\n  return api({\r\n    method: \"put\",\r\n    url: `/game/${routeName}/${data.id}`,\r\n    headers: {\r\n      ...authHeader(),\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    params: data,\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst _delete = (routeName, id) => {\r\n  return api({\r\n    method: \"delete\",\r\n    url: `/game/${routeName}/${id}`,\r\n    headers: authHeader(),\r\n  }).then(handleResponse);\r\n};\r\n\r\nfunction handleResponse(response) {\r\n  if (response.status !== 200) {\r\n    if (response.status === 401) {\r\n      window.location.reload();\r\n    }\r\n    return Promise.reject(response.statusText);\r\n  }\r\n\r\n  return response.data;\r\n}\r\n\r\nconst apiGameServices = {\r\n  getAll: getAll,\r\n  getById: getById,\r\n  find: find,\r\n  create: create,\r\n  update: update,\r\n  delete: _delete,\r\n};\r\n\r\nexport { apiGameServices, baseURL };\r\nexport default api;\r\n","import { userConstants } from '../_constants'\r\nimport { userService } from '../_services'\r\nimport { alertActions } from './'\r\n\r\nexport const userActions = {\r\n    getAll,\r\n    getById,\r\n    delete: _delete,\r\n    getRoles\r\n}\r\n\r\nexport const login = (email, password) => dispatch => {\r\n    dispatch(request({email}))\r\n\r\n    return userService.login(email, password)\r\n        .then(\r\n            user => {\r\n                dispatch(success(user))\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject(error.response.data.data[0].messages[0].message)\r\n            }\r\n        )\r\n\r\n    function request(user) { return {type: userConstants.LOGIN_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.LOGIN_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.LOGIN_FAILURE, error} }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    userService.logout()\r\n    dispatch({type: userConstants.LOGOUT})                        \r\n}\r\n\r\nexport const register = (user) => dispatch => {\r\n    dispatch(request(user))\r\n\r\n    return userService.register(user)\r\n        .then(\r\n            user => {\r\n                dispatch(success())\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject(error.response.data.data[0].messages[0].message)\r\n            }\r\n        )\r\n    function request(user) { return {type: userConstants.REGISTER_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.REGISTER_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.REGISTER_FAILURE, error} }\r\n}\r\n\r\nexport const update = (user) => dispatch => {\r\n    dispatch(request(user))\r\n\r\n    return userService.update(user)\r\n        .then(\r\n            user => {\r\n                dispatch(success())\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject()\r\n            }\r\n        )\r\n\r\n    function request(user) { return {type: userConstants.UPDATE_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.UPDATE_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.UPDATE_FAILURE, error} }\r\n}\r\n\r\nfunction getAll(){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        const r = userService.getAll()\r\n            r.then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETALL_REQUEST} }\r\n    function success(users) { return {type: userConstants.GETALL_SUCCESS, users} }\r\n    function failure(error) { return {type: userConstants.GETALL_FAILURE, error} }\r\n}\r\n\r\nfunction getById(id){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        userService.getById(id)\r\n            .then(\r\n                user => dispatch(success(user)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETBYID_REQUEST} }\r\n    function success(user) { return {type: userConstants.GETBYID_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.GETBYID_FAILURE, error} }\r\n}\r\n\r\nfunction _delete(id){\r\n    return dispatch => {\r\n        dispatch(request(id))\r\n\r\n        userService.delete(id)\r\n            .then(\r\n                user => dispatch(success(id)),\r\n                error => dispatch(failure(id, error.toString()))\r\n            )\r\n    }\r\n\r\n    function request(id) { return {type: userConstants.DELETE_REQUEST, id} }\r\n    function success(id) { return {type: userConstants.DELETE_SUCCESS, id} }\r\n    function failure(id, error) { return {type: userConstants.DELETE_FAILURE, id, error} }\r\n}\r\n\r\nfunction getRoles(){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        const r = userService.getRoles()\r\n            r.then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETROLES_REQUEST} }\r\n    function success(users) { return {type: userConstants.GETROLES_SUCCESS, users} }\r\n    function failure(error) { return {type: userConstants.GETROLES_FAILURE, error} }\r\n}","import { headerConstants } from '../_constants'\r\n\r\nconst setTitle = (title) => {return {type: headerConstants.SET_TITLE, newTitle: title}};\r\nconst setSubtitle = (subtitle) => {return {type: headerConstants.SET_SUBTITLE, newSubtitle: subtitle}};\r\nconst setAll = (title, subtitle) => {return {type: headerConstants.SET_ALL, newTitle: title, newSubtitle: subtitle}};\r\n\r\nconst clearTitle = () => {return {type: headerConstants.CLEAR_TITLE}};\r\nconst clearSubtitle = () => {return {type: headerConstants.CLEAR_SUBTITLE}};\r\nconst clearAll = () => {return {type: headerConstants.CLEAR_ALL}};\r\n\r\nconst setState = (state) => {return {type: headerConstants.SET_STATE, newState: state}};\r\n\r\nexport const headerActions = {\r\n\tsetTitle,\r\n\tsetSubtitle,\r\n\tsetAll,\r\n\tclearTitle,\r\n\tclearSubtitle,\r\n\tclearAll,\r\n\tsetState\r\n}","import { gameConstants } from '../_constants'\r\nimport { apiGameServices } from '../_services'\r\n\r\nfunction requester(service, request, success, failure, route, payload){\r\n  return dispatch => {\r\n      dispatch(request(payload))\r\n\r\n      return service(route, payload)\r\n        .then(\r\n            data => {\r\n              dispatch(success(data))\r\n              return Promise.resolve()\r\n              },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n\r\n                try {\r\n                  return Promise.reject(error.response.data.data[0].messages[0].message)\r\n                } catch{\r\n                  console.log(error)\r\n                }\r\n            }\r\n          )\r\n  }\r\n}\r\n\r\n//Could use some code refactory\r\nconst getAllConstructor = (service) => {\r\n  return function(route, ){\r\n    return requester(service.getAll, request, success, failure, route)\r\n\r\n    function request() { return { type: gameConstants.GETALL_REQUEST, info: route }}\r\n    function success(data) { return {type: gameConstants.GETALL_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.GETALL_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst getByIdConstructor = (service) => {\r\n  return function(route, id){\r\n    return requester(service.getById, request, success, failure, route, id)\r\n\r\n    function request() { return {type: gameConstants.GETBYID_REQUEST, info: route} }\r\n    function success(data) { return {type: gameConstants.GETBYID_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.GETBYID_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst findConstructor = (service) => {\r\n  return function(route, findData){\r\n    return requester(service.find, request, success, failure, route, findData)\r\n\r\n    function request() { return {type: gameConstants.FIND_REQUEST, info: route} }\r\n    function success(data) { return {type: gameConstants.FIND_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.FIND_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst createConstructor = (service) => {\r\n  return function(route, createData){\r\n    return requester(service.create, request, success, failure, route, createData)\r\n\r\n    function request(data) { return {type: gameConstants.CREATE_REQUEST, info: route, game: data}}\r\n    function success(data) { return {type: gameConstants.CREATE_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.CREATE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst updateConstructor = (service) => {\r\n  return function(route, updateData){\r\n      return requester(service.update, request, success, failure, route, updateData)\r\n\r\n      function request(data) { return {type: gameConstants.UPDATE_REQUEST, info: route, game: data} }\r\n      function success(data) { return {type: gameConstants.UPDATE_SUCCESS, info: route, data} }\r\n      function failure(error) { return {type: gameConstants.UPDATE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst deleteConstructor = (service) => {\r\n  return function(route, deleteData){\r\n    return requester(service.delete, request, success, failure, route, deleteData)\r\n\r\n    function request(data) { return {type: gameConstants.DELETE_REQUEST, info: route, game: data} }\r\n    function success(data) { return {type: gameConstants.DELETE_SUCCESS, info: route, id: data.id} }\r\n    function failure(error) { return {type: gameConstants.DELETE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nlet gameActions = {\r\n  getAll:  getAllConstructor(apiGameServices),\r\n  getById: getByIdConstructor(apiGameServices),\r\n  find: findConstructor(apiGameServices),\r\n  create:  createConstructor(apiGameServices),\r\n  update:  updateConstructor(apiGameServices),\r\n  delete:  deleteConstructor(apiGameServices)\r\n}\r\n\r\n\r\nexport { gameActions }\r\n","import { apiConstants } from '../_constants'\r\nimport { apiServices } from '../_services'\r\nimport { gameActions } from './apiGame.actions'\r\n\r\nfunction requester(service, request, success, failure, payload){\r\n  return dispatch => {\r\n      dispatch(request(payload))\r\n\r\n      return service(payload)\r\n        .then(\r\n            data => {\r\n              dispatch(success(data))\r\n              return Promise.resolve()\r\n              },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n\r\n                try {\r\n                  return Promise.reject(error.response.data.data[0].messages[0].message)\r\n                } catch{\r\n                  console.log(error)\r\n                }\r\n            }\r\n          )\r\n  }\r\n}\r\n\r\n//Could use some code refactory\r\nconst getAllConstructor = (service, apiDataType) => {\r\n  return function(){\r\n    return requester(service.getAll, request, success, failure)\r\n\r\n    function request() { return { type: apiConstants[apiDataType].GETALL_REQUEST }}\r\n    function success(data) { return {type: apiConstants[apiDataType].GETALL_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].GETALL_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst getByIdConstructor = (service, apiDataType) => {\r\n  return function(id){\r\n    return requester(service.getById, request, success, failure, id)\r\n\r\n    function request() { return {type: apiConstants[apiDataType].GETBYID_REQUEST} }\r\n    function success(data) { return {type: apiConstants[apiDataType].GETBYID_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].GETBYID_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst findConstructor = (service, apiDataType) => {\r\n  return function(findData){\r\n    return requester(service.find, request, success, failure, findData)\r\n\r\n    function request() { return {type: apiConstants[apiDataType].FIND_REQUEST} }\r\n    function success(data) { return {type: apiConstants[apiDataType].FIND_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].FIND_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst createConstructor = (service, apiDataType) => {\r\n  return function(createData){\r\n    return requester(service.create, request, success, failure, createData)\r\n\r\n    function request(data) { return {type: apiConstants[apiDataType].CREATE_REQUEST, [apiDataType]: data}}\r\n    function success(data) { return {type: apiConstants[apiDataType].CREATE_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].CREATE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst updateConstructor = (service, apiDataType) => {\r\n  return function(updateData){\r\n      return requester(service.update, request, success, failure, updateData)\r\n\r\n      function request(data) { return {type: apiConstants[apiDataType].UPDATE_REQUEST, [apiDataType]: data} }\r\n      function success(data) { return {type: apiConstants[apiDataType].UPDATE_SUCCESS, data} }\r\n      function failure(error) { return {type: apiConstants[apiDataType].UPDATE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst deleteConstructor = (service, apiDataType) => {\r\n  return function(deleteData){\r\n    return requester(service.delete, request, success, failure, deleteData)\r\n\r\n    function request(data) { return {type: apiConstants[apiDataType].DELETE_REQUEST, [apiDataType]: data} }\r\n    function success(data) { return {type: apiConstants[apiDataType].DELETE_SUCCESS, id: data.id} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].DELETE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nlet apiActions = {}\r\nObject.keys(apiConstants).forEach( (apiDataType) => {\r\n  apiActions[`${apiDataType.toLowerCase()}Actions`] = {\r\n    getAll:  getAllConstructor(apiServices[apiDataType], apiDataType),\r\n    getById: getByIdConstructor(apiServices[apiDataType], apiDataType),\r\n    find: findConstructor(apiServices[apiDataType],\r\n    apiDataType),\r\n    create:  createConstructor(apiServices[apiDataType], apiDataType),\r\n    update:  updateConstructor(apiServices[apiDataType], apiDataType),\r\n    delete:  deleteConstructor(apiServices[apiDataType], apiDataType)\r\n  }\r\n})\r\n\r\nexport { apiActions, gameActions }\r\n","import { musicConstants } from '../_constants'\r\n\r\nconst set = (music) => { return { type: musicConstants.SET, url: music } }\r\nconst volume = v => ({type: musicConstants.VOLUME, volume: v})\r\n\r\nexport const musicActions =\r\n{\r\n  set,\r\n  volume\r\n}\r\n","import React from \"react\";\r\nimport { avatar, home, notifications, settings } from \"../../img\";\r\nimport { logout } from \"../../_actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst UserHeader = ({ pageInfo }) => {\r\n  let headerInfo = useSelector((state) => state.header);\r\n  const [state, setState] = React.useState({ view: \"default\" });\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const clickProfile = () => {\r\n    setState({ ...state, view: \"profile\" });\r\n    alert.show(\"Vc achou onde faz para abrir o seu perfil! \\n\\n Ending 3/15\");\r\n  };\r\n\r\n  const clickHome = () => {\r\n    setState({ ...state, view: \"home\" });\r\n    alert.show(\"Vc achou onde faz para voltar ao início! \\n\\n Ending 1/15\");\r\n  };\r\n\r\n  const clickNotif = () => {\r\n    setState({ ...state, view: \"notif\" });\r\n    alert.show(\r\n      \"Vc achou onde faz para ver suas notificações! \\n\\n Ending 7/15\"\r\n    );\r\n  };\r\n\r\n  const clickSettings = () => {\r\n    setState({ ...state, view: \"settings\" });\r\n    alert.show(\r\n      \"Vc achou onde faz para abrir suas configurações! \\n\\n Ending 8/15\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header id=\"app-header\" className={headerInfo.state.toLowerCase()}>\r\n      <div className=\"group-btns\" id=\"left-btns\">\r\n        <div className=\"header-btn\" id=\"home-btn\" onClick={clickHome}>\r\n          <img src={home} alt=\"Home\"></img>\r\n        </div>\r\n        <div className=\"header-btn\" id=\"notif-btn\" onClick={clickNotif}>\r\n          <img src={notifications} alt=\"Notifications\"></img>\r\n        </div>\r\n        <div className=\"header-btn\" id=\"settings-btn\" onClick={clickSettings}>\r\n          <img src={settings} alt=\"Settings\"></img>\r\n        </div>\r\n      </div>\r\n      <div id=\"pageTitle\">\r\n        <div id=\"mainTitle\">{headerInfo.title}</div>\r\n        <div id=\"subTitle\">{headerInfo.subtitle}</div>\r\n      </div>\r\n      <div className=\"group-btns\" id=\"right-btns\">\r\n        <div id=\"profilePic\" onClick={clickProfile}>\r\n          <img src={avatar} alt=\"Profile_Picture\" />\r\n        </div>\r\n        <div\r\n          className=\"header-btn\"\r\n          id=\"logout-btn\"\r\n          onClick={() => {\r\n            dispatch(logout());\r\n          }}\r\n        >\r\n          Logout\r\n        </div>\r\n      </div>\r\n      {/* style provisório para teste*/}\r\n      {state.view === \"settings\" && (\r\n        <div\r\n          className=\"ConfigPopUp\"\r\n          style={{\r\n            position: \"absolute\",\r\n            backgroundColor: \"#ddddee\",\r\n            top: 100,\r\n            margin: \"0 auto\",\r\n            width: \"50%\",\r\n            height: 500,\r\n          }}\r\n        >\r\n          Configurações\r\n          <Button>Config 1</Button>\r\n          <Button>Config 2</Button>\r\n          <Button>Config 3</Button>\r\n          <Button onClick={() => setState({ ...state, view: \"default\" })}>\r\n            X\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n  /**/\r\n};\r\n\r\nexport default UserHeader;\r\n","import React from 'react'\r\n\r\nconst DefaultHeader = ({pageInfo}) => {\r\n\r\n\treturn (\r\n\t\t<header id=\"app-header\" className=\"normal\">\r\n\t\t\t<div className=\"group-btns\">\r\n\t\t\t\t<div className=\"header-btn\">Home</div>\r\n\t\t\t\t<div className=\"header-btn\">About</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default DefaultHeader","import './index.scss'\r\nimport React from 'react'\r\nimport UserHeader from '../UserHeader'\r\nimport DefaultHeader from '../DefaultHeader'\r\n\r\nconst AppHeader = ({props}) => {\r\n\treturn props.isLogged ? <UserHeader pageInfo={props} /> : <DefaultHeader />\r\n}\r\n\r\nexport default AppHeader","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './index.scss'\r\n\r\nconst Home = () => {\r\n  const isLogged = useSelector(state => state.authentication.loggedIn)\r\n\r\n  if( isLogged ) return (<Redirect to={'/userspace'}/>)\r\n  else return(\r\n    <div id=\"message\">\r\n      Aqui é a home. Nada muito interessante aqui. Se quiser fazer login:\r\n      <Link to='/login' className=\"btn-normal\">Login</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/pwu.908352a7.mp3\";","import React from 'react'\r\nimport styles from './index.module.scss'\r\nimport sound from '../../sounds/pwu.mp3'\r\n\r\nconst BUTTON_DIRECTIONS = Object.freeze({\r\n  LEFT: \"left\",\r\n  CENTER: \"center\",\r\n  RIGHT: \"right\"\r\n});\r\n\r\nconst COLOR_SCHEMES = Object.freeze({\r\n  COR_1: \"cor1\",\r\n  COR_2: \"cor2\",\r\n  COR_3: \"cor3\",\r\n  COR_4: \"cor4\",\r\n  COR_5: \"cor5\",\r\n  COR_6: \"cor6\",\r\n});\r\n\r\nconst ButtonConfigs = Object.freeze({\r\n  BUTTON_DIRECTIONS,\r\n  COLOR_SCHEMES\r\n});\r\n\r\nconst Button = ({children, blink, direction, colorScheme, onClick, stayAsPill, showArrow, ...props}) => {\r\n\r\n  const sfx = new Audio(sound);\r\n\r\n  return(\r\n    <button\r\n      className={\r\n        `${styles.btn}\\\r\n        ${blink? styles.blink:''}\\\r\n        ${stayAsPill ? styles.stayAsPill:''}\\\r\n        ${styles[direction]??''}\\\r\n        ${styles[colorScheme]??''}\\\r\n        ${showArrow?styles.showArrow:''}`\r\n      }\r\n      onClick={onClick}\r\n      {...props}\r\n      onPointerEnter={() => sfx.play()}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n\r\n// Purposefully hiding children because it makes no sense in this context\r\n// It makes more obvious that setting label is through a prop and should be text\r\n\r\nconst Iniciar = ({label, onClick, children, ...props}) => <Button\r\n  blink\r\n  colorScheme={COLOR_SCHEMES.COR_1}\r\n  direction={BUTTON_DIRECTIONS.RIGHT}\r\n  onClick={onClick}\r\n  showArrow\r\n  {...props}\r\n>\r\n  {label??\"Iniciar\"}\r\n</Button>;\r\n\r\nconst Voltar = ({label, onClick, children, ...props}) => <Button\r\n  blink\r\n  colorScheme={COLOR_SCHEMES.COR_2}\r\n  direction={BUTTON_DIRECTIONS.LEFT}\r\n  onClick={onClick}\r\n  showArrow\r\n  {...props}\r\n>\r\n  {label??\"Voltar\"}\r\n</Button>;\r\n\r\nconst PularTutorial = ({label, onClick, children, ...props}) => <Button\r\n  blink\r\n  colorScheme={COLOR_SCHEMES.COR_2}\r\n  direction={BUTTON_DIRECTIONS.RIGHT}\r\n  onClick={onClick}\r\n  showArrow\r\n  stayAsPill\r\n  {...props}\r\n>\r\n  {label??\"Pular Tutorial\"}\r\n</Button>;\r\n\r\nexport {Button, ButtonConfigs, Iniciar, Voltar, PularTutorial};\r\n","import React from 'react'\r\nimport { blobAzul } from '../../img'\r\nimport { renderToStaticMarkup } from 'react-dom/server'\r\n\r\nconst Blob = ({duration, fill, stroke, strokeWidth, animation, ...props}) => {\r\n  return(\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"auto\" preserveAspectRatio=\"true\" viewBox=\"-200 0 1800 1080\" {...props}>\r\n      <path id=\"Path_5521\" data-name=\"Path 5521\" fill={fill ? fill: \"#d6e3f4\"}\r\n        stroke={ stroke }\r\n        strokeWidth={strokeWidth}\r\n        d=\"M1122.91 806.578\r\n        C1193.7 670.545 1198.48 489.306 1149.6 343.976\r\n        C1107.6 218.88 1013.88 123.442 905.72 66.6079\r\n        C780.231 0.702494 630.654 -18.9236 495.973 22.6775\r\n        C460.55 33.6025 426.071 43.6497 392.661 61.6292\r\n        C255.741 135.338 274.91 220.659 226.888 283.822\r\n        C186.486 336.976 116.417 417.611 67.7008 458.349\r\n        C-63.8393 568.259 11.9697 825.455 163.713 912.282\r\n        C324.632 1004.43 947.554 1143.52 1122.91 806.578Z\"\r\n        >\r\n        <animate dur={duration? duration : \"15s\"} repeatCount=\"indefinite\" attributeName=\"d\"\r\n          values=\"\r\n          M1122.91 806.578\r\n          C1193.7 670.545 1198.48 489.306 1149.6 343.976\r\n          C1107.6 218.88 1013.88 123.442 905.72 66.6079\r\n          C780.231 0.702494 630.654 -18.9236 495.973 22.6775\r\n          C460.55 33.6025 426.071 43.6497 392.661 61.6292\r\n          C255.741 135.338 274.91 220.659 226.888 283.822\r\n          C186.486 336.976 116.417 417.611 67.7008 458.349\r\n          C-63.8393 568.259 11.9697 825.455 163.713 912.282\r\n          C324.632 1004.43 947.554 1143.52 1122.91 806.578Z;\r\n          M1340.5 652.5\r\n          C1411.3 516.467 1326.9 434.024 1123.5 332\r\n          C920.105 229.976 1097.66 122.834 989.5 66\r\n          C864.011 0.0945511 686.473 -29.8226 518.5 42.4999\r\n          C350.527 114.822 349 -56.0001 264.5 87.9999\r\n          C180 232 358.021 241.813 310 304.976\r\n          C269.598 358.13 -41.0002 393.5 5.00002 683\r\n          C51.0003 972.5 620.757 853.673 772.5 940.5\r\n          C933.42 1032.65 1165.14 989.444 1340.5 652.5Z;\r\n          M1438 440.5\r\n          C1389 178 1221 333.5 1102.5 293\r\n          C984 252.5 912.661 78.8338 804.5 22.0001\r\n          C679.011 -43.9054 567 58.5 479 130\r\n          C391 201.5 226.5 86.0001 179 181\r\n          C131.5 276 -11 413 1.00002 516.5\r\n          C13 620 32.9996 794 245 921.5\r\n          C457 1049 879.757 860.173 1031.5 947\r\n          C1192.42 1039.15 1487 703 1438 440.5Z;\r\n          M1122.91 806.578\r\n          C1193.7 670.545 1198.48 489.306 1149.6 343.976\r\n          C1107.6 218.88 1013.88 123.442 905.72 66.6079\r\n          C780.231 0.702494 630.654 -18.9236 495.973 22.6775\r\n          C460.55 33.6025 426.071 43.6497 392.661 61.6292\r\n          C255.741 135.338 274.91 220.659 226.888 283.822\r\n          C186.486 336.976 116.417 417.611 67.7008 458.349\r\n          C-63.8393 568.259 11.9697 825.455 163.713 912.282\r\n          C324.632 1004.43 947.554 1143.52 1122.91 806.578Z\"/>\r\n      </path>\r\n  </svg>\r\n  )\r\n}\r\n\r\nexport default Blob\r\n\r\nconst BlobBg = ({children, style, ...props}) => (\r\n  <div style={{background: `url(\"data:image/svg+xml,${encodeURIComponent(renderToStaticMarkup(<Blob {...props.blob} />))}\")`,\r\n    brackgroundRepeat: 'no-repeat', backgroundPosition: 'center', ...style}}\r\n  {...props}>\r\n    {children}\r\n  </div>\r\n)\r\n\r\nexport { BlobBg }\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\nimport {Iniciar, Voltar} from '../Button'\r\nimport Blob from '../Blob'\r\n\r\nconst Init = ({\r\n  icon,\r\n  name,\r\n  description,\r\n  nameTranslate = \"Name\",\r\n  descriptionTranslate = \"Description\",\r\n  onStart,\r\n  onBack,\r\n  ready,\r\n}) => {\r\n  return (\r\n    <div className=\"main-init-wrapper\">\r\n      <div className=\"inner-content\">\r\n        <div name=\"infos\">\r\n          {icon ? (\r\n            <img className=\"classImage\" src={icon} alt=\"\" />\r\n          ) : (\r\n            <div style={{ height: \"25vh\" }}></div>\r\n          )}\r\n\r\n          <h1 className=\"margin-half-top type-l type-display type-center\">\r\n            {name}\r\n          </h1>\r\n          <h1 className=\"type-m type-display type-center subtitle\">\r\n            {nameTranslate}\r\n          </h1>\r\n\r\n          <h2 className=\"margin-top type-s type-center description\">\r\n            {description}\r\n          </h2>\r\n          <h2 className=\"type-s type-center subdescription\">\r\n            {descriptionTranslate}\r\n          </h2>\r\n        </div>\r\n\r\n        <div id=\"btns\">\r\n          {onBack && (\r\n            <Voltar onClick={onBack}/>\r\n          )}\r\n          {ready ?\r\n            (onStart &&\r\n              <Iniciar onClick={onStart} />\r\n            )\r\n            :\r\n            <span>\r\n              LOADING <CircularProgress />\r\n            </span>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div style={{position: 'absolute', width: '100%', height: '100%', pointerEvents: 'none'}}>\r\n        <Blob style={{position: 'relative', width: '100%', top: 0, left: 0, zIndex: -10}}/>\r\n        <Blob fill=\"none\" duration=\"12s\" stroke=\"#59316d\" strokeWidth={4} style={{position: 'relative', width: '100%', top: 0, left: 0, zIndex: -9}}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Init;\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst Result = ({gameEndState}) => {\r\n    return (\r\n        <div>\r\n            {/* Não era pra a gente precisar checar se a string é null, pq era pra isso\r\n            só aparecer quando já tivesse um valor na string... WTF */}\r\n            { gameEndState ? gameEndState.split('\\n').map( str => <p>{str}</p>) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst RoomSelect = ({value, buttonList, onChange, showInBtnFormat = true}) => {\r\n\tconst [state, setState] = React.useState(0)\r\n\r\n\tconst buttonClick = (num) => () => {\r\n\t\tif(onChange) {\r\n\t\t\tonChange(num)\r\n\t\t\tsetState(num)\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif(value) setState(value)\r\n\t}, [value])\r\n\r\n\tif( showInBtnFormat ) {\r\n\t\treturn (\r\n\t\t\t<div id=\"RoomSelect\">\r\n\t\t\t\t<div className=\"section-title\">\r\n\t\t\t\t\t<span lang=\"pt-br\">Salas</span>\r\n\t\t\t\t\t<span lang=\"en\">Rooms</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"button-rows\">\r\n\t\t\t\t\t{buttonList.map( (name, index) =>\r\n\t\t\t\t\t\t<button className={\"RoomBtn\" + (onChange ? \"\" : \" disabled\")} key={index}\r\n\t\t\t\t\t\tid={ state === index ? \"selected\" : \"\" }\r\n\t\t\t\t\t\tonClick={buttonClick(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{index+1}\r\n\t\t\t\t\t\t</button> )}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div id=\"RoomSelect\">\r\n\t\t\t\t<div className=\"section-title\">\r\n\t\t\t\t\t<span lang=\"pt-br\">Sala {state + 1}/{buttonList.length}</span>\r\n\t\t\t\t\t<span lang=\"en\">Room {state + 1}/{buttonList.length}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default RoomSelect\r\n","import React from 'react'\r\nimport './sala.scss'\r\n\r\nconst Sala = ({children, roomData, setCurrentChar}) => {\r\n\r\n  const img = roomData && roomData.background.url ? roomData.background.url : \"\"\r\n  return (\r\n      // <div id=\"sala\" style={{backgroundImage: `url(\"${img}\")`}}>\r\n      <div id=\"sala\">\r\n        <img src={img} alt=\"\" />\r\n        <div id=\"sala-content\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Sala\r\n","import React from 'react'\r\nimport './character.scss'\r\n\r\nconst Character = ({zDepth, character, dragPosition, position, onClick, showNameOnHover}) => {\r\n    return (\r\n    <div className=\"CharDiv\" onClick={onClick} style={{\"--z\": zDepth}}>\r\n        <img src={character.characterAssets.length > 0 ? character.characterAssets.find(asset => asset.bodyPart === 'fullbody'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t).image.url : \"\"} alt={`${character.name}`}/>\r\n        {showNameOnHover && <div>{character.name}</div>}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Character\r\n","const initialValue = () => ({\r\n  //METADATA\r\n  back: false,\r\n  //GAME STATE\r\n  scene: \"INIT\",\r\n  endGame: false,\r\n  currentLocationIndex: 0,\r\n  locations: [],\r\n  jobs: [],\r\n  countries: [],\r\n  names: [],\r\n  contactsTemplate: [],\r\n  contactsAtSession: [],\r\n  dialogs: {},\r\n  questionsAsked: 0,\r\n  result: 0,\r\n  totalFields: 0,\r\n  mainError: [],\r\n  feedback: {},\r\n  //DIALOG\r\n  dialogHistory: [],\r\n  answers: [],\r\n  preSpeech: [],\r\n  currentChar: null,\r\n  characterFeeling: \"init\",\r\n  showContacts: false,\r\n  maxQuestions: 4,\r\n  // onMinimize: null,\r\n  shouldMinimize: false,\r\n  shouldCloseDialog: false,\r\n  wrongContacts: 0,\r\n  tracking: true\r\n});\r\n\r\nexport default initialValue;\r\n","const initialValue = [\r\n    {\r\n        question: 'Oi!',\r\n        answers: 'Oi! Tudo bem?',\r\n    },\r\n    {\r\n        question: 'Olá!',\r\n        answers: 'Oi! Como vai?',\r\n    },\r\n    {\r\n        question: 'E aí?',\r\n        answers: 'Opa, beleza?',\r\n    },\r\n    {\r\n        question: 'Até mais!',\r\n        answers: 'Já vai...?',\r\n    },\r\n    {\r\n        question: 'Tchau!',\r\n        answers: 'Tudo certo contigo...?',\r\n    },\r\n]\r\n\r\n\r\nexport default initialValue","const stub = {\r\n  name: 'Stub mission',\r\n  description: 'Local stub mission for tests',\r\n  locations: [\r\n    {name: 'sala', backgroundAssets: []},\r\n    {name: 'cozinha', backgroundAssets: []},\r\n    {name: 'biblioteca', backgroundAssets: []},\r\n    {name: 'escritório', backgroundAssets: []}],\r\n  characters: [\r\n    {\r\n      name: 'Joao', characterAssets: [],\r\n      answers: [\r\n        {\r\n          answer: 'oi',\r\n          question: {question: \"oi?\"}\r\n        },\r\n        {\r\n          answer: 'turusim',\r\n          question: {question: \"turubem?\"}\r\n        },\r\n\r\n        {\r\n          answer: 'kiésim',\r\n          question: {question: \"cumékié?\"}\r\n        }\r\n      ]\r\n    },\r\n    {name: 'Pedro', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Marta', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Suzane', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Maria', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Pablo', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n  ]\r\n}\r\n\r\nexport default stub\r\n","import React from 'react'\r\n\r\nconst Dropdown = ({style, defaultText, onChange, label, optionList, value}) => {\r\n\r\n  return(\r\n    <div className={label}>\r\n      <p>{label}</p>\r\n      <select style={style} value={value} onChange={onChange}>\r\n          <option value='' key={-1} disabled>{defaultText ?? label.toLowerCase()}</option>\r\n        {optionList?.map((option, index) =>\r\n          <option value={option} key={index}>{option}</option>\r\n        )}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n","import React from 'react'\r\n\r\nimport './index.scss'\r\n\r\n/**\r\n * Cria um novo contexto de renderização de página inteira com fundo branco semitransparente\r\n * @param  {Object} props\r\n * @param  {Object | Object[]} props.children\t\t\t\t\t\t\tElementos a serem renderizados\r\n * @param  {boolean} [props.showCloseBtn]\t\t\t\t\t\t\t\tDevo mostrar o botão de fechar?\r\n * @param  {boolean} [props.shouldExit]\t\t\t\t\t\t\t\t\tDevo fechar? Se verdadeiro, inicia animação de fechamento\r\n * @param  {() => void} [props.onClickClose]\t\t\t\t\t\t\tCallback para quando clicam no botão de fechar\r\n * @param  {(event) => void} [props.onReadyToExit]\t\t\t\t\t\tCallback para quando terminei de fechar\r\n * @param  {{r:number, g:number, b:number, a:number}} [props.bgRGBA]\tCor (formato da função rgba()) do fundo desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n * @param  {{r:number, g:number, b:number}} [props.closeRGB]\t\t\tCor (formato da função rgba()) do botão de fechar desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n * @param  {{r:number, g:number, b:number}} [props.closeHoverRGB]\t\tCor (formato da função rgba()) do botão de fechar quanto em hover desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n */\r\nconst FullscreenOverlay = ({\r\n\t\tchildren,\r\n\t\tshowCloseBtn = true,\r\n\t\tshouldExit = false,\r\n\t\tonClickClose,\r\n\t\tonReadyToExit,\r\n\t\tbgRGBA = {},\r\n\t\tcloseRGB = {},\r\n\t\tcloseHoverRGB = {},\r\n\t\tstyle = {}\r\n\t}) => {\r\n\r\n\tif( showCloseBtn && onClickClose == null ) throw Error(\"Invalid callback for click on close button.\")\r\n\tif( shouldExit && onReadyToExit == null ) throw Error(\"Invalid callback for when finishing the exit animation.\")\r\n\r\n\tconst _readyToExit = (event) => {\r\n\t\tif ( event.target === event.currentTarget ) onReadyToExit(event)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"fullscreen-overlay\"\r\n\t\t\t className={shouldExit ? \"ExitAnim\" : null}\r\n\t\t\t onAnimationEnd={shouldExit ? _readyToExit : null}\r\n\t\t\t style={{...style, '--bgR': bgRGBA.r ?? 255, '--bgG': bgRGBA.g ?? 255, '--bgB': bgRGBA.b ?? 255, '--bgA': bgRGBA.a ?? 0.73}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t{showCloseBtn &&\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"fullscreen-overlay-close-btn\"\r\n\t\t\t\t\tonClick={onClickClose}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t'--closeR': closeRGB.r ?? 89,\r\n\t\t\t\t\t\t'--closeG': closeRGB.g ?? 49,\r\n\t\t\t\t\t\t'--closeB': closeRGB.b ?? 109,\r\n\t\t\t\t\t\t'--closeHoverR': closeHoverRGB.r ?? 249,\r\n\t\t\t\t\t\t'--closeHoverG': closeHoverRGB.g ?? 175,\r\n\t\t\t\t\t\t'--closeHoverB': closeHoverRGB.b ?? 161\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span>×</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FullscreenOverlay\r\n","import React from \"react\";\r\nimport Dropdown from \"../Dropdown\";\r\n\r\nimport { smallPhone, bigPhone, dedao, palma } from \"../../img\";\r\nimport { Button, ButtonConfigs } from \"../../_components/Button\";\r\n\r\nimport \"./index.scss\";\r\nimport FullscreenOverlay from \"../FullscreenOverlay\";\r\n\r\n// const Phone = ({children, modifyContact, contactsTemplate, contacts, jobs, countries, onAddContact, onFinish, onMinimize}) => {\r\nconst Phone = ({\r\n  children,\r\n  modifyContact,\r\n  contactsTemplate,\r\n  names,\r\n  contacts,\r\n  jobs,\r\n  countries,\r\n  onAddContact,\r\n  onFinish,\r\n  shouldMinimize,\r\n  onMinimize,\r\n}) => {\r\n  const [state, setState] = React.useState({\r\n    maximized: false,\r\n    shouldMinimize: false,\r\n  });\r\n  // const [newContact,setNewContact] = React.useState({name: '', job: '', country: ''})\r\n\r\n  React.useEffect(() => {\r\n    setState({ ...state, contacts: contacts });\r\n    //eslint-disable-next-line\r\n  }, [contacts]);\r\n\r\n  React.useEffect(() => {\r\n    if (shouldMinimize) _shouldMinimize();\r\n    //eslint-disable-next-line\r\n  }, [shouldMinimize]);\r\n\r\n  // React.useEffect( () => {\r\n  // \tif(onMinimize) _shouldMinimize()\r\n  // \t//eslint-disable-next-line\r\n  // }, [onMinimize])\r\n\r\n  const _maximize = () => {\r\n    setState({ ...state, maximized: true });\r\n  };\r\n\r\n  const _shouldMinimize = () => {\r\n    setState({ ...state, shouldMinimize: true });\r\n  };\r\n\r\n  const _minimized = () => {\r\n    // setState({...state, shouldMinimize: false, maximized: false})\r\n    state.shouldMinimize = false;\r\n    state.maximized = false;\r\n    if (typeof onMinimize === \"function\") onMinimize();\r\n  };\r\n\r\n  // const _addContato = () => {\r\n  // \tif(onAddContact) onAddContact(newContact)\r\n  // \telse throw new Error(\"Using phone without callback: onAddContact\")\r\n  // \tsetNewContact({name: '', job: '', country: ''})\r\n  // }\r\n\r\n  const _terminou = () => {\r\n    if (typeof onFinish === \"function\") onFinish();\r\n    else console.log(\"onFinish not set or is not a function\");\r\n  };\r\n\r\n  const _contatoTemplate = (contact, key) => {\r\n    return (\r\n      <div className=\"contato\" key={key}>\r\n        <div className=\"contact-profile-pic\">\r\n          <div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n          <span>{key + 1}</span>\r\n        </div>\r\n        {contact.showName ? (\r\n          <div className=\"Nome\">\r\n            <p>Nome</p>\r\n            <div className=\"phone-text-field\">{contact.name}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.job === contactsTemplate?.find( template => template?.id === contact.id).job? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) =>\r\n              modifyContact({ ...contact, name: e.target.value })\r\n            }\r\n            label={\"Nome\"}\r\n            value={contact.name}\r\n            optionList={names}\r\n          />\r\n        )}\r\n\r\n        {contact.showJob ? (\r\n          <div className=\"Profissão\">\r\n            <p>Profissão</p>\r\n            <div className=\"phone-text-field\">{contact.job}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.job === contactsTemplate?.find( template => template?.id === contact.id).job? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) => modifyContact({ ...contact, job: e.target.value })}\r\n            label={\"Profissão\"}\r\n            value={contact.job}\r\n            optionList={jobs}\r\n          />\r\n        )}\r\n\r\n        {contact.showCountry ? (\r\n          <div className=\"País\">\r\n            <p>País</p>\r\n            <div className=\"phone-text-field\">{contact.country}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.country === contactsTemplate?.find( template => template?.id === contact.id).country? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) =>\r\n              modifyContact({ ...contact, country: e.target.value })\r\n            }\r\n            label={\"País\"}\r\n            value={contact.country}\r\n            optionList={countries}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"phone\">\r\n      <div\r\n        id=\"small-phone-wrapper\"\r\n        className={state.maximized ? \"maximized\" : null}\r\n      >\r\n        <div id=\"small-phone-inner-wrapper\">\r\n          <div id=\"small-phone-content\" onClick={_maximize}>\r\n            <div id=\"small-phone-floating-text\">\r\n              <span lang=\"pt-br\">Adicione um novo contato</span>\r\n              <span lang=\"default\">Add a new contact</span>\r\n            </div>\r\n            <img src={smallPhone} alt=\"phone-small\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {state.maximized && (\r\n        <FullscreenOverlay\r\n          bgRGBA={{ r: 249, g: 175, b: 161, a: 0.69 }}\r\n          closeHoverRGB={{ r: 255, g: 255, b: 255 }}\r\n          onClickClose={_shouldMinimize}\r\n          shouldExit={state.shouldMinimize}\r\n          onReadyToExit={_minimized}\r\n        >\r\n          <div\r\n            id=\"big-phone-wrapper\"\r\n            className={state.shouldMinimize ? \"minimizing\" : null}\r\n          >\r\n            <div id=\"big-phone-imgs\">\r\n              <img src={palma} alt=\"\" />\r\n              <img src={bigPhone} alt=\"\" />\r\n              <img src={dedao} alt=\"\" />\r\n            </div>\r\n            <div id=\"big-phone-screen-wrapper\">\r\n              <div id=\"big-phone-screen-content\">\r\n                <p>Lista de contatos</p>\r\n                <div id=\"lista-contatos\">\r\n                  {contacts?.map((contact, index) => {\r\n                    return _contatoTemplate(contact, index);\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div id=\"btn-terminei-wrapper\">\r\n              { contacts.filter(\r\n                      (contact) =>\r\n                        contact.job === \"\" ||\r\n                        contact.country === \"\" ||\r\n                        contact.name === \"\"\r\n                    ).length === 0 &&\r\n                <Button\r\n                  blink\r\n                  onClick={_terminou}\r\n                  direction={ButtonConfigs.BUTTON_DIRECTIONS.LEFT}\r\n                  colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_5}\r\n                >\r\n                  Terminei!\r\n                </Button>\r\n              }\r\n            </div>\r\n          </div>\r\n        </FullscreenOverlay>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Phone;\r\n","import React from 'react'\r\n\r\nconst Menu = ({ buttonList, onButtonClick }) => {\r\n  return (\r\n    <div id='Menu'>\r\n      <div id=\"menu-options\">\r\n        <span style={{\r\n          color: \"#FFF\",\r\n          backgroundColor: \"transparent !important\",\r\n          fontSize: \"3rem\"\r\n        }}></span>\r\n        {buttonList.map((button, index) =>\r\n          <button key={index} onClick={() => { onButtonClick(button) }} disabled={button.hasOwnProperty('active') ? !button.active : false}><span>{button.question}</span></button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst DialogCharacter = ({character, feeling, ...props}) => {\r\n  let characterImg = \"\"\r\n\r\n  if( !(character == null) ) {\r\n    if( character.characterAssets.length > 0 ) {\r\n      characterImg = character.characterAssets\r\n        .find(asset => asset.bodyPart === 'upperBody' && asset.type === feeling)\r\n        .image.url\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id='CharacterPortrait' {...props}>\r\n      {<img src={characterImg} alt=\"Character Portrait\" />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogCharacter\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst DialogHistory = ({dialogHistory}) => {\r\n\treturn(\r\n\t\t<div id='dialog-history-wrapper'>\r\n\t\t\t<div id='dialog-history-content'>\r\n\t\t\t\t{dialogHistory.map((dialog, index)=>\r\n\t\t\t\t\t<div className={\"mensagem\" + (dialog.speaker==='player'? 0 : 1) } key={index}>{dialog.text}</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogHistory\r\n","export default __webpack_public_path__ + \"static/media/writerLetter3.66919f0c.flac\";","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n/**\r\n * Componente para escrita de texto caracter a caracter\r\n *\r\n * @param  {Object} props\r\n * @param  {string} props.text\t\t\t\tTexto a ser escrito caracter por caracter\r\n * @param  {number} props.characterTime\t\tDelay, em milissegundos, entre cada caracter\r\n * @param  {() => void} props.onWritten\t\tCallback para quando terminou de escrever\r\n * @param  {number} props.afterWrittenTime\tDelay, em milissegundos, antes de avisar que terminou de escrever\r\n */\r\n\r\nimport sound from '../../sounds/writerLetter3.flac'\r\nimport parser from 'html-react-parser';\r\nimport {parse as mkd_parser} from 'marked';\r\n\r\nconst JSXindexer = (jsx, index) => {\r\n\tif( typeof(jsx) === 'string' ) {\r\n\t\tlet result = jsx.substring(0, index);\r\n\t\treturn [result, result.length];\r\n\t} else if(typeof(jsx) === 'object' && jsx.length > 1) {\r\n\t\tlet used = 0;\r\n\t\tlet result = \"\";\r\n\t\tfor( let i = 0; i < jsx.length && used < index; i++) {\r\n\t\t\tlet [tempResult, tempUsed] = JSXindexer(jsx[i], index-used);\r\n\t\t\tresult += tempResult;\r\n\t\t\tused += tempUsed;\r\n\t\t}\r\n\t\treturn [result, used];\r\n\t} else if(typeof(jsx) === 'object') {\r\n\t\tlet children = jsx.props.children;\r\n\t\tlet [result, used] = JSXindexer(children, index);\r\n\t\treturn [ `<${jsx.type}>${result}</${jsx.type}>`, used];\r\n\t}\r\n}\r\n\r\nconst Writer = ({text, characterTime, onWritten, afterWrittenTime, ...props}) => {\r\n\tconst [state, setState] = React.useState({text: text, index: 0})\r\n\tconst volume = useSelector( state => state.music.volume)\r\n\r\n\tReact.useEffect( () => {\r\n\tif( text !== state.text )\r\n\t\tsetState( () => ({text: text, index: 0}))\r\n\t}, [text, state.text] )\r\n\r\n\tReact.useEffect( () => {\r\n\t\tlet timeoutID\r\n\t\tif( state.index < state.text.length ) {\r\n\t\t\ttimeoutID = setTimeout( () => {\r\n\t\t\t\tlet audio = new Audio(sound)\r\n\t\t\t\taudio.volume = volume / 1000\r\n\t\t\t\taudio.play()\r\n\t\t\t\tsetState({...state, index: state.index + 1})\r\n\t\t\t}, characterTime)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(onWritten){\r\n\t\t\t\tif(afterWrittenTime > 0)\r\n\t\t\t\t\ttimeoutID = setTimeout( onWritten, afterWrittenTime )\r\n\t\t\t\telse\r\n\t\t\t\t\tonWritten()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn () => clearTimeout(timeoutID)\r\n\t// eslint-disable-next-line\r\n\t}, [state.index])\r\n\r\n\treturn(\r\n\t\t<div id=\"Writer\" {...props}>\r\n\t\t\t{/* { state.text.substring(0, state.index) } */}\r\n\t\t\t{ parser(JSXindexer(parser(mkd_parser(state.text)), state.index)[0]) }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Writer\r\n","import Menu from '../Menu'\r\nimport React from 'react'\r\nimport DialogCharacter from '../DialogCharacter'\r\nimport DialogHistory from '../DialogHistory'\r\nimport FullscreenOverlay from '../FullscreenOverlay'\r\nimport Writer from '../Writer'\r\n\r\nimport './index.scss'\r\n\r\n/**\r\n * Elemento para renderização de uma conversa com algum NPC, estilo graphic novel.\r\n * \r\n * @param  {Object} props\r\n * @param  {Object | Object[]} [props.children]\r\n *\t\t\tElementos extras a serem renderizados no mesmo contexto\r\n * @param  {boolean} [props.shouldExit]\r\n *\t\t\tDevo fechar? Se verdadeiro, inicia animação de fechamento\r\n * @param  {boolean} [props.showDialogHistory]\r\n *\t\t\tO histórico da conversa deve ser mostrado?\r\n * @param  {(dialogHistory)=>void} [props.onClearDialogHistory]\r\n *\t\t\tEnquanto este campo não for null, limparei meu histórico e chamarei esse callback a cada limpeza\r\n * @param  {boolean} [props.callAfterWritterForEveryMsg]\r\n *\t\t\tSe verdadeiro, chamarei a callback afterWritter ao final de cada mensagem, mesmo no caso de múltiplas mensagens consecutivas\r\n * @param  {number} [props.msPerCharacter]\r\n *\t\t\tDelay, em milissegundos, entre cada caracter da exibição da resposta\r\n * @param  {number} [props.waitAfterWritten]\r\n *\t\t\tDelay, em milissegundos, ao final de cada mensagem escrita\r\n * @param  { {text:string, speaker?: string}[]} [props.prevDialogHistory]\r\n *\t\t\tHistórico inicial da conversa\r\n * @param  {string | string[]} [props.charPreSpeech]\r\n *\t\t\tLista de falas a serem apresentadas antes de se dar a opção de escolha ao jogador\r\n * @param  {{question:string, answers:string[]}[]} props.convOptions\r\n *\t\t\tLista de opções para o jogador escolher (com suas respostas)\r\n * @param  {Object} [props.currentChar]\r\n *\t\t\tInfo do personagem a ser renderizado\r\n * @param  {Object} [props.charFeeling]\r\n *\t\t\tInfo de qual emoção o personagem deve ter\r\n * @param  {() => void} [props.afterWriter]\r\n *\t\t\tCallback para quando as mensagems terminarem de ser enviadas\r\n * @param  {(dialogHistory:{text:string, speaker?:string}[]) => void} [props.onExited]\r\n *\t\t\tCallback para quando se sair do diálogo. Envia todo o histórico de mensagens enviadas até o momento\r\n * @param  {(convoChoosen) => void} [props.onConvoChoiceMade]\r\n *\t\t\tCallback sobre qual alternativa foi escolhida. Envia a convOption escolhida\r\n */\r\nconst Conversa = ({\r\n\t\tchildren,\r\n\t\tshouldExit = false,\r\n\t\tshowDialogHistory = true,\r\n\t\tonClearDialogHistory = null,\r\n\t\tcallAfterWritterForEveryMsg = false,\r\n\t\tmsPerCharacter = 50,\r\n\t\twaitAfterWritten = 2000,\r\n\t\tprevDialogHistory = [],\r\n\t\tcharPreSpeech = null,\r\n\t\tconvOptions = [],\r\n\t\tcurrentChar = null,\r\n\t\tcharFeeling = null,\r\n\t\tafterWriter = () => {},\r\n\t\tonExited = (dialogHistory) => {},\r\n\t\tonConvoChoiceMade = (convoChoosen) => {},\r\n\t}) => {\r\n\r\n\tconst [state, setState] = React.useState({\r\n\t\tquerFechar: shouldExit,\r\n\t\tanswers: null,\r\n\t\tdialogHistory: prevDialogHistory\r\n\t});\r\n\r\n\t// if( charPreSpeech !== null && charPreSpeech.length > 0 ) {\r\n\t// \tstate.currentAnswer = 0\r\n\t// \tstate.answers = typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t// \tcharPreSpeech = null\r\n\t// }\r\n\r\n\t// * UNDEFINED BEHAVIOR caso alguém mude o charPreSpeech desse componente enquanto o writer faz algo\r\n\tReact.useEffect( () => {\r\n\t\tif( charPreSpeech !== null && charPreSpeech.length > 0 ) {\r\n\t\t\t// state.currentAnswer = 0\r\n\t\t\t// state.answers = typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t\t\t// console.log('effect', state.answers)\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentAnswer: 0,\r\n\t\t\t\tanswers: typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t\t\t})\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [charPreSpeech])\r\n\t\r\n\t// * UNDEFINED BEHAVIOR caso alguém mande limpar enquanto o writer faz algo\r\n\tReact.useEffect(() => {\r\n\t\tif( onClearDialogHistory ) {\r\n\t\t\tonClearDialogHistory(state.dialogHistory)\r\n\t\t\tstate.dialogHistory = []\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [onClearDialogHistory])\r\n\t\r\n\tReact.useEffect( () => {\r\n\t\tsetState({...state, querFechar: shouldExit})\r\n\t\t// eslint-disable-next-line\r\n\t}, [shouldExit])\r\n\r\n\tconst _querFechar = () => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tquerFechar: true\r\n\t\t})\r\n\t}\r\n\r\n\tconst _podeFechar = () => {\r\n\t\tonExited(state.dialogHistory)\r\n\t}\r\n\r\n\tconst _afterWriter = () => {\r\n\t\tlet updateState = {}\r\n\t\tif( state.currentAnswer < state.answers.length - 1 ) {\r\n\t\t\tupdateState = {\r\n\t\t\t\tcurrentAnswer: state.currentAnswer + 1\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tupdateState = {\r\n\t\t\t\tcurrentAnswer: null,\r\n\t\t\t\tanswers: null\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t...updateState,\r\n\t\t\tdialogHistory: [\r\n\t\t\t\t...state.dialogHistory,\r\n\t\t\t\t{text: state.answers[state.currentAnswer]}\r\n\t\t\t],\r\n\t\t})\r\n\r\n\t\tif( callAfterWritterForEveryMsg || state.currentAnswer >= state.answers.length - 1 )\r\n\t\t\tafterWriter()\r\n\t}\r\n\r\n\tconst _convoChoiceClick = (convoChoosen) => {\r\n\r\n\t\tif( typeof(convoChoosen.answers) === \"string\" ) convoChoosen.answers = [convoChoosen.answers]\r\n\t\tsetState( {\r\n\t\t\t...state,\r\n\t\t\tdialogHistory: [\r\n\t\t\t\t...state.dialogHistory,\r\n\t\t\t\t{text: convoChoosen.question, speaker: 'player'}\r\n\t\t\t],\r\n\t\t\tanswers: convoChoosen.answers,\r\n\t\t\tcurrentAnswer: 0\r\n\t\t})\r\n\r\n\t\tonConvoChoiceMade(convoChoosen)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FullscreenOverlay shouldExit={state.querFechar} onClickClose={_querFechar} onReadyToExit={_podeFechar}>\r\n\t\t\t<div id=\"dialog-interact\" className={state.querFechar ? \"ExitAnim\" : null}>\r\n\t\t\t\t<div id=\"dialogos\">\r\n\t\t\t\t\t{showDialogHistory ? <DialogHistory dialogHistory={state.dialogHistory}/> : <div style={{flexGrow: '1'}} />}\r\n\t\t\t\t\t<div id='dialog-box' className={state.answers ? \"alternative\" : \"\"}>\r\n\t\t\t\t\t\t{state.answers ?\r\n\t\t\t\t\t\t\t<Writer text={state.answers[state.currentAnswer]}\r\n\t\t\t\t\t\t\t\tonWritten={_afterWriter}\r\n\t\t\t\t\t\t\t\tafterWrittenTime={waitAfterWritten}\r\n\t\t\t\t\t\t\t\tcharacterTime={msPerCharacter}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<Menu buttonList={convOptions}\r\n\t\t\t\t\t\t\t\tonButtonClick={_convoChoiceClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<DialogCharacter character={currentChar} feeling={charFeeling}/>\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</FullscreenOverlay>\r\n\t)\r\n}\r\n\r\nexport default Conversa\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Result from \"../Game2/components/Result\";\r\nimport RoomSelect from \"../../_components/RoomSelect\";\r\nimport Sala from \"../../_components/Sala\";\r\nimport Character from \"../../_components/Character\";\r\nimport initialState from \"./initialState.js\";\r\nimport initialDialog from \"./initialDialog.js\";\r\nimport stub from \"./stub.js\";\r\nimport Phone from \"../../_components/Phone\";\r\nimport Conversa from \"../../_components/Conversa\";\r\nimport FullscreenOverlay from \"../../_components/FullscreenOverlay\";\r\nimport { headerConstants } from \"../../_constants\";\r\nimport { bigPhone, dedao, palma, blobLowScore, blobLaranja } from \"../../img\";\r\n\r\nimport \"./index.scss\";\r\nimport \"./feedback-screen.scss\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { ButtonConfigs, Iniciar, Voltar } from \"../../_components/Button\";\r\n\r\nconst Game1 = (props) => {\r\n  const [state, setState] = React.useState(initialState());\r\n\r\n  const { play_sessionsActions } = apiActions;\r\n  const id = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useSelector((state) => state.missions.loading);\r\n  let error = useSelector((state) => state.missions.error);\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  const missionData = mission ? mission.missionData : null;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const currentPlaySession = useSelector((state) =>\r\n    state.play_sessions\r\n      ? state.play_sessions.items[state.play_sessions.items.length - 1]\r\n      : {}\r\n  );\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  // React.useEffect(()=>{\r\n  // \tif(mission && Object.keys(actions).length !== 0 && !missionData){\r\n  // \t\tdispatch(actions['missionData'].find({mission: mission.id}))\r\n  // \t}\r\n  // })\r\n\r\n  React.useEffect(() => {\r\n    if (mission)\r\n      dispatch(\r\n        musicActions.set(\r\n          mission.backgroundAudio ? mission.backgroundAudio.url : \"\"\r\n        )\r\n      );\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //Track playerActions\r\n  React.useEffect(() => {\r\n    if ((mission && !mission.trackPlayerInput) || !currentPlaySession) return;\r\n\r\n    const getClickedObject = (e) => {\r\n      dispatch(\r\n        play_sessionsActions.update({\r\n          id: currentPlaySession.id,\r\n          data: {\r\n            actions: [\r\n              ...currentPlaySession.data.actions,\r\n              {\r\n                tag: e.target.nodeName,\r\n                src: e.target.src,\r\n                alt: e.target.alt,\r\n                className: e.target.className,\r\n                class: e.target.class,\r\n                id: e.target.id,\r\n                innerHTML: e.target.innerHTML.includes(\"<div\")\r\n                  ? null\r\n                  : e.target.innerHTML,\r\n                clickTime: new Date(),\r\n              },\r\n            ],\r\n          },\r\n        })\r\n      );\r\n    };\r\n    document.addEventListener(\"mousedown\", getClickedObject);\r\n\r\n    setState((s) => {\r\n      return { ...s, currentPlaySession, getClickedObject };\r\n    });\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", getClickedObject);\r\n    };\r\n  }, [\r\n    dispatch,\r\n    currentPlaySession,\r\n    play_sessionsActions,\r\n    state.tracking,\r\n    mission,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    if (id && !missionData)\r\n      dispatch(gameActions.getById(\"missions\", props.match.params.id));\r\n    if (missionData) {\r\n      let data = {};\r\n\r\n      //distribute characters in locations\r\n      if (state.locations.length === 0) {\r\n        // data.locations = [...mission.locations]\r\n        data.locations = missionData.locations;\r\n      }\r\n\r\n      //list of all available jobs\r\n      if (state.jobs.length === 0) {\r\n        data.jobs = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.job))\r\n                      acc.push(missionCharacter.character.job);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      //list of all available countries\r\n      if (state.countries.length === 0) {\r\n        data.countries = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.country))\r\n                      acc.push(missionCharacter.character.country);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      if (state.names.length === 0) {\r\n        data.names = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.name))\r\n                      acc.push(missionCharacter.character.name);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      //resume characters as contacts\r\n      if (state.contactsTemplate.length === 0) {\r\n        //create full contact template\r\n        data.contactsTemplate = missionData.locations\r\n          .map((location) => {\r\n            return location.missionCharacters.map((missionCharacter) => {\r\n              return {\r\n                id: missionCharacter.character.id,\r\n                name: missionCharacter.character.name,\r\n                country: missionCharacter.character.country,\r\n                job: missionCharacter.character.job,\r\n                //looks for mission configuration\r\n                showJob: missionCharacter.showJob,\r\n                showCountry: missionCharacter.showCountry,\r\n                showName: missionCharacter.showName,\r\n                hasEmptyField: !(\r\n                  missionCharacter.showJob &&\r\n                  missionCharacter.showCountry &&\r\n                  missionCharacter.showName\r\n                ),\r\n              };\r\n            });\r\n          })\r\n          .flat();\r\n\r\n        data.totalFields = 0;\r\n        //create contact state shown to/ manipulated by to player\r\n        data.contactsAtSession = data.contactsTemplate.map((contact) => {\r\n          data.totalFields +=\r\n            (!contact.showJob ? 1 : 0) +\r\n            (!contact.showCountry ? 1 : 0) +\r\n            (!contact.showName ? 1 : 0);\r\n\r\n          return {\r\n            ...contact,\r\n            name: contact.showName ? contact.name : \"\",\r\n            job: contact.showJob ? contact.job : \"\",\r\n            country: contact.showCountry ? contact.country : \"\",\r\n          };\r\n        });\r\n      }\r\n\r\n      if (Object.keys(data).length > 0)\r\n        setState((state) => {\r\n          return { ...state, ...data };\r\n        });\r\n    }\r\n  }, [\r\n    dispatch,\r\n    id,\r\n    mission,\r\n    props.match.params.id,\r\n    state.locations.length,\r\n    state.contactsTemplate.length,\r\n    state.countries.length,\r\n    state.jobs.length,\r\n    state.names.length,\r\n    missionData,\r\n  ]);\r\n\r\n  if (error) {\r\n    error = null;\r\n    mission = stub;\r\n  }\r\n\r\n  const onStartGame = (e) => {\r\n    if (state.tracking) {\r\n      dispatch(\r\n        play_sessionsActions.create({\r\n          user: userId,\r\n          mission: mission.id,\r\n          data: { actions: [] },\r\n        })\r\n      );\r\n    }\r\n    setState({ ...state, scene: \"ROOM\" });\r\n  };\r\n\r\n  const setCurrentChar = (character) => () => {\r\n    // if (convOptions.length === 0) console.log(\"Couldn't find any questions to ask currentChar\")\r\n\r\n    if (!state.dialogs.hasOwnProperty(character.character.name)) {\r\n      let convOptions = character.answers.reduce((acc, convOption) => {\r\n        let option = {\r\n          ...convOption,\r\n          ...convOption.question,\r\n          answers: convOption.answer,\r\n          active: true,\r\n        };\r\n        delete option.answer;\r\n        return [...acc, option];\r\n      }, []);\r\n\r\n      setState({\r\n        ...state,\r\n        currentChar: character.character,\r\n        convOptions: convOptions,\r\n        dialogs: {\r\n          ...state.dialogs,\r\n          [character.character.name]: [],\r\n        },\r\n      });\r\n    } else {\r\n      let convOptions = [];\r\n      if (\r\n        state.questionsAsked <\r\n        state.locations[state.currentLocationIndex].maxQuestions\r\n      ) {\r\n        convOptions = character.answers.reduce((acc, convOption) => {\r\n          let option = {\r\n            ...convOption,\r\n            ...convOption.question,\r\n            answers: convOption.answer,\r\n            active: state.dialogs[character.character.name].find(\r\n              (dialog) => dialog.text === convOption.question.question\r\n            )\r\n              ? false\r\n              : true,\r\n          };\r\n          delete option.answer;\r\n          return [...acc, option];\r\n        }, []);\r\n      } else {\r\n        convOptions = character.answers.reduce((acc, convOption) => {\r\n          let option = {\r\n            ...convOption,\r\n            ...convOption.question,\r\n            answers: convOption.answer,\r\n            active: false,\r\n          };\r\n          delete option.answer;\r\n          return [...acc, option];\r\n        }, []);\r\n      }\r\n\r\n      setState({\r\n        ...state,\r\n        currentChar: character.character,\r\n        convOptions: convOptions,\r\n      });\r\n    }\r\n  };\r\n\r\n  const afterWriter = () => {\r\n    let updatedState = {};\r\n    if (\r\n      state.questionsAsked ===\r\n        state.locations[state.currentLocationIndex].maxQuestions &&\r\n      state.preSpeech.length === 0\r\n    ) {\r\n      updatedState.preSpeech = [\r\n        \"Espero que isso tenha sido tudo. Tenho que ir agora...\",\r\n      ];\r\n      updatedState.convOptions = [\r\n        { question: \"Ah tá. Tchau!\", answers: \"Tchau!\", close: true },\r\n      ];\r\n    } else if (\r\n      state.questionsAsked >\r\n      state.locations[state.currentLocationIndex].maxQuestions\r\n    ) {\r\n      updatedState.convOptions = state.convOptions.map((convOption) => {\r\n        return { ...convOption, active: false };\r\n      }, []);\r\n    }\r\n    if (state.close) {\r\n      updatedState.shouldCloseConvo = true;\r\n      updatedState.close = false;\r\n    }\r\n\r\n    setState({ ...state, ...updatedState });\r\n  };\r\n\r\n  const onMenuButtonClick = (answer) => {\r\n    //\r\n    //\tAplicar lógica adicional de click nos botões do menu\r\n    //\r\n    let updatedState = {};\r\n\r\n    if (state.dialogs[state.currentChar.name].length) {\r\n      updatedState.questionsAsked = state.questionsAsked + 1;\r\n\r\n      if (\r\n        updatedState.questionsAsked <\r\n        state.locations[state.currentLocationIndex].maxQuestions\r\n      ) {\r\n        updatedState.convOptions = state.convOptions.map((convOption) => {\r\n          if (convOption.question === answer.question)\r\n            return { ...convOption, active: false };\r\n\r\n          return convOption;\r\n        }, []);\r\n      } else {\r\n        updatedState.preSpeech = [];\r\n        updatedState.convOptions = [];\r\n      }\r\n    }\r\n\r\n    if (answer.close) updatedState.close = true;\r\n\r\n    setState({\r\n      ...state,\r\n      ...updatedState,\r\n      dialogs: {\r\n        ...state.dialogs,\r\n        [state.currentChar.name]: [\r\n          ...state.dialogs[state.currentChar.name],\r\n          {\r\n            speaker: \"player\",\r\n            text: answer.question,\r\n          },\r\n          {\r\n            text: answer.answers[0],\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n\r\n  const modifyContact = (contact) => {\r\n    let index = state.contactsAtSession.indexOf(\r\n      state.contactsAtSession.find((c) => c.id === contact.id)\r\n    );\r\n    // console.log('changing:', contact)\r\n    setState({\r\n      ...state,\r\n      contactsAtSession: [\r\n        ...state.contactsAtSession.slice(0, index),\r\n        contact,\r\n        ...state.contactsAtSession.slice(index + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setState({ ...state, currentChar: null, shouldCloseConvo: false });\r\n  };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(), hasPlayed: true });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const onPhoneFinish = () => {\r\n    let wrongContacts = 0;\r\n    state.locations[state.currentLocationIndex].missionCharacters.forEach(\r\n      (missionContact, index) => {\r\n        let answer = state.contactsAtSession.find(\r\n          (contactAtSession) =>\r\n            contactAtSession.id === missionContact.character.id\r\n        );\r\n        let gabarito = state.contactsTemplate.find(\r\n          (contactTemplate) =>\r\n            contactTemplate.id === missionContact.character.id\r\n        );\r\n        if (\r\n          answer.job !== gabarito.job ||\r\n          answer.country !== gabarito.country ||\r\n          answer.name !== gabarito.name\r\n        )\r\n          wrongContacts++;\r\n      }\r\n    );\r\n    setState({ ...state, changeRoomPopUp: true, wrongContacts: wrongContacts });\r\n  };\r\n\r\n  const onGoNextRoom = () => {\r\n    if (state.currentLocationIndex + 1 < state.locations.length)\r\n      setState({\r\n        ...state,\r\n        shouldCloseDialog: true,\r\n        currentLocationIndex: state.currentLocationIndex + 1,\r\n        shouldMinimize: true,\r\n        questionsAsked: 0,\r\n        dialogs: {},\r\n      });\r\n    else {\r\n      // CALCULATE RESULT WITH WRONG ITEM AND FIND THE MATRIC THE USER MISSED THE MOST\r\n      let result = 0;\r\n      let mainError = missionData.metrics.map((metric) => {\r\n        return {\r\n          metric: metric.name,\r\n          metricTranslate: metric.nameTranslate.find(\r\n            (translate) => translate.language.id === lang\r\n          ),\r\n          count: 0,\r\n        };\r\n      });\r\n      state.contactsAtSession.forEach((contact) => {\r\n        let gabarito = state.contactsTemplate.find((t) => t.id === contact.id);\r\n\r\n        if (gabarito.hasEmptyField) {\r\n          result +=\r\n            (contact.job === gabarito.job && !gabarito.showJob ? 1 : 0) +\r\n            (contact.country === gabarito.country && !gabarito.showCountry\r\n              ? 1\r\n              : 0) +\r\n            (contact.name === gabarito.name && !gabarito.showName ? 1 : 0);\r\n\r\n          mainError.forEach((metric) => {\r\n            if (metric.name === \"Profissão\") {\r\n              metric.count +=\r\n                contact.job !== gabarito.job && !gabarito.showJob ? 1 : 0;\r\n            } else if (metric.name === \"País\") {\r\n              metric.count +=\r\n                contact.country !== gabarito.country && !gabarito.showCountry\r\n                  ? 1\r\n                  : 0;\r\n            } else if (metric.name === \"Nome\") {\r\n              metric.count +=\r\n                contact.name !== gabarito.name && !gabarito.showName ? 1 : 0;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      const score = (result / state.totalFields).toFixed(2) * 100;\r\n\r\n      setState({\r\n        ...state,\r\n        scene: \"ENDGAME\",\r\n        result,\r\n        score,\r\n        mainError: mainError.reduce((max, obj) =>\r\n          max.count > obj.count ? max : obj\r\n        ),\r\n        feedback: missionData.feedbacks.find(\r\n          (feedback) => feedback.minScore <= score && score <= feedback.maxScore\r\n        ),\r\n      });\r\n\r\n      dispatch(\r\n        gameActions.create(\"results\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n          score: score,\r\n          won: score > 80,\r\n        })\r\n      );\r\n\r\n      dispatch(\r\n        headerActions.setAll(\r\n          mission.name,\r\n          mission.nameTranslate.find((name) => {\r\n            return name.language.id === lang;\r\n          }).name\r\n        )\r\n      );\r\n\r\n      dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"game1-wrapper\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        mission && (\r\n          <div id=\"game1-content\">\r\n            {/* <div id=\"input-tracker\">\r\n              TrackInput:{\" \"}\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={(e) => {\r\n                  setState({ ...state, tracking: e.target.checked });\r\n                }}\r\n              />\r\n            </div> */}\r\n            {(function renderScene() {\r\n              switch (state.scene) {\r\n                case \"INIT\":\r\n                  return (\r\n                    <Init\r\n                      icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                      name={mission.name}\r\n                      description={mission.description}\r\n                      nameTranslate={\r\n                        mission.nameTranslate.find((name) => {\r\n                          return name.language.id === lang;\r\n                        }).name\r\n                      }\r\n                      descriptionTranslate={\r\n                        mission.descriptionTranslate.find((description) => {\r\n                          return description.language.id === lang;\r\n                        }).description\r\n                      }\r\n                      onStart={onStartGame}\r\n                      onBack={() => setState({ ...state, back: true })}\r\n                      ready={state.locations.length > 0 ? true : false}\r\n                    />\r\n                  );\r\n                case \"ROOM\":\r\n                  return (\r\n                    <div id=\"room-itself\">\r\n                      <RoomSelect\r\n                        value={state.currentLocationIndex}\r\n                        buttonList={state.locations.map(\r\n                          (location) => location.location.name\r\n                        )}\r\n                        showInBtnFormat={false}\r\n                      />\r\n                      <Sala\r\n                        roomData={\r\n                          state.locations[state.currentLocationIndex].location\r\n                        }\r\n                        key={state.currentLocationIndex}\r\n                      >\r\n                        {state.locations[\r\n                          state.currentLocationIndex\r\n                        ].missionCharacters.map((character, index) => (\r\n                          <Character\r\n                            key={index}\r\n                            zDepth={character.zDepth}\r\n                            character={character.character}\r\n                            onClick={setCurrentChar(character)}\r\n                          />\r\n                        ))}\r\n                      </Sala>\r\n                      <Phone\r\n                        contacts={state.contactsAtSession.filter((contact) =>\r\n                          state.locations[\r\n                            state.currentLocationIndex\r\n                          ].missionCharacters.find(\r\n                            (character) => character.character.id === contact.id\r\n                          )\r\n                        )}\r\n                        modifyContact={modifyContact}\r\n                        contactsTemplate={state.contactsTemplate}\r\n                        names={state.names}\r\n                        jobs={state.jobs}\r\n                        countries={state.countries}\r\n                        onFinish={onPhoneFinish}\r\n                        onMinimize={() =>\r\n                          setState({ ...state, shouldMinimize: false })\r\n                        }\r\n                        shouldMinimize={state.shouldMinimize}\r\n                      />\r\n                      {state.currentChar && (\r\n                        <Conversa\r\n                          shouldExit={state.shouldCloseConvo}\r\n                          prevDialogHistory={\r\n                            state.dialogs[state.currentChar.name]\r\n                          }\r\n                          onClearDialogHistory={state.refreshDialog}\r\n                          charPreSpeech={state.preSpeech}\r\n                          convOptions={\r\n                            state.dialogs[state.currentChar.name].length\r\n                              ? state.convOptions\r\n                              : initialDialog\r\n                          }\r\n                          currentChar={state.currentChar}\r\n                          charFeeling={state.characterFeeling}\r\n                          afterWriter={afterWriter}\r\n                          onExited={closeDialog}\r\n                          onConvoChoiceMade={onMenuButtonClick}\r\n                        ></Conversa>\r\n                      )}\r\n                      {state.changeRoomPopUp && (\r\n                        <FullscreenOverlay\r\n                          showCloseBtn={false}\r\n                          shouldExit={state.shouldCloseDialog}\r\n                          onReadyToExit={() => {\r\n                            setState({\r\n                              ...state,\r\n                              shouldCloseDialog: false,\r\n                              changeRoomPopUp: false,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <div className=\"popup-wrapper\">\r\n                            <div className=\"popup-content\">\r\n                              <span>Are you sure?</span>\r\n                              <div className=\"popup-texts\">\r\n                                {state.wrongContacts > 0 ? (\r\n                                  <div className=\"next-room-text\">\r\n                                    <span lang=\"pt-br\">\r\n                                      {`${state.wrongContacts}` +\r\n                                        missionData.nextRoomTextWrong}\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      {`${state.wrongContacts}` +\r\n                                        missionData.nextRoomTextWrongTranslate.find(\r\n                                          (translation) => {\r\n                                            return (\r\n                                              translation.language.id === lang\r\n                                            );\r\n                                          }\r\n                                        ).text}\r\n                                    </span>\r\n                                  </div>\r\n                                ) : (\r\n                                  <div className=\"next-room-text\">\r\n                                    <span lang=\"pt-br\">\r\n                                      {missionData.nextRoomTextRight}\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      {\r\n                                        missionData.nextRoomTextRightTranslate.find(\r\n                                          (translation) => {\r\n                                            return (\r\n                                              translation.language.id === lang\r\n                                            );\r\n                                          }\r\n                                        ).text\r\n                                      }\r\n                                    </span>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              <div id=\"popup-btns\">\r\n                                <Voltar\r\n                                  label={\r\n                                    state.wrongContacts > 0\r\n                                      ? \"Keep trying\"\r\n                                      : \"Not yet\"\r\n                                  }\r\n                                  onClick={() =>\r\n                                    setState((s) => {\r\n                                      return { ...s, shouldCloseDialog: true };\r\n                                    })\r\n                                  }\r\n                                  colorScheme={\r\n                                    ButtonConfigs.COLOR_SCHEMES.COR_3\r\n                                  }\r\n                                />\r\n                                <Iniciar\r\n                                  label={\r\n                                    state.wrongContacts > 0\r\n                                      ? \"Continue anyway\"\r\n                                      : \"Let's go\"\r\n                                  }\r\n                                  onClick={onGoNextRoom}\r\n                                  colorScheme={\r\n                                    ButtonConfigs.COLOR_SCHEMES.COR_2\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </FullscreenOverlay>\r\n                      )}\r\n                      <div\r\n                        id=\"question-counter\"\r\n                        className={\r\n                          state.questionsAsked >=\r\n                          state.locations[state.currentLocationIndex]\r\n                            .maxQuestions\r\n                            ? \"max\"\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <div id=\"question-counter-info\">\r\n                          <div>Você já fez</div>\r\n                          <div className=\"numbers\">\r\n                            <span>\r\n                              {Math.min(\r\n                                state.questionsAsked,\r\n                                state.locations[state.currentLocationIndex]\r\n                                  .maxQuestions\r\n                              )}\r\n                            </span>\r\n                            /\r\n                            {\r\n                              state.locations[state.currentLocationIndex]\r\n                                .maxQuestions\r\n                            }\r\n                          </div>\r\n                          <div>perguntas</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                case \"ENDGAME\":\r\n                  return (\r\n                    <div id=\"feedback-endGame-screen\">\r\n                      {state.score > 30 ? (\r\n                        <div id=\"feedback-end-panels\">\r\n                          <div id=\"feedback-painel-icon\">\r\n                            <img src={state.feedback.topAsset.url} alt=\"\" />\r\n                          </div>\r\n                          <div id=\"feedback-endgame-messages\">\r\n                            <div\r\n                              className=\"feedback-painel\"\r\n                              id=\"feedback-painel-1-win\"\r\n                            >\r\n                              <div className=\"feedback-painel-1-wrapper\">\r\n                                <div className=\"feedback-painel-1-content\">\r\n                                  <span lang=\"pt-br\">\r\n                                    {\" \"}\r\n                                    {state.feedback.text.replace(\r\n                                      \"xxxx\",\r\n                                      state.score\r\n                                    )}\r\n                                  </span>\r\n                                  <span lang=\"en\">\r\n                                    {state.feedback.textTranslate\r\n                                      .find((text) => text.language.id === lang)\r\n                                      .text.replace(\"xxxx\", state.score)}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                              {state.score < 100 && (\r\n                                <a\r\n                                  href=\"#feedback-painel-2\"\r\n                                  className=\"next-btn\"\r\n                                >\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              )}\r\n                            </div>\r\n                            {state.score < 100 && (\r\n                              <div\r\n                                className=\"feedback-painel\"\r\n                                id=\"feedback-painel-2\"\r\n                              >\r\n                                <div className=\"feedback-painel-2-wrapper\">\r\n                                  <div\r\n                                    className=\"feedback-painel-2-content\"\r\n                                    style={{\r\n                                      backgroundImage:\r\n                                        \"url(\" + blobLaranja + \")\",\r\n                                    }}\r\n                                  >\r\n                                    <div>\r\n                                      <span>{state.result}</span>/\r\n                                      <span>{state.totalFields}</span>\r\n                                    </div>\r\n                                    <div>correct items</div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"feedback-painel-2-wrapper\">\r\n                                  <div className=\"feedback-painel-2-content\">\r\n                                    <div>\r\n                                      <p>\r\n                                        You've had a hard time remembering your\r\n                                        friend's{\" \"}\r\n                                        {state.mainError.metricTranslate.text.toLowerCase()}\r\n                                        . I hope they don't mind.\r\n                                      </p>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <a\r\n                                  href=\"#feedback-painel-1-win\"\r\n                                  className=\"prev-btn\"\r\n                                >\r\n                                  {\"❮\"}\r\n                                </a>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div id=\"feedback-endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div id=\"feedback-endGame-wrong-wrapper\">\r\n                          <div>\r\n                            <div\r\n                              className=\"feedback-painel feedback-panel-1-defeat\"\r\n                              id=\"feedback-painel-1\"\r\n                            >\r\n                              <div id=\"feedback-painel-icon-derrota\">\r\n                                <img src={state.feedback.topAsset.url} alt=\"\" />\r\n                              </div>\r\n                              <span lang=\"pt-br\">\r\n                                {state.feedback.text.replace(\r\n                                  \"xxxx\",\r\n                                  state.score\r\n                                )}\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                {state.feedback.textTranslate\r\n                                  .find((text) => text.language.id === lang)\r\n                                  .text.replace(\"xxxx\", state.score)}\r\n                              </span>\r\n                            </div>\r\n                            <div\r\n                              className=\"feedback-painel\"\r\n                              id=\"feedback-painel-3\"\r\n                              style={{\r\n                                backgroundImage: \"url(\" + blobLowScore + \")\",\r\n                              }}\r\n                            >\r\n                              <div className=\"feedback-painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"feedback-painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.result}</span>/\r\n                                    <span>{state.totalFields}</span>\r\n                                  </div>\r\n                                  <div>correct</div>\r\n                                  <div>items</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"feedback-painel-2-wrapper\">\r\n                                <div className=\"feedback-painel-2-content\">\r\n                                  <div>\r\n                                    <p lang=\"pt-br\">\r\n                                      Lembrar o(a){\" \"}\r\n                                      {state.mainError.metric.toLowerCase()} dos\r\n                                      seus amigos foi o mais difícil pra você.\r\n                                      Espero que eles não se importem.\r\n                                    </p>\r\n                                    <p lang=\"en\">\r\n                                      You've had a hard time remembering your\r\n                                      friend's{\" \"}\r\n                                      {state.mainError.metricTranslate.text.toLowerCase()}\r\n                                      . I hope they don't mind.\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"feedback-endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {state.feedback.mobileBackground && (\r\n                        <div id=\"feedback-phone-div\">\r\n                          <div id=\"feedback-phone\">\r\n                            <img src={palma} alt=\"\" />\r\n                            <img src={bigPhone} alt=\"\" />\r\n                            <img\r\n                              src={state.feedback.mobileBackground.url}\r\n                              alt=\"\"\r\n                            />\r\n                            <img src={dedao} alt=\"\" />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                default:\r\n                  return <div>Error</div>;\r\n              }\r\n            })()}\r\n            {state.endGame && <Result gameEndState={state.gameEndState} />}\r\n            {state.tries > 0 && (\r\n              <div>\r\n                {state.tries} tentativa{state.tries > 1 ? \"s\" : \"\"}!\r\n              </div>\r\n            )}\r\n            {state.back && <Redirect to=\"/userspace\" />}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1;\r\n","import React from \"react\";\r\nimport { lamp_apagada, lamp_acesa } from \"../../img\";\r\nimport \"./index.scss\";\r\n\r\nconst Lamp = ({ onClick, message }) => {\r\n  return (\r\n    <div id=\"acusar\" onClick={onClick}>\r\n      <span>{message}</span>\r\n      <img id=\"lamp-apagada\" src={lamp_apagada} alt=\"\"></img>\r\n      <img id=\"lamp-acesa\" src={lamp_acesa} alt=\"\"></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lamp;\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nconst initialState = (hasPlayed = false) => ({\r\n//GAME STATE\r\n  scene: \"INIT\",\r\n  currentRoom: 0,\r\n  isOnDialog: false,\r\n  endGame: false,\r\n  found: false,\r\n  locations:[],\r\n  tips: ['O engenheiro sabe'],\r\n  acusation: false,\r\n  closeAcusation: false,\r\n  tries: 0,\r\n  validQuestions: [],\r\n  tutorialStep: 0,\r\n  seeTutorial: true,\r\n  hasPlayed: hasPlayed,\r\n  checkedPlayed: hasPlayed,\r\n  tipsCount: 0,\r\n//DIALOG\r\n  dialogHistory: [],\r\n  dialogStep: 0,\r\n  characterFeeling: 'init',\r\n  totalDialogSteps: 2,\r\n  questionsByStep: 2,\r\n  currentChar: null,\r\n  showConvo: false,\r\n  questions: [],\r\n  targetName: 'Leila',\r\n  correct: 0,\r\n  ncorrect: 0,\r\n  correctMinimum: 2,\r\n  gameEndState: null,\r\n  score: 0,\r\n  startedTimestamp: new Date(Date.now()),\r\n  elapsedTime: null,\r\n  back: false,\r\n  spokenCharacters: [],\r\n})\r\n\r\nexport default initialState\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport RoomSelect from \"../../_components/RoomSelect\";\r\nimport Sala from \"../../_components/Sala\";\r\nimport Character from \"../../_components/Character\";\r\nimport Lamp from \"../../_components/Lamp\";\r\nimport Conversa from \"../../_components/Conversa\";\r\nimport DialogCharacter from \"../../_components/DialogCharacter\";\r\nimport FullscreenOverlay from \"../../_components/FullscreenOverlay\";\r\nimport { Iniciar, PularTutorial } from \"../../_components/Button\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport initialState from \"./initialState\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {\r\n  iconVitoriaPers,\r\n  iconVitoriaPrim,\r\n  iconDerrota,\r\n  iconDicas,\r\n  blobAzul,\r\n  blobLaranja,\r\n  blobVerde,\r\n  dedao,\r\n  palma,\r\n  bloco,\r\n  blocoButton,\r\n} from \"../../img\";\r\n\r\nimport \"./index.scss\";\r\nimport \"./tela-acusacao.scss\";\r\nimport \"./tela-fim-jogo.scss\";\r\nimport \"./tela-tutorial.scss\";\r\n\r\nconst Game2 = (props) => {\r\n  const [state, setState] = React.useState(initialState());\r\n\r\n  const id = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n  let error = useSelector((state) => state.missions.error);\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  const missionData = mission ? mission.missionData : null;\r\n  const loading = useSelector((state) => state.missions.loading);\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const hasPlayed = useSelector((state) =>\r\n    state.game.items.resultsCount ? state.game.items.resultsCount > 0 : false\r\n  );\r\n  const dialogInitialState = {\r\n    dialogHistory: [],\r\n    dialogStep: 0,\r\n    correct: 0,\r\n    characterFeeling: \"init\",\r\n    preSpeech: null,\r\n    convOptions: [],\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (mission)\r\n      dispatch(\r\n        musicActions.set(\r\n          mission.backgroundAudio ? mission.backgroundAudio.url : \"\"\r\n        )\r\n      );\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  // check if user already played the game\r\n  React.useEffect(() => {\r\n    let updatedState = {};\r\n    if (mission && !state.checkedPlayed) {\r\n      dispatch(\r\n        gameActions.find(\"results/count\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n        })\r\n      );\r\n      updatedState.checkedPlayed = true;\r\n    }\r\n\r\n    if (hasPlayed) setState({ ...state, ...updatedState, hasPlayed });\r\n\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, hasPlayed]);\r\n\r\n  //track player actions\r\n  React.useEffect(() => {\r\n    if ((mission && !mission.trackPlayerInput) || !currentPlaySession) return;\r\n\r\n    const getClickedObject = (e) => {\r\n      dispatch(\r\n        play_sessionsActions.update({\r\n          id: currentPlaySession.id,\r\n          data: {\r\n            actions: [\r\n              ...currentPlaySession.data.actions,\r\n              {\r\n                tag: e.target.nodeName,\r\n                src: e.target.src,\r\n                alt: e.target.alt,\r\n                className: e.target.className,\r\n                class: e.target.class,\r\n                id: e.target.id,\r\n                innerHTML: e.target.innerHTML.includes(\"<div\")\r\n                  ? null\r\n                  : e.target.innerHTML,\r\n                clickTime: new Date(),\r\n              },\r\n            ],\r\n          },\r\n        })\r\n      );\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", getClickedObject);\r\n\r\n    setState((s) => {\r\n      return { ...s, currentPlaySession, getClickedObject };\r\n    });\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", getClickedObject);\r\n    };\r\n  }, [\r\n    dispatch,\r\n    play_sessionsActions,\r\n    state.tracking,\r\n    currentPlaySession,\r\n    mission,\r\n  ]);\r\n  /*//Testing tool\r\n\tif(error){\r\n\t\terror = null\r\n\t\tmission = stub\r\n\t}\r\n\t*/\r\n\r\n  //Randomizar personagens para aparecer nas salas\r\n  //\tEnquanto houver personagens na lista de personagens disponíveis\r\n  //\t\tEscolhe um local ao acaso\r\n  //\t\tEscolhe um personagem dentre a lista de personagens disponíveis ao acaso\r\n  //\t\tAdiciona personagem ao local\r\n  //\t\tRetira personagem da lista de personagens disponíveis\r\n\r\n  React.useEffect(() => {\r\n    if (missionData && state.locations.length === 0) {\r\n      // safe copies\r\n      let availableCharacters = missionData.missionCharacters.slice(0);\r\n      let locations = missionData.locations.map((location) => {\r\n        delete location.characters;\r\n        return { location: location, missionCharacters: [] };\r\n      });\r\n\r\n      let tutorialRoom = missionData.tutorial;\r\n\r\n      //distribute on locations\r\n      while (availableCharacters.length > 0) {\r\n        // sorteia sala aleatoriamente com pesos que diminuem dependendo de quantos personagens já se tem\r\n        let totalWeight = 0;\r\n        let crowdestRoomPop = 0;\r\n        let emptiestRoomPop = 999;\r\n        const minPerRoom = 1;\r\n        const maxPerRoom = 5;\r\n        locations.forEach((location) => {\r\n          crowdestRoomPop = Math.max(\r\n            location.missionCharacters.length,\r\n            crowdestRoomPop\r\n          );\r\n          emptiestRoomPop = Math.min(\r\n            location.missionCharacters.length,\r\n            emptiestRoomPop\r\n          );\r\n        });\r\n\r\n        const maxWeight = (() => {\r\n          if (emptiestRoomPop < minPerRoom) return minPerRoom;\r\n          else if (emptiestRoomPop < maxPerRoom) return maxPerRoom;\r\n          else return crowdestRoomPop + 1;\r\n        })();\r\n\r\n        totalWeight = 0;\r\n        const weights = locations.map((location) => {\r\n          let weight = maxWeight - location.missionCharacters.length;\r\n          totalWeight += weight;\r\n          return weight;\r\n        });\r\n\r\n        let rand = Math.floor(Math.random() * totalWeight);\r\n        let i = 0;\r\n        while (rand >= 0) rand -= weights[i++];\r\n        const locationIndex = i - 1;\r\n\r\n        //each character has some good and bad questions that can be asked\r\n        let availableAnswers = [...availableCharacters[0].answers];\r\n        let correct = availableAnswers.filter(\r\n          (answer) => answer.question.correct\r\n        );\r\n        let ncorrect = availableAnswers.filter(\r\n          (answer) => !answer.question.correct\r\n        );\r\n\r\n        let selectedQuestions = [];\r\n        // ? E se correct/ncorrect não tiveram a quantidade necessária de perguntas?\r\n        while (selectedQuestions.length < 6) {\r\n          let source = selectedQuestions.length % 2 === 0 ? correct : ncorrect;\r\n          let index = Math.floor(Math.random(0, source.length));\r\n          selectedQuestions.push(source[index]);\r\n          source.splice(index, 1);\r\n        }\r\n\r\n        // Aleatorizando para que nem sempre venham as perguntas na ordem certo->errado\r\n        if (Math.floor(Math.random(0, 1) < 0.5)) {\r\n          let temp = selectedQuestions[0];\r\n          selectedQuestions[0] = selectedQuestions[1];\r\n          selectedQuestions[1] = temp;\r\n        }\r\n        if (Math.floor(Math.random(0, 1) > 0.5)) {\r\n          let temp = selectedQuestions[2];\r\n          selectedQuestions[2] = selectedQuestions[3];\r\n          selectedQuestions[3] = temp;\r\n        }\r\n\r\n        locations[locationIndex].missionCharacters = [\r\n          ...locations[locationIndex].missionCharacters,\r\n          {\r\n            ...availableCharacters[0],\r\n            selectedQuestions,\r\n            zDepth: Math.random(),\r\n          },\r\n        ];\r\n\r\n        availableCharacters.splice(0, 1);\r\n      }\r\n\r\n      // Aleatorizando ordem dos personagens em cada sala\r\n      for (let i = 0; i < locations.length; i++) {\r\n        let amountChars = locations[i].missionCharacters.length;\r\n        if (amountChars <= 1) continue;\r\n        for (let j = 0; j < amountChars - 1; j++) {\r\n          let exchangeWith = Math.floor(Math.random() * (amountChars - j)) + j;\r\n          if (j === exchangeWith) continue; // Não precisa trocar se for consigo mesmo\r\n          //swap\r\n          let aux = locations[i].missionCharacters[j];\r\n          locations[i].missionCharacters[j] =\r\n            locations[i].missionCharacters[exchangeWith];\r\n          locations[i].missionCharacters[exchangeWith] = aux;\r\n        }\r\n      }\r\n      const tipsCount =\r\n        missionData.missionCharacters.filter((missionCharacter) => {\r\n          return missionCharacter.tip;\r\n        }).length + 1;\r\n      setState((state) => {\r\n        return { ...state, locations, tutorialRoom, tipsCount };\r\n      });\r\n    }\r\n  }, [missionData, state.locations]);\r\n\r\n  const onStartGame = (e) => {\r\n    if (mission.trackPlayerInput) {\r\n      dispatch(\r\n        play_sessionsActions.create({\r\n          user: userId,\r\n          mission: mission.id,\r\n          data: { actions: [] },\r\n        })\r\n      );\r\n    }\r\n    //check if should start or skip tutorial\r\n    setState({ ...state, scene: \"TUTORIAL\" });\r\n  };\r\n\r\n  const endTutorial = () => {\r\n    let updateState = {\r\n      showConvo: false,\r\n      currentChar: null,\r\n      scene: \"ROOM\",\r\n      ...dialogInitialState,\r\n    };\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const setTutorialCharacter = (tutorialCharacter) => () => {\r\n    setState({\r\n      ...state,\r\n      tutorialStep: state.tutorialStep + 1,\r\n      showConvo: true,\r\n      currentChar: tutorialCharacter.character,\r\n      convOptions: tutorialCharacter.answers.map((answer) => {\r\n        return {\r\n          ...answer,\r\n          answer: answer.answer.split(\";\"),\r\n        };\r\n      }),\r\n    });\r\n  };\r\n\r\n  //shows only selected questions\r\n  const setCurrentCharacter = (character) => () => {\r\n    setState({\r\n      ...state,\r\n      showConvo: true,\r\n      currentChar: character,\r\n      dialogStep: 0,\r\n      convOptions: state.locations[state.currentRoom].missionCharacters\r\n        .find((c) => c.character.id === character.character.id)\r\n        .selectedQuestions.slice(0, state.questionsByStep),\r\n    });\r\n  };\r\n\r\n  const closeDialog = (dialogHistory) => {\r\n    setState({\r\n      ...state,\r\n      ...dialogInitialState,\r\n      showConvo: false,\r\n      shouldCloseConvo: false,\r\n      currentChar: null,\r\n    });\r\n  };\r\n\r\n  const afterWriter = () => {\r\n    if (state.scene === \"TUTORIAL\") {\r\n      setTimeout(() => {\r\n        setState({\r\n          ...state,\r\n          tutorialStep: state.tutorialStep + 1,\r\n        });\r\n      }, 1500);\r\n    } else {\r\n      let updateState = {};\r\n      if (state.dialogStep < state.totalDialogSteps) {\r\n        updateState.convOptions = state.locations[\r\n          state.currentRoom\r\n        ].missionCharacters\r\n          .find((mc) => mc.character.id === state.currentChar.character.id)\r\n          .selectedQuestions.slice(\r\n            state.questionsByStep * state.dialogStep,\r\n            state.questionsByStep * (state.dialogStep + 1)\r\n          );\r\n      } else if (state.dialogStep === state.totalDialogSteps) {\r\n        if (state.correct < state.correctMinimum) {\r\n          updateState.preSpeech = state.currentChar.wrongEndAnswer;\r\n          updateState.convOptions = [\r\n            { refresh: true, question: { question: \"Sim\" } },\r\n            {\r\n              close: true,\r\n              question: { question: \"Não\" },\r\n              answer: state.currentChar.endDialog,\r\n            },\r\n          ];\r\n        } else {\r\n          updateState.convOptions = [\r\n            {\r\n              tip: state.currentChar.tip,\r\n              question: {\r\n                question: \"Estou procurando alguém. Você pode me ajudar?\",\r\n              },\r\n              answer: state.currentChar.rightEndAnswer,\r\n              correct: true,\r\n            },\r\n          ];\r\n        }\r\n      } else {\r\n        const tchaus = [\r\n          \"Ah tá, tchau!\",\r\n          \"Ok. Valeu!\",\r\n          \"Tchau!\",\r\n          \"Até mais!\",\r\n          \"Entendi... Muito obrigado!\",\r\n          \"Até logo!\",\r\n          \"Até a próxima!\",\r\n        ];\r\n        const rIdx = Math.floor(Math.random() * tchaus.length);\r\n        updateState.convOptions = [\r\n          {\r\n            close: true,\r\n            question: { question: tchaus[rIdx], correct: true },\r\n            answer: state.currentChar.endDialog,\r\n          },\r\n        ];\r\n      }\r\n      if (state.closeAfterWritter) {\r\n        delete state.closeAfterWritter;\r\n        updateState.convOptions = [];\r\n        updateState.shouldCloseConvo = true;\r\n      }\r\n      setState({ ...state, ...updateState });\r\n    }\r\n  };\r\n\r\n  const onRefreshDialog = () => {\r\n    setState({\r\n      ...state,\r\n      ...dialogInitialState,\r\n      refreshDialog: null,\r\n      convOptions: state.locations[state.currentRoom].missionCharacters\r\n        .find((c) => c.character.id === state.currentChar.character.id)\r\n        .selectedQuestions.slice(0, state.questionsByStep),\r\n    });\r\n  };\r\n\r\n  const onMenuButtonClick = (answer) => {\r\n    let updateState = {};\r\n\r\n    if (answer.tip && state.tips.indexOf(answer.tip) === -1)\r\n      updateState = { ...updateState, tips: [...state.tips, answer.tip] };\r\n\r\n    if (answer.refresh)\r\n      updateState = { ...updateState, refreshDialog: onRefreshDialog };\r\n    else if (answer.close)\r\n      updateState = { ...updateState, closeAfterWritter: true };\r\n    else {\r\n      if (state.scene === \"TUTORIAL\") {\r\n        updateState = {\r\n          ...updateState,\r\n          characterFeeling: \"wrongQuestion\",\r\n          convOptions: [],\r\n        };\r\n      } else {\r\n        updateState = {\r\n          ...updateState,\r\n          spokenCharacters: state.spokenCharacters,\r\n          validQuestions: state.validQuestions,\r\n          characterFeeling: null,\r\n        };\r\n        if (\r\n          updateState.spokenCharacters.indexOf(\r\n            state.currentChar.character.name\r\n          ) === -1\r\n        )\r\n          updateState.spokenCharacters.push(state.currentChar.character.name);\r\n\r\n        //change character face\r\n        if (answer.correct) {\r\n          if (updateState.validQuestions.hasOwnProperty(answer.question)) {\r\n            updateState.validQuestions[answer.question]++;\r\n          } else {\r\n            updateState.validQuestions[answer.question] = 0;\r\n          }\r\n          updateState.characterFeeling = \"rightQuestion\";\r\n        } else {\r\n          updateState.characterFeeling = \"wrongQuestion\";\r\n        }\r\n      }\r\n\r\n      updateState = {\r\n        ...updateState,\r\n        dialogStep: state.dialogStep + 1,\r\n        correct: state.correct + (answer.correct ? 1 : 0),\r\n      };\r\n    }\r\n\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const checkEnd = () => {\r\n    setState({\r\n      ...state,\r\n      acusation: false,\r\n      scene: \"ENDGAME\",\r\n      gameEndState: state.currentChar.character.name === state.targetName,\r\n      characterFeeling:\r\n        state.currentChar.character.name === state.targetName\r\n          ? \"rightAccusation\"\r\n          : \"wrongAccusation\",\r\n      currentChar: null,\r\n    });\r\n\r\n    //aqui\r\n    dispatch(\r\n      gameActions.create(\"results\", {\r\n        user: userId,\r\n        mission: mission.id,\r\n        score: state.score,\r\n        tipsCount: state.tips.length,\r\n        spokenCharactersCount: state.spokenCharacters.length,\r\n        won: state.gameEndState,\r\n        validQuestionsCount: Object.keys(state.validQuestions).length,\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n  };\r\n\r\n  const tutorialScreen = (id) => {\r\n    return (\r\n      <div id=\"room-itself\" className=\"tutorial\">\r\n        <Sala roomData={state.tutorialRoom.location} key={-1}>\r\n          <Character\r\n            character={state.tutorialRoom.character}\r\n            onClick={setTutorialCharacter(state.tutorialRoom)}\r\n          />\r\n          <div className=\"abs-fix\">\r\n            <div id=\"tutorial-popup-1\">\r\n              <span lang=\"pt-br\">\r\n                Selecione alguém para conversar e te ajudar a encontrar o seu\r\n                guia.\r\n              </span>\r\n              <span lang=\"en\">\r\n                Select someone to talk and help you find your guide.\r\n              </span>\r\n              {hasPlayed ? (\r\n                <div>\r\n                  <PularTutorial\r\n                    label=\"Skip tutorial\"\r\n                    onClick={() => setState((s) => (s.scene = \"ROOM\"))}\r\n                  />\r\n                </div>\r\n              ) : // <button\r\n              //   className=\"btn btn-center\"\r\n              //   id=\"btn-tutorial\"\r\n              //   onClick={() => {\r\n              //     setState({ ...state, scene: \"ROOM\" });\r\n              //   }}\r\n              // >\r\n              //   Skip tutorial\r\n              // </button>\r\n              null}\r\n            </div>\r\n          </div>\r\n        </Sala>\r\n        {state.showConvo && (\r\n          <Conversa\r\n            onExited={() => {\r\n              setState({\r\n                ...state,\r\n                showConvo: false,\r\n                tutorialStep: state.tutorialStep - 1,\r\n              });\r\n            }}\r\n            convOptions={state.convOptions.reduce((acc, convOption) => {\r\n              let option = {\r\n                ...convOption,\r\n                answers: convOption.answer,\r\n                question: convOption.question.question,\r\n              };\r\n              delete option.answer;\r\n              return [...acc, option];\r\n            }, [])}\r\n            currentChar={state.currentChar}\r\n            charFeeling={state.characterFeeling}\r\n            afterWriter={afterWriter}\r\n            onConvoChoiceMade={onMenuButtonClick}\r\n          />\r\n        )}\r\n        {id === 2 && (\r\n          <div id=\"tutorial-popup-2-wrapper\">\r\n            <div id=\"tutorial-popup-2-content\">\r\n              <span lang=\"pt-br\">\r\n                <strong>Lembre-se:</strong> As pessoas estão ocupadas em seus\r\n                ambientes de trabalho, então tenha certeza de não gastar o tempo\r\n                delas com perguntas fora de contexto!\r\n              </span>\r\n              <span lang=\"en\">\r\n                <strong>Remember:</strong> People are busy in their workplaces,\r\n                so be sure not to waste their times with question that are out\r\n                of yout context!\r\n              </span>\r\n              <Iniciar label=\"Continuar\" onClick={endTutorial} />\r\n              {/* <button\r\n                className=\"btn btn-center\"\r\n                id=\"btn-end-tutorial\"\r\n                onClick={endTutorial}\r\n              >\r\n                Continuar\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(true, true) });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  return (\r\n    <div id=\"game2-wrapper\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        mission && (\r\n          <div id=\"game2-content\">\r\n            {/*<div id=\"input-tracker\">TrackInput: <input type=\"checkbox\" onChange={(e) => { setState({ ...state, tracking: e.target.checked }) }} /></div>*/}\r\n            {(function renderScene() {\r\n              // eslint-disable-next-line default-case\r\n              switch (state.scene) {\r\n                case \"INIT\":\r\n                  return (\r\n                    <Init\r\n                      icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                      name={mission.name}\r\n                      description={mission.description}\r\n                      nameTranslate={\r\n                        mission.nameTranslate.find((name) => {\r\n                          return name.language.id === lang;\r\n                        }).name\r\n                      }\r\n                      descriptionTranslate={\r\n                        mission.descriptionTranslate.find((description) => {\r\n                          return description.language.id === lang;\r\n                        }).description\r\n                      }\r\n                      onStart={onStartGame}\r\n                      onBack={() => setState({ ...state, back: true })}\r\n                      ready={state.tutorialRoom ? true : false}\r\n                    />\r\n                  );\r\n                case \"TUTORIAL\":\r\n                  return tutorialScreen(state.tutorialStep);\r\n                case \"ROOM\":\r\n                  return (\r\n                    <div id=\"room-itself\">\r\n                      <RoomSelect\r\n                        buttonList={state.locations.map(\r\n                          (location, index) => index\r\n                        )}\r\n                        onChange={(num) => {\r\n                          setState({ ...state, currentRoom: num });\r\n                        }}\r\n                      />\r\n                      {/* //? Pq sala recebe a location inteira? Se ela só precisa saber a imagem de fundo,\r\n\t\t\t\t\t\t\t\t\t\t//? pq passar tudo ao invés de só passar a string? Que aí poderia ser local ou na rede... */}\r\n                      {state.showTips ? (\r\n                        <FullscreenOverlay\r\n                          style={{ zIndex: 100 }}\r\n                          onClickClose={() =>\r\n                            setState({ ...state, showTips: false })\r\n                          }\r\n                          bgRGBA={{ r: 249, g: 175, b: 161, a: 0.69 }}\r\n                        >\r\n                          <div id=\"big-note-wrapper\">\r\n                            <div id=\"big-note-imgs\">\r\n                              <img\r\n                                src={palma}\r\n                                style={{ marginLeft: \"-11.25%\" }}\r\n                                alt=\"hand\"\r\n                              />\r\n                              <img\r\n                                src={bloco}\r\n                                alt=\"note\"\r\n                                style={{ marginLeft: \"11.25%\" }}\r\n                              />\r\n                              <img\r\n                                src={dedao}\r\n                                style={{ marginLeft: \"-11.25%\" }}\r\n                                alt=\"thumb\"\r\n                              />\r\n                            </div>\r\n                            <div id=\"big-note-writings-wrapper\">\r\n                              <div id=\"big-note-writings-content\">\r\n                                <span id=\"note-dicas\">Dicas:</span>\r\n                                {state.tips.map((tip, index) => (\r\n                                  <span key={index} className=\"dica\">\r\n                                    {tip}\r\n                                  </span>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </FullscreenOverlay>\r\n                      ) : (\r\n                        <Button\r\n                          style={{ position: \"absolute\" }}\r\n                          onClick={() => setState({ ...state, showTips: true })}\r\n                        >\r\n                          <img\r\n                            style={{ width: 90 }}\r\n                            src={blocoButton}\r\n                            alt=\"tips\"\r\n                          />\r\n                        </Button>\r\n                      )}\r\n                      <Sala\r\n                        roomData={state.locations[state.currentRoom].location}\r\n                        key={state.currentRoom}\r\n                      >\r\n                        {state.locations[\r\n                          state.currentRoom\r\n                        ].missionCharacters.map((missionCharacter, index) => (\r\n                          <Character\r\n                            key={index}\r\n                            zDepth={missionCharacter.zDepth}\r\n                            character={missionCharacter.character}\r\n                            onClick={setCurrentCharacter(missionCharacter)}\r\n                            // showNameOnHover={true} descomentar linha se quiser que os nomes dos personagens apareça sob hover do mouse\r\n                          />\r\n                        ))}\r\n                      </Sala>\r\n                      {state.showConvo && (\r\n                        <Conversa\r\n                          shouldExit={state.shouldCloseConvo}\r\n                          prevDialogHistory={[]}\r\n                          onClearDialogHistory={state.refreshDialog}\r\n                          charPreSpeech={state.preSpeech}\r\n                          convOptions={state.convOptions.reduce(\r\n                            (acc, convOption) => {\r\n                              let option = {\r\n                                ...convOption,\r\n                                ...convOption.question,\r\n                                answers: convOption.answer,\r\n                              };\r\n                              delete option.answer;\r\n                              return [...acc, option];\r\n                            },\r\n                            []\r\n                          )}\r\n                          currentChar={state.currentChar.character}\r\n                          charFeeling={state.characterFeeling}\r\n                          afterWriter={afterWriter}\r\n                          onExited={closeDialog}\r\n                          onConvoChoiceMade={onMenuButtonClick}\r\n                        >\r\n                          <Lamp\r\n                            onClick={() =>\r\n                              setState({ ...state, acusation: true })\r\n                            }\r\n                            message=\"É você!\"\r\n                          />\r\n                        </Conversa>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                case \"ENDGAME\":\r\n                  return (\r\n                    <div id=\"endGame-screen\">\r\n                      {state.gameEndState ? (\r\n                        <div id=\"end-panels\">\r\n                          <div id=\"painel-icon\">\r\n                            <img\r\n                              src={\r\n                                state.tries === 0\r\n                                  ? iconVitoriaPrim\r\n                                  : iconVitoriaPers\r\n                              }\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div id=\"endgame-messages\">\r\n                            {state.tries === 0 ? (\r\n                              <div className=\"painel\" id=\"painel-1\">\r\n                                <div className=\"painel-1-wrapper\">\r\n                                  <div className=\"painel-1-content\">\r\n                                    <span lang=\"pt-br\">\r\n                                      Muito bem! Você encontrou a pessoa na\r\n                                      primeira tentativa. Vai arrasar na sua\r\n                                      nova carreira!\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      Well done! You have found the right person\r\n                                      on your first try. You're going to rock on\r\n                                      your new career!\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                                <a href=\"#painel-2\" className=\"next-btn\">\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"painel\" id=\"painel-1\">\r\n                                <div className=\"painel-1-wrapper\">\r\n                                  <div className=\"painel-1-content\">\r\n                                    <span lang=\"pt-br\">\r\n                                      Você encontrou a pessoa certa! Parabéns!\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      You have found the right person! Congrats!\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                                <a href=\"#painel-2\" className=\"next-btn\">\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              </div>\r\n                            )}\r\n                            <div className=\"painel\" id=\"painel-2\">\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage:\r\n                                      \"url(\" +\r\n                                      (state.tips.length === state.tipsCount\r\n                                        ? blobAzul\r\n                                        : blobVerde) +\r\n                                      \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.tips.length ?? 0}</span>/\r\n                                    <span>{state.tipsCount}</span>\r\n                                  </div>\r\n                                  <div>clues</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div className=\"painel-2-content\">\r\n                                  <div>\r\n                                    <p>\r\n                                      After talking to{\" \"}\r\n                                      {state.spokenCharacters.length} people,\r\n                                      you found {state.tips.length} of the{\" \"}\r\n                                      {state.tipsCount} existing clues.\r\n                                    </p>\r\n                                    <p>\r\n                                      Regarding the questions you asked,{\" \"}\r\n                                      {Object.keys(state.validQuestions).length}{\" \"}\r\n                                      of them were useful.\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <a href=\"#painel-1\" className=\"prev-btn\">\r\n                                {\"❮\"}\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div id=\"endGame-wrong-wrapper\">\r\n                          <div>\r\n                            <div className=\"painel\" id=\"painel-1\">\r\n                              <div id=\"painel-icon-derrota\">\r\n                                <img src={iconDerrota} alt=\"\" />\r\n                              </div>\r\n                              <span lang=\"pt-br\">\r\n                                Você ainda não encontrou a pessoa certa. Como\r\n                                você vai entender o que deve ser feito em seu\r\n                                novo trabalho? Você ainda precisa descobrir\r\n                                algumas dicas.\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                You still haven't found the right person. How\r\n                                will you understand what has to be done in your\r\n                                new job? There are clues yet to be found.\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"painel\" id=\"painel-3\">\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.tips.length ?? 0}</span>/\r\n                                    <span>{state.tipsCount}</span>\r\n                                  </div>\r\n                                  <div>clues</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div className=\"painel-2-content\">\r\n                                  <div>\r\n                                    <p>\r\n                                      After talking to{\" \"}\r\n                                      {state.spokenCharacters.length} people,\r\n                                      you found {state.tips.length} of the{\" \"}\r\n                                      {state.tipsCount} existing clues.\r\n                                    </p>\r\n                                    <p>\r\n                                      Regarding the questions you asked,{\" \"}\r\n                                      {Object.keys(state.validQuestions).length}{\" \"}\r\n                                      of them were useful. Try asking more\r\n                                      relevant questions!\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {state.gameEndState && (\r\n                        <DialogCharacter\r\n                          character={\r\n                            missionData.missionCharacters.find((mc) => {\r\n                              return mc.character.name === state.targetName;\r\n                            }).character\r\n                          }\r\n                          feeling={\"win\"}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  );\r\n              }\r\n            })()}\r\n            {state.acusation && (\r\n              <FullscreenOverlay\r\n                showCloseBtn={false}\r\n                shouldExit={state.closeAcusation}\r\n                onReadyToExit={() => {\r\n                  setState({\r\n                    ...state,\r\n                    closeAcusation: false,\r\n                    acusation: false,\r\n                  });\r\n                }}\r\n              >\r\n                <div id=\"dialog-accusation-wrapper\">\r\n                  <div id=\"dialog-accusation\">\r\n                    <div id=\"accusation-infos\">\r\n                      <div>\r\n                        <span lang=\"pt-br\">Tem certeza?</span>\r\n                        <span lang=\"en\">\r\n                          Are you sure it's them?\r\n                          <br />\r\n                          Check your tips.\r\n                        </span>\r\n                      </div>\r\n                      <div id=\"tips-received\">\r\n                        <div id=\"accusation-icon\">\r\n                          <img src={iconDicas} alt=\"\" />\r\n                        </div>\r\n                        {state.tips.length > 0 ? (\r\n                          state.tips.map((tip, index) => (\r\n                            <div key={index}>{tip}</div>\r\n                          ))\r\n                        ) : (\r\n                          <div>Nenhuma dica recebida.</div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div id=\"accusation-btns\">\r\n                      <Button\r\n                        onClick={() =>\r\n                          setState({ ...state, closeAcusation: true })\r\n                        }\r\n                      >\r\n                        Não\r\n                      </Button>\r\n                      <Button onClick={checkEnd}>Sim</Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </FullscreenOverlay>\r\n            )}\r\n          </div>\r\n        )\r\n      )}\r\n      {state.back && <Redirect to=\"/userspace\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game2;\r\n","const initialState = (checkedPlayed) => {\r\n  return {\r\n    scene: \"INIT\",\r\n    cart: [],\r\n    tutorialRoom: {},\r\n    recipe: {},\r\n    ingredientsList: [],\r\n    aisles: [],\r\n    currentAisle: 0,\r\n    checkout: false,\r\n    onPayment: false,\r\n    payment: [],\r\n    win: false,\r\n    change: null,\r\n    runTimer: true,\r\n    remainingTime: 0,\r\n    initTime: 0,\r\n    checkedPlayed: checkedPlayed,\r\n    moneySelection: false,\r\n  };\r\n};\r\n\r\nexport default initialState;\r\n","import React from \"react\";\r\nimport { zeroFill } from \"../../_helpers\";\r\nimport \"./index.scss\";\r\n\r\nconst Timer = ({ seconds, onEnd, onStop, run = true , ...props}) => {\r\n  const [state, setState] = React.useState({\r\n    seconds: seconds,\r\n    timeout: null,\r\n    sentRemaning: false,\r\n  });\r\n  const previousRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (state === previousRef.current && state.seconds !== seconds) {\r\n      //console.log('external side effect update')***\r\n      return;\r\n    }\r\n\r\n    if (!run && !state.sentRemaning) {\r\n      onStop(state.seconds);\r\n      setState({ ...state, sentRemaning: true });\r\n    } else if (run && state.sentRemaning)\r\n      setState({ ...state, sentRemaning: false });\r\n\r\n    if (!run) {\r\n      return state.timeout ? () => clearTimeout(state.timeout) : null;\r\n    }\r\n\r\n    if (state.seconds === 0) {\r\n      if (onEnd) onEnd(state.seconds);\r\n    } else if (state.seconds > 0) {\r\n      previousRef.current = state;\r\n      let timeout = setTimeout(() => {\r\n        setState({ seconds: state.seconds - 1, timeout: timeout });\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(state.timeout);\r\n    }\r\n  }, [state, onEnd, onStop, run, seconds]);\r\n\r\n  return (\r\n    <div id=\"timer\" {...props}>\r\n      {zeroFill(Math.floor(state.seconds / 60).toString(), 2)}:\r\n      {zeroFill((state.seconds % 60).toString(), 2)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n\r\n/***\r\n    Internal setState causes Timer component to update.\r\n    onSecondPassed may cause an external setState, leading to an update which could reupdate Timer component.\r\n\r\n    To prevent useEffect of entering the if statement responsable for setTimeout call, which leads to double that frame setTimeout callback,\r\n    previous state is compared to the new state.\r\n\r\n    In the first run, new state is in fact equal to current state.\r\n    In this case, the entering seconds value is verified.\r\n*/\r\n","import React from \"react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nimport { shelf } from \"../../img\";\r\n\r\nconst Aisle = ({ products, addProduct, toPreviousAisle, toNextAisle }) => {\r\n\t// const [state, setState] = React.useState({ seconds: seconds, timeout: null });\r\n\r\n\treturn (\r\n\t\t<div id={styles.aisle}>\r\n\t\t\t<button className={styles.btnChangeAisle + \" btn-change-aisle\"} onClick={toPreviousAisle}>{\"❮\"}</button>\r\n\t\t\t<div id={styles.shelves}>\r\n\t\t\t\t<img src={shelf} alt=\"\"/>\r\n\t\t\t\t<div className={styles.items}>\r\n\t\t\t\t\t{products.map((product, index) => (\r\n\t\t\t\t\t\t[<div className={styles.products} key={index*2}>\r\n\t\t\t\t\t\t\t{[...Array(10)].map((element, index) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tonClick={addProduct(product.name)}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.tooltip}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img src={product.shelfImage} alt=\"\"/>\r\n\t\t\t\t\t\t\t\t\t<span className={styles.tooltiptext}>{product.tooltip}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>,\r\n\t\t\t\t\t\t<span key={index*2+1} className={styles.shelfPrice}>{product.tag}</span>]\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button className={styles.btnChangeAisle + \" btn-change-aisle\"} onClick={toNextAisle}>{\"❯\"}</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Aisle;\r\n","import React from 'react'\r\n\r\nconst style = (alternative) => ({\r\n  backgroundColor: alternative? '#59316D' : '#535c89',\r\n\tborderRadius: '0 2.5em 0 0',\r\n\theight: '35%',\r\n\tpadding: \"1.5em\",\r\n\tmarginBottom: \"9em\",\r\n\tboxShadow: '7px 7px 0px 0px #77777750',\r\n\ttransition: '50ms ease-in-out',\r\n\toverflow: 'visible',\r\n  position: 'absolute',\r\n  bottom: '0px',\r\n  left: '15%',\r\n  width: '80%'\r\n})\r\n\r\nconst DialogBox = (props) => {\r\n  return(\r\n    <div style={style(props.alternative)}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogBox\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst DialogCharacter = ({character, feeling, ...props}) => {\r\n  let characterImg = \"\"\r\n\r\n  if( !(character == null) ) {\r\n    if( character.characterAssets.length > 0 ) {\r\n      characterImg = character.characterAssets\r\n        .find(asset => asset.bodyPart === 'upperBody' && asset.type === feeling)\r\n        .image.url\r\n    }\r\n  }\r\n\r\n  return(\r\n    <img id=\"Chef\" src={characterImg} alt=\"Character Portrait\" {...props}/>\r\n  )\r\n}\r\n\r\nexport default DialogCharacter\r\n","import React from 'react'\r\nimport DialogBox from '../../../../_components/DialogBox'\r\nimport Button from '../../../../_components/Button'\r\nimport DialogCharacter from '../DialogCharacter'\r\nimport Writer from '../../../../_components/Writer'\r\nimport './index.scss'\r\nimport parser from 'html-react-parser'\r\n\r\n// import { LineWeight } from '@material-ui/icons'\r\n\r\nconst msPerCharacter = 30;\r\nconst waitAfterWritten = 1000;\r\n\r\nconst ChefDialog = ({hideDialog, onContinue, text, translation, chef, ...props}) => {\r\n  const [state, setState] = React.useState({writerDone: false})\r\n  const onWriterDone = () => setState({...state, writerDone: true})\r\n  let chefStyles = {position: 'absolute', left:0, bottom: 0, zIndex: 2, width: '43%'}\r\n\r\n  console.log('props:', props)\r\n  if(props.chefStyles)\r\n    chefStyles = {...chefStyles, ...props.chefStyles }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!hideDialog &&\r\n        <DialogBox alternative>\r\n          <div style={{paddingLeft: '30%'}}>\r\n            <div style={{fontSize: \"3.2em\"}}>\r\n              <Writer text={text} style={{fontSize: '1em', paddingLeft: 0}}\r\n\t\t\t\t\t\t\t\tonWritten={onWriterDone}\r\n\t\t\t\t\t\t\t\tafterWrittenTime={waitAfterWritten}\r\n\t\t\t\t\t\t\t\tcharacterTime={msPerCharacter}\r\n\t\t\t\t\t\t\t/>\r\n              {state.writerDone &&\r\n                <hr className=\"stretchIn\" style={{width: '10%', borderColor: '#F9AFA1'}}/>\r\n              }\r\n              {state.writerDone &&\r\n                <div className='instructionText translation' lang=\"en\">\r\n                  {parser(translation)}\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n          {state.writerDone &&\r\n            <Button onClick={onContinue} blink\r\n            id=\"btn-start\"\r\n              style={{fontSize: '2.5em', position: 'absolute', right: '30px', bottom: '-20px', fontWeight: 800, padding: \"0.72em 1.43em\"}}\r\n            >\r\n              Continuar\r\n            </Button>\r\n          }\r\n        </DialogBox>\r\n      }\r\n      <DialogCharacter character={chef} feeling=\"init\" style={chefStyles}/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n//\r\n\r\nexport default ChefDialog\r\n","import React from 'react'\r\n// import { ingredientsListBg } from '../../../../img'\r\n// import parse from \"html-react-parser\"\r\n// import marked from \"marked\"\r\n\r\nimport './index.scss'\r\n\r\nconst IngredientList = ({children, ...props}) => {\r\n  return(\r\n    <div className=\"ingredientList\" {...props}>\r\n      <div style={{position: 'absolute', fontSize: '1.2em'}}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default IngredientList\r\n","import React from 'react'\r\nimport marked from \"marked\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ListedIngredient = ({ingredient, richText}) => {\r\n  return (\r\n    <div className=\"ingredient\">\r\n      {ingredient.order && ingredient.order}.{\" \"}\r\n      {ingredient.image && <img className=\"ingredientImg\" src={ingredient.image} alt=\"\" />}\r\n      {richText ? parse(marked.parseInline(ingredient.description)) : <span>{ingredient.description}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListedIngredient\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Button from '../../../../_components/Button'\r\n\r\n// import DialogCharacter from \"../../../../_components/DialogCharacter\";\r\n// import DialogBox from '../../../../_components/DialogBox'\r\nimport { kitchen, recipeBgRound } from \"../../../../img\";\r\nimport ChefDialog from '../ChefDialog'\r\nimport IngredientList from '../IngredientList'\r\nimport ListedIngredient from '../ListedIngredient'\r\n\r\nconst instructionText=(recipeName, recipeNameTranslate)=> ({\r\n  en: `Shop for the items in the list before the time is up! In today's\r\n  episode, we'll face the challenge of preparing\r\n  \"${recipeNameTranslate}\"!!`,\r\n  ptbr:`Faça as compras da lista antes do tempo acabar! No episódio de\r\n  hoje, vamos ter o desafio de preparar ${recipeName}!!`\r\n})\r\n\r\nconst Intro = ({ chef, recipe, ingredientsList, goToTutorial }) => {\r\n  const [state, setState] = React.useState({ screen: 0 });\r\n  const instructions = instructionText(recipe.name, recipe.nameTranslate)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.screen === 0 && (\r\n        <React.Fragment>\r\n          <img id=\"dialog-interact\" src={kitchen} style={{position:'absolute', zIndex: -1, width: '100%', height: '100%'}} alt=\"\"/>\r\n          <ChefDialog chef={chef} onContinue={() => setState({ screen: 1 })} text={instructions.ptbr} translation={instructions.en}/>\r\n        </React.Fragment>\r\n      )}\r\n\r\n      {state.screen === 1 && (\r\n        <div id=\"dialog-interact\" style={{position: 'relative', width: '100%', height: '100%'}}>\r\n          <div style={{position: 'relative', overflow: 'visible'}}>\r\n            <img className=\"rotate backwards\" style={{position: 'absolute', width: '60%', left: '25%', top: '-130px', opacity: '60%'}} src={recipeBgRound} alt=\"\"/>\r\n            <img className=\"rotate\" style={{position: 'absolute', width: '60%', left: '25%', top: '-130px'}} src={recipeBgRound} alt=\"\"/>\r\n            <img className=\"dishPresentation\" style={{position: 'absolute', right: '30%', width: '30%'}} src={recipe.image} alt=\"\"/>\r\n          </div>\r\n          <ChefDialog chef={chef} onContinue={() => setState({ screen: 2 })} text={recipe.description} translation={recipe.descriptionTranslate}/>\r\n        </div>\r\n      )}\r\n\r\n      {state.screen === 2 && (\r\n        <div className=\"intro-recipe\">\r\n          <div style={{flex: '1 0 0px', width: 400, marginLeft: '10%', fontSize: '2em'}}>\r\n            <img className=\"dishPresentation\" style={{margin: '0 auto'}} src={recipe.image} alt=\"\"/>\r\n            <h1 className=\"margin-half-top type-l type-display type-center\" style={{padding: '0 1.5em'}}>\r\n              {recipe.name}\r\n            </h1>\r\n            <Button blink\r\n              style={{display: 'block', margin: '1.25em auto 0 auto', fontSize: '1.2em'}}\r\n              onClick={goToTutorial}\r\n              id=\"btn-start\"\r\n            >\r\n              Continuar\r\n            </Button>\r\n          </div>\r\n          <IngredientList style={{flex: '1 0 0px'}}>\r\n            {ingredientsList.map((ingredient, index) =>\r\n              <ListedIngredient key={index} richText={ingredient.order !== null} ingredient={ingredient} />\r\n            )}\r\n          </IngredientList>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n//{ingredient.order}.{\" \"}\r\n//{parse(marked.parseInline(ingredient.description))};\r\n\r\nexport default Intro;\r\n","import React from 'react'\r\nimport { hourglassFull, blobAzul } from '../../img'\r\nimport { zeroFill } from '../../_helpers'\r\nimport Button from '../Button'\r\n\r\nconst TimerAnounce = ({seconds, onReady}) => {\r\n  return (\r\n    <div style={{position: 'relative', width: '100%', height: '100%',\r\n      backgroundImage: `url(${blobAzul})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n      backgroundSize: '100% 100%'\r\n    }}>\r\n      <div style={{width: 400, margin: '0 auto', paddingTop: '2%', paddinBottom: '2%', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n        <img style={{display: 'block', width: '20%', margin: '0 auto', marginBottom: '10%'}} src={hourglassFull} alt=\"hourglass\" />\r\n        <h1 className=\"type-m type-display type-center subtitle\">\r\n          Você tem\r\n        </h1>\r\n        <h1 style={{fontSize: 92}} className=\"type-l type-display type-center\">\r\n          {zeroFill(Math.floor(seconds / 60).toString(), 2)}:\r\n          {zeroFill((seconds % 60).toString(), 2)}\r\n        </h1>\r\n        <h1 className=\"type-m type-display type-center subtitle\">\r\n          minutos\r\n        </h1>\r\n        <Button style={{marginTop: '10%'}} blink center onClick={onReady}>\r\n          Estou pronto!\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimerAnounce\r\n","import React from \"react\";\r\nimport marked from \"marked\";\r\nimport parse from \"html-react-parser\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nimport { ingredientsListBg, listCheck, listCheckbox, listIcon } from \"../../img\";\r\n\r\nconst Recipe = ({ ingredientsList, hasImage, showCheck, iconShouldShow, onMouseEnter, onMouseLeave }) => {\r\n  const [state, setState] = React.useState(false);\r\n\r\n  return (\r\n    <div className={styles[\"shop-list-div\"]}>\r\n      {state &&\r\n        <div className={styles[\"overlay-shop-list\"]}>\r\n          <div>\r\n            <img src={ingredientsListBg} alt=\"\"/>\r\n            <div className={styles[\"shop-list\"]}>\r\n              { ingredientsList? ingredientsList.map((ingredient, index) => (\r\n                <div className={styles[\"shop-list-item-container\"]} key={index}>\r\n                  <div className={styles[\"shop-list-item\"]}>\r\n                    <img src={listCheckbox} alt=\"\"/>\r\n                    {showCheck(ingredient) && (<img src={listCheck} className={styles[\"checkmark\"]} alt=\"\" />)}\r\n                    {hasImage && (<img src={ingredient.image} className={styles[\"shop-list-item-img\"]} alt=\"\"/>)}\r\n                    <span>{parse(marked.parseInline(ingredient.description))}</span>\r\n                  </div>\r\n                </div>\r\n              )) : (\r\n                <div className={styles[\"shop-list-item-container\"]}>\r\n                  <div className={styles[\"shop-list-item\"]}>\r\n                    <span>Nenhum ingrediente encontrado na lista :(</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      {iconShouldShow && (\r\n        <img\r\n          onMouseEnter={() => {setState(true); onMouseEnter?.()}}\r\n          onMouseLeave={() => {setState(false); onMouseLeave?.()}}\r\n          src={listIcon}\r\n          alt=\"\"\r\n          className={styles[\"list-icon\"]}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport tutorialStyles from \"./index.module.scss\";\r\nimport gameStyles from \"../../index.module.scss\";\r\nimport \"./index.scss\";\r\nimport ChefDialog from \"../ChefDialog\";\r\nimport Aisle from \"../../../../_components/Aisle\";\r\n// import Button from '../../../../_components/Button'\r\nimport TimerAnounce from '../../../../_components/TimerAnounce'\r\nimport {\r\n  cart,\r\n  checkout,\r\n  // ingredientsListBg,\r\n  // listCheck,\r\n  // listIcon,\r\n} from \"../../../../img\";\r\n// import { zeroFill } from \"../../../../_helpers\";\r\n// import { parser } from \"marked\";\r\nimport htmlparse from \"html-react-parser\";\r\nimport Recipe from \"../../../../_components/Recipe\";\r\n\r\nconst Tutorial = ({\r\n  chef,\r\n  aisle,\r\n  seconds,\r\n  shoppingCart,\r\n  ingredientsList,\r\n  hasPlayed,\r\n  addProduct,\r\n  removeProduct,\r\n  toPreviousAisle,\r\n  toNextAisle,\r\n  goToMarket,\r\n}) => {\r\n  const [state, setState] = React.useState({\r\n    step: 0,\r\n    tutorialLine: 0,\r\n    shopList: false,\r\n  });\r\n\r\n  const addProductNextLine = (product) => () => {\r\n    if (state.tutorialLine === 0) {\r\n      addProduct(product)();\r\n      setState({\r\n        ...state,\r\n        tutorialLine: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeProductNextLine = (index) => () => {\r\n    if (state.tutorialLine === 1) {\r\n      removeProduct(index)();\r\n      setState({ ...state, tutorialLine: 2 });\r\n    }\r\n  };\r\n\r\n  const toPreviousAisleNextLine = () => {\r\n    if (state.tutorialLine === 2) {\r\n      toPreviousAisle();\r\n      setState({ ...state, tutorialLine: 3 });\r\n    }\r\n  };\r\n\r\n  const toNextAisleNextLine = () => {\r\n    if (state.tutorialLine === 2) {\r\n      toNextAisle();\r\n      setState({ ...state, tutorialLine: 3 });\r\n    }\r\n  };\r\n\r\n  const shopListNextLine = () => {\r\n    console.log(state.shopList);\r\n    if (state.tutorialLine === 3 && !state.shopList)\r\n      setState({ ...state, shopList: !state.shopList });\r\n    else if (state.tutorialLine === 3 && state.shopList)\r\n      setState({ ...state, tutorialLine: 4, shopList: !state.shopList });\r\n  };\r\n\r\n  const tutorialText = [\r\n    [\"Clique em qualquer item para <strong>adicioná-lo</strong> ao carrinho.\", \"Click on any item to <strong>add it</strong> to your cart.\"],\r\n    [\"Clique em qualquer item do seu carrinho para <strong>retirá-lo</strong>.\", \"Click on any item from your cart to <strong>remove it</strong>.\"],\r\n    [\"Use as setas para navegar pelas prateleiras.\", \"Use the arrows to move through shelves.\"],\r\n    [\"<strong>Passe o mouse</strong> sobre o bloco de notas para ver a lista de compras.\", \"<strong>Hover the mouse</strong> over the notepad to see the shopping list.\"],\r\n    [\"Clique no ícone de dinheiro para finalizar sua compra.\", \"Click on the cash icon to checkout.\"]\r\n  ].map( (line, index) => {return {ptbr: line[0], preferred: line[1]} } )\r\n\r\n  const blobPosition = (state.tutorialLine === 2 || state.tutorialLine === 3) ? tutorialStyles.blobRight : tutorialStyles.blobLeft;\r\n\r\n  return (\r\n    <div id=\"room-itself\" className={\"tutorial tutorialStep\" + state.tutorialLine}>\r\n      {state.step === 0 && (\r\n        <div id={tutorialStyles.tutorialGrid}>\r\n          <div\r\n            className={tutorialStyles.tutorialBlob + \" \" + blobPosition}\r\n          >\r\n            {(state.tutorialLine >= 0 && state.tutorialLine <= 4) && (\r\n              <div>\r\n                <span lang=\"pt-br\">\r\n                  {htmlparse(tutorialText[state.tutorialLine].ptbr)}\r\n                </span>\r\n                <span lang=\"en\">\r\n                  {htmlparse(tutorialText[state.tutorialLine].preferred)}\r\n                </span>\r\n              </div>\r\n            )}\r\n            {hasPlayed && (\r\n              <button\r\n                className=\"btn btn-center\"\r\n                id={tutorialStyles.btnTutorial}\r\n                onClick={goToMarket}\r\n              >\r\n                Skip tutorial\r\n              </button>\r\n            )}\r\n          </div>\r\n          <Aisle\r\n            products={aisle}\r\n            addProduct={addProductNextLine}\r\n            toPreviousAisle={toPreviousAisleNextLine}\r\n            toNextAisle={toNextAisleNextLine}\r\n          />\r\n          <div className={gameStyles.cart}>\r\n            <div className={gameStyles.cartItems}>\r\n              {shoppingCart.map((product, index) => (\r\n                <div className={gameStyles.cartItem} key={index}>\r\n                  <img\r\n                    src={\r\n                      ingredientsList.find(\r\n                        (ingredient) => ingredient.name === product.name\r\n                      ).image\r\n                    }\r\n                    alt=\"\"\r\n                    onClick={removeProductNextLine(index)}\r\n                    className={gameStyles.cartItemImg}\r\n                  />\r\n                  <span>{product.count}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <img\r\n              src={cart}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <Recipe\r\n            ingredientsList={ingredientsList}\r\n            hasImage={true}\r\n            showCheck={(ingredient) => false}\r\n            iconShouldShow={state.tutorialLine === 3}\r\n            onMouseEnter={shopListNextLine}\r\n            onMouseLeave={shopListNextLine}\r\n          />\r\n          <img // Dinheiro\r\n            onClick={() =>\r\n              setState({\r\n                ...state,\r\n                step: 1,\r\n              })\r\n            }\r\n            src={checkout}\r\n            alt=\"\"\r\n            className={gameStyles.moneyIcon + \" tutorial-money-icon\"}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {state.step === 1 && (\r\n        <div id=\"dialog-interact\" style={{position: 'relative', width: '100%', height: '100%', fontSize: '0.75em'}}>\r\n          <ChefDialog chef={chef} onContinue={() => setState({...state, step: 2 }) }\r\n            text=\"Agora você está pronto para começar as compras! Coloque tudo que está na lista no carrinho antes que o tempo acabe!\"\r\n            translation={\"Now you're ready to start shopping! Put everything on the list in the cart before time runs out!\"}/>\r\n        </div>\r\n      )}\r\n\r\n      {state.step === 2 &&\r\n        <TimerAnounce seconds={seconds} onReady={goToMarket}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport ButtonConfirm from '../../../../_components/Button'\r\nimport { wallet } from '../../../../img'\r\n\r\n\r\nconst Payment = ({onConfirm, moneyList}) => {\r\n  const [state, setState] = React.useState({payment:[]})\r\n\r\n  const addToPayment = (money) => () => {\r\n    const index = state.payment.findIndex(\r\n      (moneyObj) => moneyObj.value === money\r\n    );\r\n    let paymentUpdate = [...state.payment];\r\n\r\n    if (index >= 0) paymentUpdate[index].count += 1;\r\n    else paymentUpdate.push({ value: money, count: 1 });\r\n    setState({\r\n      ...state,\r\n      payment: paymentUpdate,\r\n    });\r\n  };\r\n\r\n  const removeFromPayment = (value) => () => {\r\n    let paymentUpdate = [...state.payment];\r\n    let money = paymentUpdate.find( m => m.value === value)\r\n    if (money.count > 1) money.count -= 1;\r\n    else{\r\n      let index = paymentUpdate.indexOf(money)\r\n      paymentUpdate = [\r\n        ...state.payment.slice(0, index),\r\n        ...state.payment.slice(index + 1),\r\n      ];\r\n    }\r\n    setState({\r\n      ...state,\r\n      payment: paymentUpdate,\r\n    });\r\n  };\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <div style={{position: 'absolute', height: '20%', top: '25%', width: '60%', right: 0,\r\n        display: 'grid', gridTemplateRows: '33% 33% 33%', gridTemplateColumns: '20% 20% 20% 20% 20%', gridRowGap: '10%'}}className=\"selected-money\">\r\n        {state.payment.filter(m => m.value > 1).map((money, index) => (\r\n          <div key={index} style={{position: 'relative'}}>\r\n            <img\r\n              style={{height: '100%'}}\r\n              src={moneyList.find((moneyObj) => moneyObj.value === money.value).image.url}\r\n              alt=\"\"\r\n              onClick={removeFromPayment(money.value)}\r\n            />\r\n            <div style={{position: 'absolute', left: -10, top: -10,\r\n              backgroundColor: '#F9AFA1', width: 20, height: 20, borderRadius: 10, textAlign: 'center'}}\r\n            >\r\n              {money.count}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {state.payment.filter(m => m.value <= 1).map((money, index) => (\r\n          <div key={index} style={{position: 'relative', gridColumnStart: (index + 1) % 5 }}>\r\n            <img\r\n              style={{height: '100%'}}\r\n              src={moneyList.find((moneyObj) => moneyObj.value === money.value).image.url}\r\n              alt=\"\"\r\n              onClick={removeFromPayment(money.value)}\r\n            />\r\n            <div style={{position: 'absolute', left: -10, top: -10,\r\n              backgroundColor: '#F9AFA1', width: 20, height: 20, borderRadius: 10, textAlign: 'center'}}\r\n            >\r\n              {money.count}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{position: 'absolute', right: 0, bottom: '10%', width: '60%'}}>\r\n        <div style={{position: 'relative', backgroundColor:'#cbe7de', borderRadius: 50}}>\r\n          <div style={{display: 'grid', gridTemplateColumns: '25% 25% 25% 25%', padding: '5% 25% 5% 5%'}}>\r\n            {moneyList.filter(money => money.value > 1).map((money, index) => (\r\n              <Button key={index} onClick={addToPayment(money.value)}>\r\n                <img\r\n                  style={{ width: 110 }}\r\n                  src={money.image.url}\r\n                  alt=\"money\"\r\n                />\r\n              </Button>\r\n            ))}\r\n            <div style={{display: 'grid', gridTemplateRows: '50% 50%', gridTemplateColumns: '33% 33% 33%'}}>\r\n              {moneyList.filter(money => money.value <= 1).map((money, index) => (\r\n                <Button key={index} onClick={addToPayment(money.value)}>\r\n                  <img\r\n                    style={{ width: 20 }}\r\n                    src={money.image.url}\r\n                    alt=\"money\"\r\n                  />\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <img style={{position: 'absolute', top: '-25%', right: '-10%', width: '35%'}}src={wallet} alt=\"\" />\r\n        </div>\r\n\r\n        <ButtonConfirm blink\r\n        style={{position: 'absolute', right: 60, bottom: -15}}\r\n          onClick={onConfirm(state.payment.reduce((acc, money) => acc + money.value * money.count, 0).toFixed(2))}\r\n        >\r\n          Continuar\r\n        </ButtonConfirm>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Payment\r\n","import React from 'react'\r\nimport styles from '../../index.module.scss'\r\nimport { cart as cartImg } from '../../../../img'\r\n\r\nconst ShopCart = ({cart, ingredientList, onItemClick}) => {\r\n  return(\r\n      <div className={styles.cart}>\r\n        <div className={styles.cartItems}>\r\n          {cart.map((product, index) => (\r\n            <div className={styles.cartItem} key={index}>\r\n              <img style={{width: '100%'}}\r\n                src={\r\n                  ingredientList.find(\r\n                    (ingredient) =>\r\n                      ingredient.name === product.name\r\n                  ).image\r\n                }\r\n                alt=\"\"\r\n                onClick={onItemClick(index)}\r\n                className={styles.cartItemImg + ' inflate'}\r\n              />\r\n              <span>{product.count}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <img src={cartImg} alt=\"\" />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ShopCart\r\n","import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./index.scss\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nimport {\r\n  goRound,\r\n  splitArrayIntoChunksOfLen,\r\n  zeroFill,\r\n  numberToMoney,\r\n  shuffle,\r\n} from \"../../_helpers\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\n// import Button from \"@material-ui/core/Button\";\r\n\r\nimport initialState from \"./initialState\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Timer from \"../../_components/Timer\";\r\nimport Aisle from \"../../_components/Aisle\";\r\nimport Intro from \"./components/Intro\";\r\nimport Tutorial from \"./components/Tutorial\";\r\n// import DialogCharacter from \"../../_components/DialogCharacter\";\r\nimport ChefDialog from \"./components/ChefDialog\";\r\nimport Payment from \"./components/Payment\";\r\nimport ShopCart from \"./components/ShopCart\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {\r\n  cart,\r\n  // ingredientsListBg,\r\n  // recipeBg,\r\n  // listCheck,\r\n  // listIcon,\r\n  checkout,\r\n  // wallet,\r\n  blobLaranja,\r\n  hourglassFull,\r\n  hourglassEmpty,\r\n  cashierTable,\r\n  cashierBg,\r\n  bigBlob,\r\n} from \"../../img\";\r\nimport Recipe from \"../../_components/Recipe\";\r\n\r\nconst endGameLines = [\r\n  {\r\n    text: \"Fazer compras pode ser mais complicado do que parece.\",\r\n    translation:\r\n      \"Time is up! Doing the groceries might be harder than it looks.\",\r\n  },\r\n  {\r\n    text: \"Você finalizou em:\",\r\n    translation: \"Finished in:\",\r\n  },\r\n];\r\n\r\nconst Game3 = (props) => {\r\n  const [state, setState] = React.useState({ ...initialState() });\r\n  const dispatch = useDispatch();\r\n  const id = props.match.params.id;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  let missionData = mission ? mission.missionData : null;\r\n\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const timesPlayed = useSelector((state) => state.game.items.resultsCount);\r\n\r\n  const onStartGame = () => {\r\n    setState({ ...state, scene: \"INTRO\" });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (mission)\r\n      dispatch(\r\n        musicActions.set(\r\n          mission.backgroundAudio ? mission.backgroundAudio.url : \"\"\r\n        )\r\n      );\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  React.useEffect(() => {\r\n    if (mission) {\r\n      if (!state.checkedPlayed) {\r\n        dispatch(\r\n          gameActions.find(\"results/count\", {\r\n            user: userId,\r\n            mission: mission.id,\r\n          })\r\n        );\r\n        setState({ ...state, checkedPlayed: true });\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, state.checkedPlayed]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      missionData &&\r\n      state.ingredientsList.length === 0 &&\r\n      timesPlayed !== undefined\r\n    ) {\r\n      let initTime =\r\n        missionData.seconds - 30 * (timesPlayed > 2 ? 2 : timesPlayed);\r\n      let remainingTime = initTime;\r\n\r\n      let recipe =\r\n        missionData.recipes[\r\n          Math.floor(Math.random() * missionData.recipes.length)\r\n        ];\r\n\r\n      let resumeRecipe = {\r\n        id: recipe.id,\r\n        name: recipe.name,\r\n        nameTranslate: recipe.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).text,\r\n        description: recipe.description,\r\n        descriptionTranslate: recipe.descriptionTranslate.find(\r\n          (description) => {\r\n            return description.language.id === lang;\r\n          }\r\n        ).text,\r\n        image: recipe.image ? recipe.image.url : \"\",\r\n      };\r\n\r\n      let aisles;\r\n      let ingredientsList = recipe.ingredients.map((ingredient) => {\r\n        return {\r\n          name: ingredient.asset.name,\r\n          description: ingredient.description,\r\n          type: ingredient.type,\r\n          image: ingredient.asset.image ? ingredient.asset.image.url : \"\",\r\n          shelfImage: ingredient.asset.image ? ingredient.asset.image.url : \"\",\r\n          tag:\r\n            ingredient.measure === \"unidade\"\r\n              ? `R$ ${ingredient.price.toFixed(2)}`\r\n              : `R$ ${(\r\n                  ingredient.price *\r\n                  (100 / ingredient.unityValue)\r\n                ).toFixed(2)}/100${ingredient.measure}`,\r\n          tooltip:\r\n            ingredient.measure === \"unidade\"\r\n              ? 1\r\n              : `${ingredient.unityValue}${ingredient.measure}`,\r\n          unityValue:\r\n            ingredient.measure === \"unidade\" ? 1 : ingredient.unityValue,\r\n          quantity: ingredient.quantity,\r\n          price: ingredient.price,\r\n          shelfCount: 10,\r\n        };\r\n      });\r\n\r\n      if (missionData.separation === \"aislesCount\") {\r\n        aisles = splitArrayIntoChunksOfLen(\r\n          shuffle(ingredientsList),\r\n          missionData.aisles\r\n        );\r\n      } else {\r\n        aisles = ingredientsList.reduce((acc, ingredient) => {\r\n          acc[ingredient.type] = [...(acc[ingredient.type] || []), ingredient];\r\n          return acc;\r\n        }, {});\r\n\r\n        aisles = Object.keys(aisles).reduce((acc, aisle) => {\r\n          return [...acc, aisles[aisle]];\r\n        }, []);\r\n      }\r\n\r\n      setState((state) => {\r\n        return {\r\n          ...state,\r\n          recipe: resumeRecipe,\r\n          aisles,\r\n          ingredientsList,\r\n          remainingTime,\r\n          initTime,\r\n        };\r\n      });\r\n    }\r\n  }, [missionData, state.ingredientsList, timesPlayed, lang]);\r\n\r\n  const addProduct = (product) => () => {\r\n    const index = state.cart.findIndex(\r\n      (ingredient) => ingredient.name === product\r\n    );\r\n    let cartUpdate = [...state.cart];\r\n\r\n    if (index >= 0) cartUpdate[index].count += 1;\r\n    else cartUpdate.push({ name: product, count: 1 });\r\n\r\n    setState({\r\n      ...state,\r\n      cart: cartUpdate,\r\n    });\r\n  };\r\n  const removeProduct = (index) => () => {\r\n    let cartUpdate = [...state.cart];\r\n\r\n    if (cartUpdate[index].count > 1) cartUpdate[index].count -= 1;\r\n    else\r\n      cartUpdate = [\r\n        ...state.cart.slice(0, index),\r\n        ...state.cart.slice(index + 1),\r\n      ];\r\n\r\n    setState({\r\n      ...state,\r\n      cart: cartUpdate,\r\n    });\r\n  };\r\n\r\n  const toPreviousAisle = () => {\r\n    setState({\r\n      ...state,\r\n      currentAisle: goRound(state.currentAisle - 1, state.aisles.length),\r\n    });\r\n  };\r\n\r\n  const toNextAisle = () => {\r\n    setState({\r\n      ...state,\r\n      currentAisle: goRound(state.currentAisle + 1, state.aisles.length),\r\n    });\r\n  };\r\n\r\n  const checkShoppingList = (ingredient) => {\r\n    let cartIngredient = state.cart.find(\r\n      (cartItem) => cartItem.name === ingredient.name\r\n    );\r\n    if (!cartIngredient) return false;\r\n    if (cartIngredient.count * ingredient.unityValue !== ingredient.quantity)\r\n      return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  const haveAll = () => {\r\n    for (let i = 0; i < state.ingredientsList.length; i++) {\r\n      if (!checkShoppingList(state.ingredientsList[i])) return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const moveToCheckout = () => {\r\n    let haveAllValue = haveAll();\r\n    let price = state.cart\r\n      .reduce(\r\n        (acc, product) =>\r\n          acc +\r\n          state.ingredientsList.find(\r\n            (ingredient) => ingredient.name === product.name\r\n          ).price *\r\n            product.count,\r\n        0\r\n      )\r\n      .toFixed(2);\r\n    var updateState = {\r\n      scene: \"CASHIER\",\r\n      checkoutConfirm: false,\r\n      cashierLines: haveAllValue\r\n        ? {\r\n            text: `Maravilha! Sua compra deu ${numberToMoney(\r\n              price\r\n            )}. Agora você só precisa selecionar a quatidade correta de dinheiro. Fique atento ao limite de tempo.`,\r\n            translation: `Wonderful! That's ${numberToMoney(\r\n              price\r\n            )}. Now all you have to do is select the right amount of money. Mind the time limit.`,\r\n          }\r\n        : {\r\n            text: `Você selecionou ${\r\n              getWrongItemsInCart().length\r\n            } ingrediente(s) incorretamente!`,\r\n            translation: `You selected ${\r\n              getWrongItemsInCart().length\r\n            } ingredient(s) incorrectly!`,\r\n          },\r\n      price: price,\r\n    };\r\n    updateState.cashierContinue = haveAllValue\r\n      ? () =>\r\n          setState({\r\n            ...state,\r\n            ...updateState,\r\n            runTimer: true,\r\n            moneySelection: true,\r\n          })\r\n      : () =>\r\n          setState({\r\n            ...state,\r\n            ...updateState,\r\n            scene: \"MARKET\",\r\n            runTimer: true,\r\n            checkoutConfirm: false,\r\n          });\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const doPayment = (value) => {\r\n    let cashierLines;\r\n    let change = value - state.price;\r\n    if (change < 0)\r\n      cashierLines = {\r\n        text:\r\n          \"Nossos patrocinadores vão ter que me pagar um extra para completar sua compra.\",\r\n        translation:\r\n          \"Our sponsors will need to give me an extra to pay for the rest of your purchase.\",\r\n      };\r\n    else if (change > 0)\r\n      cashierLines = {\r\n        text: \"Bem... Obrigada pela gorjeta!\",\r\n        translation: \"Well... Thanks for the tip!\",\r\n      };\r\n    //if( value === 0)\r\n    else\r\n      cashierLines = {\r\n        text:\r\n          \"Você pagou exatamente o que devia para o caixa do supermercado! Mexer com dinheiro é contigo mesmo!\",\r\n        translation:\r\n          \"You gave the exact amout to the supermarket's cashier! Dealing with money is clearly not a problem for you!\",\r\n      };\r\n\r\n    setState((s) => ({\r\n      ...s,\r\n      cashierContinue: () => endGame(false),\r\n      cashierLines: cashierLines,\r\n      change: change,\r\n      moneySelection: false,\r\n      runTimer: false,\r\n    }));\r\n  };\r\n\r\n  const getWrongItemsInCart = () =>\r\n    state.ingredientsList\r\n      .filter((ingredient) => {\r\n        return !checkShoppingList(ingredient);\r\n      })\r\n      .map((ingredient) => ({\r\n        ingredient: ingredient.name,\r\n        rightQuantity: ingredient.quantity,\r\n        userQuantity: state.cart.hasOwnProperty(ingredient.name)\r\n          ? state.cart[ingredient.name] * ingredient.unityValue\r\n          : 0,\r\n      }));\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(false) });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const endGame = (timeUp) => {\r\n    setState((s) => ({\r\n      ...s,\r\n      scene: \"END_GAME\",\r\n      timeUp: timeUp,\r\n    }));\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n\r\n    let wrongIngredients = getWrongItemsInCart();\r\n\r\n    dispatch(\r\n      gameActions.create(\"results\", {\r\n        user: userId,\r\n        mission: mission.id,\r\n        secondsTaken: timeUp\r\n          ? state.initTime + 1\r\n          : state.initTime - state.remainingTime,\r\n        recipe: state.recipe.id,\r\n        rightPayment: state.change === 0,\r\n        won: state.change === 0 && !timeUp && wrongIngredients.length === 0,\r\n        wrongIngredients:\r\n          wrongIngredients.length > 0 ? JSON.stringify(wrongIngredients) : null,\r\n      })\r\n    );\r\n  };\r\n\r\n  //const { mission } = state\r\n  //\r\n  return (\r\n    <React.Fragment>\r\n      {!mission ? (\r\n        <div>Loading..</div>\r\n      ) : (\r\n        <React.Fragment>\r\n          {(function renderScene() {\r\n            switch (state.scene) {\r\n              case \"INIT\":\r\n                return (\r\n                  <Init\r\n                    icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                    name={mission.name}\r\n                    description={mission.description}\r\n                    nameTranslate={\r\n                      mission.nameTranslate.find((name) => {\r\n                        return name.language.id === lang;\r\n                      }).name\r\n                    }\r\n                    descriptionTranslate={\r\n                      mission.descriptionTranslate.find((description) => {\r\n                        return description.language.id === lang;\r\n                      }).description\r\n                    }\r\n                    onStart={onStartGame}\r\n                    onBack={() => setState({ ...state, back: true })}\r\n                    ready={state.ingredientsList.length > 0}\r\n                  />\r\n                );\r\n              case \"INTRO\":\r\n                return (\r\n                  <Intro\r\n                    recipe={state.recipe}\r\n                    chef={missionData.character}\r\n                    ingredientsList={state.ingredientsList}\r\n                    goToTutorial={() =>\r\n                      setState({ ...state, scene: \"TUTORIAL\" })\r\n                    }\r\n                  />\r\n                );\r\n              case \"TUTORIAL\":\r\n                return (\r\n                  <Tutorial\r\n                    chef={missionData.character}\r\n                    seconds={state.initTime}\r\n                    hasPlayed={timesPlayed > 0}\r\n                    aisle={state.aisles[state.currentAisle]}\r\n                    shoppingCart={state.cart}\r\n                    ingredientsList={state.ingredientsList}\r\n                    addProduct={addProduct}\r\n                    removeProduct={removeProduct}\r\n                    toPreviousAisle={toPreviousAisle}\r\n                    toNextAisle={toNextAisle}\r\n                    goToMarket={() =>\r\n                      setState({\r\n                        ...state,\r\n                        scene: \"MARKET\",\r\n                        currentAisle: 0,\r\n                        cart: [],\r\n                      })\r\n                    }\r\n                  />\r\n                );\r\n              case \"MARKET\":\r\n                return (\r\n                  <React.Fragment>\r\n                    <Timer\r\n                      style={{ position: \"absolute\", top: \"5%\", left: \"50%\" }}\r\n                      run={state.runTimer}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) =>\r\n                        setState({ ...state, remainingTime: remaining })\r\n                      }\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n                    <Recipe\r\n                      ingredientsList={state.ingredientsList}\r\n                      hasImage={true}\r\n                      showCheck={(ingredient) => checkShoppingList(ingredient)}\r\n                      iconShouldShow={!state.checkout && !state.checkoutConfirm}\r\n                    />\r\n\r\n                    {!state.checkout && !state.checkoutConfirm && (\r\n                      <div id={styles.gameGrid}>\r\n                        <Aisle\r\n                          products={state.aisles[state.currentAisle]}\r\n                          addProduct={addProduct}\r\n                          toPreviousAisle={toPreviousAisle}\r\n                          toNextAisle={toNextAisle}\r\n                        />\r\n\r\n                        <img\r\n                          onClick={() =>\r\n                            setState({\r\n                              ...state,\r\n                              checkoutConfirm: true,\r\n                              runTimer: false,\r\n                              shopList: false,\r\n                            })\r\n                          }\r\n                          src={checkout}\r\n                          alt=\"\"\r\n                          className={styles.moneyIcon}\r\n                        />\r\n\r\n                        <ShopCart\r\n                          cart={state.cart}\r\n                          ingredientList={state.ingredientsList}\r\n                          onItemClick={removeProduct}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.checkoutConfirm && (\r\n                      <div className={styles.confirmScreen}>\r\n                        <div className={styles.cartItems}>\r\n                          {state.cart.map((product, index) => (\r\n                            <div className={styles.cartItem} key={index}>\r\n                              <img\r\n                                src={\r\n                                  state.ingredientsList.find(\r\n                                    (ingredient) =>\r\n                                      ingredient.name === product.name\r\n                                  ).image\r\n                                }\r\n                                alt=\"\"\r\n                                onClick={removeProduct(index)}\r\n                                className={styles.cartItemImg}\r\n                              />\r\n                              <span>{product.count}</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <div className={styles.confirmBlob}>\r\n                          <div className={styles.blobSpans}>\r\n                            <span lang=\"pt-br\">\r\n                              Tem certeza que isso é tudo?\r\n                            </span>\r\n                            <span lang=\"en\">Are you sure that's all?</span>\r\n                          </div>\r\n                          <div className={styles.btns}>\r\n                            <button\r\n                              className=\"btn btn-center\"\r\n                              id=\"btn-back\"\r\n                              onClick={() =>\r\n                                setState({\r\n                                  ...state,\r\n                                  checkoutConfirm: false,\r\n                                  runTimer: true,\r\n                                })\r\n                              }\r\n                            >\r\n                              Voltar\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-center\"\r\n                              id=\"btn-start\"\r\n                              onClick={moveToCheckout}\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <img src={cart} alt=\"\" />\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              case \"CASHIER\":\r\n                return (\r\n                  <React.Fragment>\r\n                    <img\r\n                      style={{\r\n                        display: \"block\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        zIndex: -4,\r\n                      }}\r\n                      src={bigBlob}\r\n                      alt=\"bigBlob\"\r\n                    />\r\n                    <img\r\n                      style={{\r\n                        display: \"block\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        zIndex: -3,\r\n                      }}\r\n                      src={cashierBg}\r\n                      alt=\"\"\r\n                    />\r\n                    <Timer\r\n                      style={{ position: \"absolute\", top: \"5%\", left: \"50%\" }}\r\n                      run={state.runTimer}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) => {\r\n                        setState((s) => ({\r\n                          ...s,\r\n                          remainingTime: remaining,\r\n                        }));\r\n                      }}\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n                    <ChefDialog\r\n                      chefStyles={{ width: \"35%\" }}\r\n                      chef={missionData.character}\r\n                      hideDialog={state.moneySelection}\r\n                      chefFeeling={\r\n                        state.change < 0 ? \"wrongPayment\" : \"default\"\r\n                      }\r\n                      text={state.cashierLines.text}\r\n                      translation={state.cashierLines.translation}\r\n                      onContinue={state.cashierContinue}\r\n                    />\r\n                    <img\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: \"-10%\",\r\n                        zIndex: 3,\r\n                        width: \"35%\",\r\n                      }}\r\n                      src={cashierTable}\r\n                      alt=\"\"\r\n                    />\r\n                    {state.moneySelection && (\r\n                      <Payment\r\n                        moneyList={missionData.money}\r\n                        onConfirm={(value) => () => doPayment(value)}\r\n                      />\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              case \"END_GAME\":\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      padding: \"12% 20%\",\r\n                      backgroundColor: state.timeUp ? \" #F9AFA1\" : \"#D6E3F4\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        height: \"70%\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <div style={{ position: \"relative\" }}>\r\n                        <img\r\n                          style={{\r\n                            display: \"block\",\r\n                            height: 100,\r\n                            margin: \"0 auto\",\r\n                          }}\r\n                          src={state.timeUp ? hourglassEmpty : hourglassFull}\r\n                          alt=\"\"\r\n                        />\r\n                        {state.timeUp && (\r\n                          <div\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              fontSize: 36,\r\n                              fontFamily: \"Abril fatface\",\r\n                              color: \"rgb(89, 49, 109)\",\r\n                            }}\r\n                          >\r\n                            O tempo acabou!\r\n                          </div>\r\n                        )}\r\n                        <p\r\n                          lang=\"pt-br\"\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            fontFamily: \"Barlow\",\r\n                            fontSize: 24,\r\n                            color: \"rgb(89, 49, 109)\",\r\n                          }}\r\n                        >\r\n                          {endGameLines[state.timeUp ? 0 : 1].text}\r\n                        </p>\r\n                        <hr\r\n                          style={{\r\n                            display: \"block\",\r\n                            margin: \"5% auto\",\r\n                            width: \"30%\",\r\n                          }}\r\n                        />\r\n                        <p\r\n                          lang=\"en\"\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            fontFamily: \"Barlow\",\r\n                            color: \"rgb(89, 49, 109)\",\r\n                            fontStyle: \"italic\",\r\n                            fontSize: \"3em\",\r\n                          }}\r\n                        >\r\n                          {endGameLines[state.timeUp ? 0 : 1].translation}\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div\r\n                        style={{\r\n                          position: \"relative\",\r\n                          height: 300,\r\n                          width: \"100%\",\r\n                          paddingTop: 70,\r\n\r\n                          backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                          backgroundRepeat: \"no-repeat\",\r\n                          backgroundPosition: \"center center\",\r\n                          textAlign: \"center\",\r\n                          fontSize: 92,\r\n                          fontFamily: \"Abril fatface\",\r\n                          color: \"rgb(89, 49, 109)\",\r\n                        }}\r\n                      >\r\n                        {state.timeUp\r\n                          ? \"0:00\"\r\n                          : `${zeroFill(\r\n                              Math.floor(\r\n                                (state.initTime - state.remainingTime) / 60\r\n                              ).toString(),\r\n                              2\r\n                            )}\r\n                          :\r\n                          ${zeroFill(\r\n                            (\r\n                              (state.initTime - state.remainingTime) %\r\n                              60\r\n                            ).toString(),\r\n                            2\r\n                          )}`}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"block\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: \"10%\",\r\n                      }}\r\n                    >\r\n                      <div id=\"feedback-endGame-action-btns\">\r\n                        <Button onClick={restart}>Tentar novamente</Button>\r\n                        <Button\r\n                          onClick={() =>\r\n                            setState((s) => ({ ...s, back: true }))\r\n                          }\r\n                        >\r\n                          Sair do jogo\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              default:\r\n                return <div>Erro</div>;\r\n            }\r\n          })()}\r\n          {state.back && <Redirect to={\"/userspace\"} />}\r\n        </React.Fragment>\r\n      )}\r\n      {process.env.NODE_ENV === \"development\" && (\r\n        <div>\r\n          <button\r\n            style={{ position: \"absolute\", bottom: 0 }}\r\n            onClick={() => setState({ ...state, scene: \"MARKET\" })}\r\n          >\r\n            Pula tutorial\r\n          </button>\r\n          <button\r\n            style={{ position: \"absolute\", bottom: 0, left: 100 }}\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                scene: \"CASHIER\",\r\n                checkoutConfirm: false,\r\n                cashierLines: {\r\n                  text: `Maravilha! Sua compra deu ${numberToMoney(\r\n                    48.05\r\n                  )}. Agora você só precisa selecionar a quatidade correta de dinheiro. Fique atento ao limite de tempo.`,\r\n                  translation: `Wonderful! That's ${numberToMoney(\r\n                    48.05\r\n                  )}. Now all you have to do is select the right amount of money. Mind the time limit.`,\r\n                },\r\n                cashierContinue: () =>\r\n                  setState((s) => ({\r\n                    ...s,\r\n                    runTimer: true,\r\n                    moneySelection: true,\r\n                  })),\r\n                price: 48.05,\r\n              });\r\n            }}\r\n          >\r\n            Para o caixa: Compras certas\r\n          </button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Game3;\r\n","const initialState = (checkedPlayed = false) => {\r\n  return {\r\n    scene: \"INIT\",\r\n    runTimer: true,\r\n    initTime: 0,\r\n    remainingTime: 0,\r\n    timeUp: false,\r\n    showRecipe: false,\r\n    ingredientsList: [],\r\n    recipe: {},\r\n    shuffledIngredients: [],\r\n    tablewares: [],\r\n    recipeContinue: false,\r\n    checkedPlayed: checkedPlayed,\r\n\r\n    showIngredients: true,\r\n    selectedIngredient: null,\r\n    tableIngredients: [],\r\n    sortNameIngredient: null,\r\n\r\n    shuffledName: [],\r\n    userLetterOrder: [],\r\n\r\n    tablewareImagePick: true,\r\n    shuffledTablewares: [],\r\n    shuffledTablewaresNames: [],\r\n    tablewareImageSelected: null,\r\n    tableTablewares: [],\r\n\r\n    // USER ERRORS\r\n    wrongIngredientSelected: [],\r\n    wrongIngredientNameOrder: [],\r\n    wrongTablewarePairSelected: [],\r\n    wrongTablewareSelected: [],\r\n\r\n    // NOTIFICATIONS\r\n    tutorialIngredientSelectionNotification: false,\r\n    tutorialIngredientNameSelectionNotification: false,\r\n    wrongIngredientNotification: false,\r\n    wrongIngredientNameNotification: false,\r\n    // wrongTablewareNotification: false,\r\n    wrongCombinationNotification: false,\r\n\r\n    // FEEDBACK\r\n    feedbackMessages: [],\r\n\r\n    // TUTORIAL\r\n    blobToShow: 0,\r\n    showBlob: true,\r\n  };\r\n};\r\n\r\nexport default initialState;\r\n","import { ButtonConfigs, Iniciar, Voltar } from \"../../../../_components/Button\";\r\nimport React from \"react\";\r\nimport { preventSingleWordBreak } from \"../../../../_helpers\";\r\nimport \"./index.scss\";\r\n\r\nconst FeedbackPanel = ({ feedback, restart, leave }) => {\r\n  const [state, setState] = React.useState(0);\r\n  const [showBtns, setShowBtns] = React.useState(false);\r\n  React.useEffect( () => {\r\n    if( state === 3) setShowBtns(true);\r\n  } );\r\n\r\n  return (\r\n    <div style={{position:\"relative\"}}>\r\n      <div className=\"feedback-panel\" id=\"feedback-panel\">\r\n        {state > 0 && (\r\n          <span\r\n            className=\"feedback-arrow feedback-arrow-previous\"\r\n            onClick={() => setState(state - 1)}\r\n          >\r\n            {\"❮\"}\r\n          </span>\r\n        )}\r\n        <div className=\"feedback-panel-content\">\r\n          <img\r\n            className=\"feedback-panel-img\"\r\n            src={feedback[state].image}\r\n            alt=\"feedback-panel-icon\"\r\n          />\r\n          <div className=\"feedback-panel-text\">\r\n            <span lang=\"pt-br\">\r\n              {preventSingleWordBreak(feedback[state].message)}\r\n            </span>\r\n            <span\r\n              lang=\"en\"\r\n              className=\"purple-line-before line-before-margin-30-auto italic\"\r\n            >\r\n              {preventSingleWordBreak(feedback[state].messageTranslate)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {state < feedback.length - 1 && (\r\n          <span\r\n            className=\"feedback-arrow feedback-arrow-next\"\r\n            onClick={() => setState(state + 1)}\r\n          >\r\n            {\"❯\"}\r\n          </span>\r\n        )}\r\n      </div>\r\n      {showBtns &&\r\n        <div className=\"jogo4-end-btns\">\r\n          <Voltar label={\"Tentar novamente\"} colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_6} onClick={restart} />\r\n          <Iniciar label={\"Sair do jogo\"} colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_3} onClick={leave} />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPanel;\r\n","import React from \"react\";\r\nimport { blobLaranja } from \"../../../../img\";\r\n\r\nimport { Button, ButtonConfigs } from \"../../../../_components/Button\";\r\n\r\nconst Tutorial = ({ blobToShow, onClickToEnd }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {blobToShow === 0 && (\r\n        <div className=\"overlay-tutorial-notification\">\r\n          <div className=\"overlay-tutorial-notification-content\">\r\n            {/* <img\r\n              src={blobLaranja}\r\n              alt=\"\"\r\n              className=\"tutorial-notification-blob\"\r\n            /> */}\r\n            <div className=\"tutorial-notification-message\">\r\n              <span lang=\"pt-br\">\r\n                Clique no ingrediente que você deseja colocar na bancada para\r\n                preparar a receita na ordem correta e então confirme.\r\n              </span>\r\n              <span lang=\"en\">\r\n                Click on the ingredient you want to put on the counter to\r\n                prepare the recipe in the correct order and then confirm.\r\n              </span>\r\n              <Button\r\n                blink\r\n                colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_3}\r\n                onClick={onClickToEnd}\r\n              >\r\n                Entendi! / Got it!\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {blobToShow === 1 && (\r\n        <div className=\"overlay-tutorial-notification\">\r\n          <div className=\"overlay-tutorial-notification-content\">\r\n            {/* <img src={blobLaranja} alt=\"\" className=\"tutorial-notification-blob\"/> */}\r\n            <div className=\"tutorial-notification-message\">\r\n              <span lang=\"pt-br\">\r\n                Selecione as letras na ordem correta para escrever o nome do\r\n                ingrediente.\r\n              </span>\r\n              <span lang=\"en\">\r\n                Select the letters in the correct order to write the name of the\r\n                ingredient.\r\n              </span>\r\n              <Button\r\n                blink\r\n                colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_3}\r\n                onClick={onClickToEnd}\r\n              >\r\n                Entendi! / Got it!\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { Link, Redirect } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Intro from \"../Game3/components/Intro\";\r\nimport ChefDialog from \"../Game3/components/ChefDialog\";\r\nimport Timer from \"../../_components/Timer\";\r\nimport Recipe from \"../../_components/Recipe\";\r\nimport {\r\n  Button,\r\n  ButtonConfigs,\r\n  Iniciar,\r\n  Voltar,\r\n} from \"../../_components/Button\";\r\n\r\nimport initialState from \"./initialState\";\r\n\r\nimport { zeroFill, shuffle } from \"../../_helpers\";\r\nimport {\r\n  // listIcon,\r\n  silverCloche,\r\n  hourglassEmpty,\r\n  hourglassFull,\r\n  right,\r\n  blobLaranja,\r\n  error,\r\n  tomato,\r\n  kitchen,\r\n} from \"../../img\";\r\nimport DialogCharacter from \"../../_components/DialogCharacter\";\r\nimport FeedbackPanel from \"./components/FeedbackPanel\";\r\nimport Tutorial from \"./components/Tutorial\";\r\n\r\nconst Game4 = (props) => {\r\n  const [state, setState] = React.useState({ ...initialState() });\r\n  const dispatch = useDispatch();\r\n  const id = props.match.params.id;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  let missionData = mission ? mission.missionData : null;\r\n\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const timesPlayed = useSelector((state) => state.game.items.resultsCount);\r\n\r\n  React.useEffect(() => {\r\n    if (mission)\r\n      dispatch(\r\n        musicActions.set(\r\n          mission.backgroundAudio ? mission.backgroundAudio.url : \"\"\r\n        )\r\n      );\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  React.useEffect(() => {\r\n    if (mission) {\r\n      if (!state.checkedPlayed) {\r\n        dispatch(\r\n          gameActions.find(\"results/count\", {\r\n            user: userId,\r\n            mission: mission.id,\r\n          })\r\n        );\r\n        setState({ ...state, checkedPlayed: true });\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, state.checkedPlayed]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      missionData &&\r\n      state.ingredientsList.length === 0 &&\r\n      timesPlayed !== undefined\r\n    ) {\r\n      let initTime =\r\n        missionData.seconds - 60 * (timesPlayed > 2 ? 2 : timesPlayed);\r\n      let remainingTime = initTime;\r\n\r\n      // safe copies\r\n\r\n      let recipe =\r\n        missionData.recipes[\r\n          Math.floor(Math.random() * missionData.recipes.length)\r\n        ];\r\n\r\n      let resumeRecipe = {\r\n        id: recipe.id,\r\n        name: recipe.name,\r\n        nameTranslate: recipe.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).text,\r\n        description: recipe.description,\r\n        descriptionTranslate: recipe.descriptionTranslate.find(\r\n          (description) => {\r\n            return description.language.id === lang;\r\n          }\r\n        ).text,\r\n        image: recipe.image ? recipe.image.url : \"\",\r\n      };\r\n\r\n      let ingredientsList = recipe.ingredients\r\n        .map((ingredient) => {\r\n          return {\r\n            name: ingredient.asset.name,\r\n            description: ingredient.description,\r\n            order: ingredient.order,\r\n            done: false,\r\n          };\r\n        })\r\n        .sort((a, b) => (a.order > b.order ? 1 : -1));\r\n\r\n      let shuffledIngredients = shuffle(\r\n        recipe.ingredients.map((ingredient) => {\r\n          return {\r\n            name: ingredient.asset.name,\r\n            shuffleName: ingredient.shuffleName.toUpperCase(),\r\n            nameShuffled: shuffle(\r\n              ingredient.shuffleName.toUpperCase().split(\"\")\r\n            ),\r\n            image: ingredient.asset.image ? ingredient.asset.image.url : \"\",\r\n            done: false,\r\n          };\r\n        })\r\n      );\r\n\r\n      let tablewares = recipe.tablewares.map((tableware) => {\r\n        return {\r\n          name: tableware.asset.name,\r\n          image: tableware.asset.image ? tableware.asset.image.url : \"\",\r\n          correct: tableware.correct,\r\n        };\r\n      });\r\n\r\n      setState((state) => {\r\n        return {\r\n          ...state,\r\n          recipe: resumeRecipe,\r\n          ingredientsList,\r\n          shuffledIngredients,\r\n          tablewares,\r\n          remainingTime,\r\n          initTime,\r\n        };\r\n      });\r\n    }\r\n  }, [missionData, state.ingredientsList, state.tablewares, timesPlayed, lang]);\r\n\r\n  const onStartGame = () => setState({ ...state, scene: \"INTRO\" });\r\n\r\n  const checkRightIngredient = () => {\r\n    let currentIngredient = state.ingredientsList.find(\r\n      (ingredient) => !ingredient.done\r\n    );\r\n\r\n    if (state.selectedIngredient.name !== currentIngredient.name) {\r\n      setState({\r\n        ...state,\r\n        wrongIngredientNotification: true,\r\n        wrongIngredientSelected: [\r\n          ...state.wrongIngredientSelected,\r\n          {\r\n            rightIngredient: currentIngredient.name,\r\n            userSelected: state.selectedIngredient.name,\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      let updatedState = {\r\n        showIngredients: false,\r\n        sortNameIngredient: state.selectedIngredient,\r\n        selectedIngredient: null,\r\n        shuffledName: state.selectedIngredient.nameShuffled.map((letter) => {\r\n          return {\r\n            letter: letter,\r\n            selected: false,\r\n          };\r\n        }),\r\n      };\r\n\r\n      console.log(\r\n        state.ingredientsList.findIndex(\r\n          (ingredient) => ingredient.name === currentIngredient.name\r\n        )\r\n      );\r\n\r\n      if (\r\n        state.ingredientsList.findIndex(\r\n          (ingredient) => ingredient.name === currentIngredient.name\r\n        ) === 0\r\n      ) {\r\n        updatedState.tutorialIngredientNameSelectionNotification = true;\r\n        // updatedState.runTimer = false;\r\n      }\r\n\r\n      if (state.blobToShow < 2) updatedState.showBlob = true;\r\n\r\n      setState({\r\n        ...state,\r\n        ...updatedState,\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkIngredientName = () => {\r\n    if (\r\n      state.sortNameIngredient.shuffleName ===\r\n      state.userLetterOrder.reduce((acc, letter) => acc + letter.letter, \"\")\r\n    ) {\r\n      let updateIngredientsList = state.ingredientsList.map((ingredient) => {\r\n        if (ingredient.name === state.sortNameIngredient.name)\r\n          return {\r\n            ...ingredient,\r\n            done: true,\r\n          };\r\n        return ingredient;\r\n      });\r\n\r\n      let updateShuffledIngredients = state.shuffledIngredients.map(\r\n        (ingredient) => {\r\n          if (ingredient.name === state.sortNameIngredient.name)\r\n            return {\r\n              ...ingredient,\r\n              done: true,\r\n            };\r\n          return ingredient;\r\n        }\r\n      );\r\n\r\n      if (\r\n        updateIngredientsList.find((ingredient) => !ingredient.done) ===\r\n        undefined\r\n      ) {\r\n        setState({\r\n          ...state,\r\n          doneCooking: true,\r\n          runTimer: false,\r\n        });\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          sortNameIngredient: null,\r\n          ingredientsList: updateIngredientsList,\r\n          shuffledIngredients: updateShuffledIngredients,\r\n          showIngredients: true,\r\n          userLetterOrder: [],\r\n          tableIngredients: [\r\n            ...state.tableIngredients,\r\n            state.sortNameIngredient,\r\n          ],\r\n          // showRecipe: true,\r\n          // recipeContinue: true,\r\n        });\r\n      }\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        wrongIngredientNameNotification: true,\r\n        wrongIngredientNameOrder: [\r\n          ...state.wrongIngredientNameOrder,\r\n          {\r\n            writeOrderName: state.sortNameIngredient.shuffleName,\r\n            userOrderInput: state.userLetterOrder.reduce(\r\n              (acc, letter) => acc + letter.letter,\r\n              \"\"\r\n            ),\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const clearIngredientName = () => {\r\n    setState({\r\n      ...state,\r\n      wrongIngredientNameNotification: false,\r\n      userLetterOrder: [],\r\n      shuffledName: state.sortNameIngredient.nameShuffled.map((letter) => {\r\n        return {\r\n          letter: letter,\r\n          selected: false,\r\n        };\r\n      }),\r\n    });\r\n  };\r\n\r\n  const addLetter = (letter, index) => () => {\r\n    let updateShuffedName = [...state.shuffledName];\r\n\r\n    updateShuffedName[index].selected = true;\r\n\r\n    setState({\r\n      ...state,\r\n      shuffledName: updateShuffedName,\r\n      userLetterOrder: [...state.userLetterOrder, letter],\r\n    });\r\n  };\r\n\r\n  const moveToServing = () => {\r\n    setState({\r\n      ...state,\r\n      scene: \"SERVE\",\r\n      runTimer: true,\r\n      shuffledTablewares: shuffle(\r\n        state.tablewares.map((tableware) => {\r\n          return {\r\n            name: tableware.name,\r\n            image: tableware.image,\r\n            correct: tableware.correct,\r\n            choosen: false,\r\n          };\r\n        })\r\n      ),\r\n      shuffledTablewaresNames: shuffle(\r\n        state.tablewares.reduce((acc, tableware) => {\r\n          return [...acc, { name: tableware.name, choosen: false }];\r\n        }, [])\r\n      ),\r\n      tutorialTablewareSelectionNotification: true,\r\n    });\r\n  };\r\n\r\n  const addTableware = (selectedTableware) => () => {\r\n    if (selectedTableware.name !== state.tablewareImageSelected.name) {\r\n      setState({\r\n        ...state,\r\n        wrongCombiantionNotification: true,\r\n        wrongTablewarePairSelected: [\r\n          ...state.wrongTablewarePairSelected,\r\n          {\r\n            imageSelected: state.tablewareImageSelected.name,\r\n            nameSelected: selectedTableware.name,\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        shuffledTablewaresNames: state.shuffledTablewaresNames.map(\r\n          (tableware) => {\r\n            if (tableware.name === selectedTableware.name)\r\n              return {\r\n                ...tableware,\r\n                choosen: true,\r\n              };\r\n\r\n            return tableware;\r\n          }\r\n        ),\r\n        shuffledTablewares: state.shuffledTablewares.map((tableware) => {\r\n          if (tableware.name === state.tablewareImageSelected.name)\r\n            return {\r\n              ...tableware,\r\n              choosen: true,\r\n            };\r\n\r\n          return tableware;\r\n        }),\r\n        tablewareImagePick: true,\r\n        tableTablewares: [\r\n          ...state.tableTablewares,\r\n          state.tablewareImageSelected,\r\n        ],\r\n        tablewareImageSelected: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkTableware = () => {\r\n    setState({\r\n      ...state,\r\n      wrongTablewareSelected: state.tableTablewares\r\n        .filter((tableware) => !tableware.correct)\r\n        .map((tableware) => {\r\n          return { name: tableware.name };\r\n        }),\r\n      endConfirmation: true,\r\n      runTimer: false,\r\n    });\r\n  };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(false) });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const endGame = (timeUp, saveResult = true) => {\r\n    setState({\r\n      ...state,\r\n      scene: \"END_GAME\",\r\n      timeUp: timeUp,\r\n      feedbackMessages: [\r\n        {\r\n          image: tomato,\r\n          message: state.wrongIngredientSelected.length\r\n            ? \"Você se atrapalhou um pouco, mas conseguiu pegar as quantidades certas de ingredientes no final!\"\r\n            : \"Você pegou os ingredientes certos de primeira!\",\r\n          messageTranslate: state.wrongIngredientSelected.length\r\n            ? \"You messed it up a bit but managed to get the right ingredientes!\"\r\n            : \"You picked the right ingredients on your first try!\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: state.wrongIngredientNameOrder.length\r\n            ? \"Dar nomes aos ingredientes te deu algum trabalho!\"\r\n            : \"Acertar os nomes foi moleza para você!\",\r\n          messageTranslate: state.wrongIngredientNameOrder.length\r\n            ? \"Naming the ingredients gave you some trouble!\"\r\n            : \"Getting the names right was a piece of cake for you!\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: state.wrongTablewarePairSelected.length\r\n            ? \"Você teve um pouco de dificuldade em ligar os utensílios aos seus nomes.\"\r\n            : \"Ligar os utensílios aos seus nomes foi fácil para você!\",\r\n          messageTranslate: state.wrongTablewarePairSelected.length\r\n            ? \"Matching the kitchen utensils with their names was a bit tough for you.\"\r\n            : \"Matching the kitchen utensils with their names was pretty easy for you!\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: state.wrongTablewareSelected.length\r\n            ? \"E você tem alguns problemas sobre como servir sua comida...\"\r\n            : \"E você sabe exatamente onde servir sua comida!\",\r\n          messageTranslate: state.wrongTablewareSelected.length\r\n            ? \"And you've got some problems with how to serve your food...\"\r\n            : \"And you know exactly where to serve your food!\",\r\n        },\r\n      ],\r\n    });\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n\r\n    if (saveResult)\r\n      dispatch(\r\n        gameActions.create(\"results\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n          secondsTaken: timeUp\r\n            ? state.initTime + 1\r\n            : state.initTime - state.remainingTime,\r\n          recipe: state.recipe.id,\r\n          won: !timeUp,\r\n          wrongIngredientSelected: state.wrongIngredientSelected.length\r\n            ? JSON.stringify(state.wrongIngredientSelected)\r\n            : null,\r\n          wrongIngredientNameOrder: state.wrongIngredientNameOrder.length\r\n            ? JSON.stringify(state.wrongIngredientNameOrder)\r\n            : null,\r\n          wrongTablewarePairSelected: state.wrongTablewarePairSelected.length\r\n            ? JSON.stringify(state.wrongTablewarePairSelected)\r\n            : null,\r\n          wrongTablewareSelected: state.wrongTablewareSelected.length\r\n            ? JSON.stringify(state.wrongTablewareSelected)\r\n            : null,\r\n        })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {process.env.NODE_ENV === \"development\" && (\r\n        <div style={{ position: \"absolute\", zIndex: 100000000, top: 0 }}>\r\n          <button\r\n            onClick={() => setState({ ...state, runTimer: !state.runTimer })}\r\n          >\r\n            {state.runTimer ? \"Stop timer\" : \"Continue timer\"}\r\n          </button>\r\n          <button onClick={restart}>Restart</button>\r\n          <button onClick={() => endGame(false, false)}>End game win</button>\r\n          <button onClick={() => endGame(true, false)}>End game lose</button>\r\n          <button\r\n            onClick={() =>\r\n              setState({\r\n                ...state,\r\n                scene: \"COOK\",\r\n                tutorialIngredientSelectionNotification: true,\r\n              })\r\n            }\r\n          >\r\n            Cooking\r\n          </button>\r\n          <button onClick={moveToServing}>Serving</button>\r\n        </div>\r\n      )}\r\n      {mission ? (\r\n        //verificar se é possível generalizar esses gameX-wrapper\r\n        <React.Fragment>\r\n          {(function renderScene() {\r\n            switch (state.scene) {\r\n              case \"INIT\":\r\n                return (\r\n                  <Init\r\n                    icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                    name={mission.name}\r\n                    description={mission.description}\r\n                    nameTranslate={\r\n                      mission.nameTranslate.find((name) => {\r\n                        return name.language.id === lang;\r\n                      }).name\r\n                    }\r\n                    descriptionTranslate={\r\n                      mission.descriptionTranslate.find((description) => {\r\n                        return description.language.id === lang;\r\n                      }).description\r\n                    }\r\n                    onStart={onStartGame}\r\n                    onBack={() => setState({ ...state, back: true })}\r\n                    ready={state.ingredientsList.length > 0}\r\n                  />\r\n                );\r\n              case \"INTRO\":\r\n                return (\r\n                  <Intro\r\n                    recipe={state.recipe}\r\n                    chef={missionData.character}\r\n                    ingredientsList={state.ingredientsList}\r\n                    goToTutorial={() =>\r\n                      setState({\r\n                        ...state,\r\n                        scene: \"COOK\",\r\n                      })\r\n                    }\r\n                    seconds={state.remainingTime}\r\n                  />\r\n                );\r\n              case \"COOK\":\r\n                return (\r\n                  <React.Fragment>\r\n                    <img\r\n                      id=\"dialog-interact\"\r\n                      src={kitchen}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: -1,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    />\r\n                    {state.showBlob && (\r\n                      <Tutorial\r\n                        blobToShow={state.blobToShow}\r\n                        onClickToEnd={() =>\r\n                          setState((s) => ({\r\n                            ...s,\r\n                            blobToShow: s.blobToShow + 1,\r\n                            showBlob: false,\r\n                          }))\r\n                        }\r\n                      />\r\n                    )}\r\n                    <Timer\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"5%\",\r\n                        left: \"50%\",\r\n                        transform: \"translateX(-50%)\",\r\n                      }}\r\n                      run={state.runTimer && !state.showBlob}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) => {\r\n                        setState({\r\n                          ...state,\r\n                          remainingTime: remaining,\r\n                        });\r\n                      }}\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n\r\n                    {!state.doneCooking && state.showIngredients && (\r\n                      <Recipe\r\n                        ingredientsList={state.ingredientsList}\r\n                        hasImage={false}\r\n                        showCheck={(ingredient) => ingredient.done}\r\n                        iconShouldShow={!state.recipeContinue}\r\n                      />\r\n                    )}\r\n\r\n                    {!state.doneCooking &&\r\n                      (state.showIngredients ? (\r\n                        <div className=\"shuffled-ingredients\">\r\n                          {state.shuffledIngredients.map(\r\n                            (ingredient, index) => (\r\n                              <img\r\n                                key={\"suffled-ingredient-\" + index}\r\n                                src={ingredient.image}\r\n                                alt=\"\"\r\n                                onClick={() =>\r\n                                  setState({\r\n                                    ...state,\r\n                                    selectedIngredient: { ...ingredient },\r\n                                  })\r\n                                }\r\n                                style={{\r\n                                  opacity: ingredient.done ? 0 : 1,\r\n                                  pointerEvents: ingredient.done\r\n                                    ? \"none\"\r\n                                    : \"auto\",\r\n                                  width: \"12%\",\r\n                                }}\r\n                                className={\r\n                                  (state.selectedIngredient\r\n                                    ? ingredient.name ===\r\n                                      state.selectedIngredient.name\r\n                                      ? \"selected\"\r\n                                      : \"\"\r\n                                    : \"\") + \" ingredient-selection-img\"\r\n                                }\r\n                              />\r\n                            )\r\n                          )}\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"name-order-div absolute-center\">\r\n                          <div className=\"shuffled-letters\">\r\n                            {state.shuffledName.map((letter, index) => (\r\n                              <span\r\n                                key={index}\r\n                                onClick={addLetter(letter, index)}\r\n                                style={{\r\n                                  opacity: letter.selected ? 0 : 1,\r\n                                  pointerEvents: letter.selected\r\n                                    ? \"none\"\r\n                                    : \"auto\",\r\n                                }}\r\n                                className=\"letter\"\r\n                              >\r\n                                {letter.letter}\r\n                              </span>\r\n                            ))}\r\n                          </div>\r\n                          <div className=\"ordered-letters-div\">\r\n                            <div className=\"ordered-letters\">\r\n                              {state.userLetterOrder.reduce(\r\n                                (acc, letter) => acc + letter.letter,\r\n                                \"\"\r\n                              )}\r\n                            </div>\r\n                            <div className=\"ordered-letters-buttons\">\r\n                              <img\r\n                                onClick={clearIngredientName}\r\n                                src={error}\r\n                                alt=\"clear-ingredient-name\"\r\n                              />\r\n                              <img\r\n                                onClick={checkIngredientName}\r\n                                src={right}\r\n                                alt=\"check-ingredient-name\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n\r\n                    {state.wrongIngredientNotification && (\r\n                      <div className=\"overlay-error-notification\">\r\n                        {/* <img\r\n                          src={blobLaranja}\r\n                          alt=\"\"\r\n                          className=\"error-notification-blob absolute-center\"\r\n                        /> */}\r\n                        <div className=\"error-notification-message absolute-center\">\r\n                          <span lang=\"pt-br\">\r\n                            Esse item não é o que você precisa agora.\r\n                          </span>\r\n                          <span lang=\"en\">\r\n                            This is not the item that you need now.\r\n                          </span>\r\n                          <Iniciar\r\n                            label=\"Continuar\"\r\n                            onClick={() =>\r\n                              setState({\r\n                                ...state,\r\n                                selectedIngredient: null,\r\n                                wrongIngredientNotification: false,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.wrongIngredientNameNotification && (\r\n                      <div className=\"overlay-error-notification\">\r\n                        <div className=\"overlay-error-notification-content\">\r\n                          <div className=\"error-notification-message absolute-center\">\r\n                            <span lang=\"pt-br\">\r\n                              {state.userLetterOrder.reduce(\r\n                                (acc, letter) => acc + letter.letter,\r\n                                \"\"\r\n                              )}\r\n                              {\" não serve para sua receita.\"}\r\n                            </span>\r\n                            <span lang=\"en\">\r\n                              {state.userLetterOrder.reduce(\r\n                                (acc, letter) => acc + letter.letter,\r\n                                \"\"\r\n                              )}\r\n                              {\" doesn't work for your recipe.\"}\r\n                            </span>\r\n                            <Iniciar\r\n                              label=\"Continuar\"\r\n                              onClick={clearIngredientName}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {!state.doneCooking &&\r\n                      (state.showIngredients ? (\r\n                        <div className=\"counter\">\r\n                          {state.tableIngredients.map((ingredient, index) => (\r\n                            <img\r\n                              src={ingredient.image}\r\n                              alt={ingredient.name}\r\n                              key={ingredient.name}\r\n                              className=\"counter-ingredient\"\r\n                              style={{\r\n                                width:\r\n                                  (\r\n                                    100 / state.shuffledIngredients.length\r\n                                  ).toString() + \"%\",\r\n                              }}\r\n                            />\r\n                          ))}\r\n                          {state.selectedIngredient && (\r\n                            <Button\r\n                              id=\"btn-add-bancada\"\r\n                              blink\r\n                              onClick={checkRightIngredient}\r\n                            >\r\n                              Adicionar à bancada\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <div className=\"counter\"></div>\r\n                          <img\r\n                            src={state.sortNameIngredient.image}\r\n                            alt=\"\"\r\n                            className=\"counter-ingredient-solo absolute-center\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n\r\n                    {state.doneCooking && (\r\n                      <ChefDialog\r\n                        chef={missionData.character}\r\n                        onContinue={moveToServing}\r\n                        text={\r\n                          \"Parabéns! Parece bom, mas você não vai me servir na panela, né? Escolha <strong>três</strong> utensílios adequados para servir seu prato! Nem mais, nem menos.\"\r\n                        }\r\n                        translation={\r\n                          \"Congratulations! It looks good, but you're not going to serve me in the pan, are you? Choose <strong>three</strong> approppriate utensils to serve your dish! No more, no less.\"\r\n                        }\r\n                      />\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              case \"SERVE\":\r\n                return (\r\n                  <React.Fragment>\r\n                    <Timer\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"5%\",\r\n                        left: \"50%\",\r\n                        transform: \"translateX(-50%)\",\r\n                      }}\r\n                      run={state.runTimer}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) =>\r\n                        setState((s) => ({ ...s, remainingTime: remaining }))\r\n                      }\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n                    {!state.endConfirmation && (\r\n                      <React.Fragment>\r\n                        {state.wrongCombiantionNotification && (\r\n                          <div className=\"overlay-error-notification\">\r\n                            <div className=\"overlay-error-notification-content\">\r\n                              <img\r\n                                src={blobLaranja}\r\n                                alt=\"\"\r\n                                className=\"error-notification-blob absolute-center\"\r\n                              />\r\n                              <div className=\"error-notification-message absolute-center\">\r\n                                <span lang=\"pt-br\">\r\n                                  Esse não é o nome desse item.\r\n                                </span>\r\n                                <span lang=\"en\">\r\n                                  That isn't the name of this item.\r\n                                </span>\r\n                                <Iniciar\r\n                                  label={\"Continuar\"}\r\n                                  onClick={() =>\r\n                                    setState((s) => ({\r\n                                      ...s,\r\n                                      tablewareImagePick: true,\r\n                                      tablewareImageSelected: null,\r\n                                      wrongCombiantionNotification: false,\r\n                                    }))\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n\r\n                        {state.tutorialTablewareSelectionNotification && (\r\n                          <div className=\"smaller-tutorial-notification-message\">\r\n                            Quais 3 utensilios você vai escolher?\r\n                          </div>\r\n                        )}\r\n\r\n                        {state.tableTablewares.length === 3 && (\r\n                          <div className=\"serve-button\">\r\n                            <img\r\n                              onClick={() => checkTableware()}\r\n                              src={silverCloche}\r\n                              alt=\"\"\r\n                            />\r\n                            <span>Servir! / Serve!</span>\r\n                          </div>\r\n                        )}\r\n                        <div id=\"shuffled-stuff\">\r\n                          <div className=\"shuffled-tablewares\">\r\n                            {state.shuffledTablewares.map(\r\n                              (tableware, index) => {\r\n                                let tablewarePicked =\r\n                                  state.tablewareImageSelected;\r\n                                let amountChoosen =\r\n                                  state.tableTablewares.length;\r\n\r\n                                let wasThisPicked =\r\n                                  tablewarePicked === tableware;\r\n                                let canBePicked =\r\n                                  wasThisPicked ||\r\n                                  (amountChoosen < 3 &&\r\n                                    !tablewarePicked &&\r\n                                    !tableware.choosen);\r\n                                let shouldDim =\r\n                                  tablewarePicked && !wasThisPicked;\r\n\r\n                                let width =\r\n                                  100 / (state.shuffledTablewares.length + 1);\r\n                                let classes = \"tableware-selection-img\";\r\n                                if (canBePicked)\r\n                                  classes += \" pickable-tableware\";\r\n                                if (shouldDim) classes += \" dim-tableware\";\r\n                                if (tableware.choosen)\r\n                                  classes += \" choosen-tableware\";\r\n                                if (wasThisPicked)\r\n                                  classes += \" selected-tableware\";\r\n\r\n                                return (\r\n                                  <img\r\n                                    key={index}\r\n                                    src={tableware.image}\r\n                                    style={{ width: width + \"%\" }}\r\n                                    onClick={() =>\r\n                                      setState((s) => ({\r\n                                        ...s,\r\n                                        tutorialTablewareSelectionNotification: false,\r\n                                        tablewareImageSelected: tablewarePicked\r\n                                          ? null\r\n                                          : tableware,\r\n                                        tablewareImagePick: !!tablewarePicked,\r\n                                      }))\r\n                                    }\r\n                                    className={classes}\r\n                                    alt=\"\"\r\n                                  />\r\n                                );\r\n                              }\r\n                            )}\r\n                          </div>\r\n                          <div className=\"shuffled-tableware-names\">\r\n                            {state.shuffledTablewaresNames.map(\r\n                              (tableware, index) => {\r\n                                let classes = \"tableware-selection-name\";\r\n                                if (!!state.tablewareImageSelected)\r\n                                  classes += \" pickable-tableware-name\";\r\n                                if (tableware.choosen)\r\n                                  classes += \" choosen-tableware\";\r\n\r\n                                return (\r\n                                  <span\r\n                                    key={index}\r\n                                    className={classes}\r\n                                    onClick={addTableware(tableware)}\r\n                                  >\r\n                                    {tableware.name}\r\n                                  </span>\r\n                                );\r\n                              }\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          className=\"counter\"\r\n                          style={{ justifyContent: \"space-evenly\" }}\r\n                        >\r\n                          {state.tableTablewares.map((tableware, index) => (\r\n                            <img\r\n                              key={index}\r\n                              src={tableware.image}\r\n                              alt=\"\"\r\n                              className=\"table-tableware-space\"\r\n                            />\r\n                          ))}\r\n                          {[...Array(3 - state.tableTablewares.length)].map(\r\n                            (item, index) => (\r\n                              <div\r\n                                key={index}\r\n                                className=\"table-tableware-space\"\r\n                              ></div>\r\n                            )\r\n                          )}\r\n                        </div>\r\n                      </React.Fragment>\r\n                    )}\r\n\r\n                    {state.endConfirmation && (\r\n                      <ChefDialog\r\n                        chef={missionData.character}\r\n                        onContinue={() => endGame(false)}\r\n                        text={\r\n                          \"Parabéns! Você é o mais novo finalista do MestreCuca! Agora, aguarde a deliberação dos jurados.\"\r\n                        }\r\n                        translation={\r\n                          \"Congrats! You are the brand new finalist of MestreCuca! Now, wait while the judges decide.\"\r\n                        }\r\n                      />\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              case \"END_GAME\":\r\n                return (\r\n                  <div\r\n                    className={\r\n                      state.timeUp ? \"salmon-background\" : \"blue-background\"\r\n                    }\r\n                  >\r\n                    <div className=\"game-4-feedback absolute-center\">\r\n                      {state.timeUp ? (\r\n                        <div className=\"game-4-feedback-lose-wrapper\">\r\n                          <div className=\"game-4-feedback-lose\">\r\n                            <div className=\"game-4-feedback-lose-content\">\r\n                              <img src={hourglassEmpty} alt=\"hourglass-empty\" />\r\n                              <span className=\"abril-fatface game-4-time-up-title\">\r\n                                O tempo acabou!\r\n                              </span>\r\n                              <div className=\"game-4-time-up-text\">\r\n                                <span lang=\"pt-br\">\r\n                                  Preparar o prato perfeito não é uma tarefa\r\n                                  fácil!\r\n                                </span>\r\n                                <span\r\n                                  lang=\"en\"\r\n                                  className=\"italic white-line-before\"\r\n                                >\r\n                                  Time is up! Making the perfect dish is not an\r\n                                  easy task.\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div\r\n                              className=\"big-time-shower\"\r\n                              style={{\r\n                                backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                backgroundRepeat: \"no-repeat\",\r\n                                backgroundSize: \"contain\",\r\n                                backgroundPosition: \"center\",\r\n                              }}\r\n                            >\r\n                              <span className=\"absolute-center abril-fatface\">\r\n                                0:00\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"jogo4-end-no-time-btns\">\r\n                            <Voltar\r\n                              label={\"Tentar novamente\"}\r\n                              colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_6}\r\n                              onClick={restart}\r\n                            />\r\n                            <Iniciar\r\n                              label={\"Sair do jogo\"}\r\n                              colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_3}\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"game-4-feedback-win\">\r\n                          <div className=\"game-4-feedback-left\">\r\n                            <div className=\"game-4-finished-in\">\r\n                              <img src={hourglassFull} alt=\"hourglass-full\" />\r\n                              <div className=\"game-4-finished-in-text\">\r\n                                <span lang=\"pt-br\" className=\"abril-fatface\">\r\n                                  Você finalizou em:\r\n                                </span>\r\n                                <span\r\n                                  lang=\"en\"\r\n                                  className=\"salmon-line-before italic line-before-margin-top-5\"\r\n                                >\r\n                                  Finished in:\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div\r\n                              className=\"time-shower\"\r\n                              style={{\r\n                                backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                backgroundRepeat: \"no-repeat\",\r\n                                backgroundSize: \"contain\",\r\n                                backgroundPosition: \"center\",\r\n                              }}\r\n                            >\r\n                              <span className=\"absolute-center abril-fatface\">\r\n                                {zeroFill(\r\n                                  Math.floor(\r\n                                    (state.initTime - state.remainingTime) / 60\r\n                                  ).toString(),\r\n                                  2\r\n                                )}\r\n                                :\r\n                                {zeroFill(\r\n                                  (\r\n                                    (state.initTime - state.remainingTime) %\r\n                                    60\r\n                                  ).toString(),\r\n                                  2\r\n                                )}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <FeedbackPanel\r\n                            feedback={state.feedbackMessages}\r\n                            restart={restart}\r\n                            leave={() => setState({ ...state, back: true })}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              default:\r\n                return <div>Error</div>;\r\n            }\r\n          })()}\r\n          {state.back && <Redirect to=\"/userspace\" />}\r\n        </React.Fragment>\r\n      ) : (\r\n        <div>Loading..</div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Game4;\r\n","import React from \"react\";\r\n\r\nconst DressingCharacter = ({ character, clothes, onRemoveClick, ...props }) => {\r\n  return (\r\n    <div {...props}>\r\n      <img src={character.image} alt=\"character\" style={{ height: \"100%\" }} />\r\n\r\n      {Object.keys(clothes).map((label) =>\r\n        clothes[label].map((clothing, index) => (\r\n          <img\r\n            key={clothing.id}\r\n            src={clothing.image}\r\n            alt={clothing.name}\r\n            onClick={onRemoveClick(clothing)}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DressingCharacter;\r\n","import React from \"react\";\r\n\r\n// import Tabs from '@material-ui/core/Tabs'\r\n// import Tab from '@material-ui/core/Tab'\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Wardrobe = ({ wardrobe, onClothesClick, ...props }) => {\r\n  const [state, setState] = React.useState(Object.keys(wardrobe)[0]);\r\n  return (\r\n    <div {...props}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          backgroundColor: \"#ffcca9\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        {Object.keys(wardrobe).map((label, index) => (\r\n          <Button\r\n            key={index}\r\n            onClick={() => setState(label)}\r\n            style={{\r\n              flex: \"1 0 0px\",\r\n              backgroundColor: state === label ? \"#ffcca9\" : \"white\",\r\n            }}\r\n          >\r\n            {label}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"25% 25% 25% 25%\",\r\n          gridTemplateRows: \"20% 20% 20%\",\r\n          rowGap: \"10%\",\r\n          padding: \"5%\",\r\n          backgroundColor: \"#ffcca9\",\r\n        }}\r\n      >\r\n        {wardrobe[state].map((item, index) => (\r\n          <img\r\n            key={index}\r\n            style={{\r\n              cursor: \"pointer\",\r\n              height: \"100%\",\r\n              margin: \"0 auto\",\r\n              display: \"block\",\r\n              pointerEvents: item.picked ? \"none\" : \"auto\",\r\n              opacity: item.picked ? 0.3 : 1,\r\n            }}\r\n            onClick={onClothesClick(item)}\r\n            src={item.image}\r\n            alt={item.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wardrobe;\r\n","const initialState = () => ({\r\n  scene: \"INIT\",\r\n  chooseCharacterScreen: true,\r\n  choosenCharacter: null,\r\n  showInvitation: false,\r\n  proceedToDressingConfirmation: false,\r\n  dressingContext: false,\r\n  dressingTabIndex: 0,\r\n  rightTags: [],\r\n  invitation: {},\r\n  wardrobe: {},\r\n  characters: [],\r\n  clothes: {\r\n    Tronco: [],\r\n    Pernas: [],\r\n    Pés: [],\r\n    Acessórios: [],\r\n  },\r\n  readyAlert: false,\r\n\r\n  tutorialBlobsText: [\r\n    {\r\n      text: \"Clique no personagem que você deseja vestir.\",\r\n      textTranslate: \"Click on the character you wish to dress up.\",\r\n    },\r\n    {\r\n      text: \"Clique em um item para vesti-lo.\",\r\n      textTranslate: \"Click on any item to use it.\",\r\n    },\r\n    {\r\n      text: \"Clique novamente no item para coloca-lo no armário.\",\r\n      textTranslate: \"Click again to put it back in the closet.\",\r\n    },\r\n    {\r\n      text: \"Clique no convite para perguntar detalhes do evento.\",\r\n      textTranslate: \"Click on the envelope to ask questions about the event.\",\r\n    },\r\n    {\r\n      text: 'Clique em \"Estou pronto\" para ir para o evento!',\r\n      textTranslate: 'Click on \"Estou pronto\" to go to the event!',\r\n    },\r\n  ],\r\n\r\n  // INVITE\r\n  inviteQuestions: [],\r\n  showInviteAnswer: false,\r\n  showInviteQuestions: false,\r\n  inviteAnswer: \"\",\r\n\r\n  // NOTIFICATIONS\r\n  showBlob: true,\r\n  blobToShow: 0,\r\n  chooseCharacterScreenNotification: true,\r\n  showClothingSpaceTakenErrorNotification: false,\r\n});\r\n\r\nexport default initialState;\r\n","import React from \"react\";\r\n\r\nimport { Button, ButtonConfigs } from \"../../../../_components/Button\";\r\n\r\nconst Tutorial = ({ blobMessage, onClickToEnd }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"overlay-tutorial-notification\">\r\n        <div className=\"overlay-tutorial-notification-content\">\r\n          <div className=\"tutorial-notification-message\">\r\n            <span lang=\"pt-br\">{blobMessage.text}</span>\r\n            <span lang=\"en\">{blobMessage.textTranslate}</span>\r\n            <Button\r\n              blink\r\n              colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_3}\r\n              onClick={onClickToEnd}\r\n            >\r\n              Entendi! / Got it!\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nimport {\r\n  Button,\r\n  ButtonConfigs,\r\n  Iniciar,\r\n  Voltar,\r\n} from \"../../../../_components/Button\";\r\nimport { preventSingleWordBreak } from \"../../../../_helpers\";\r\n\r\nconst Notification = ({\r\n  blobMessage,\r\n  continueButtonLabel,\r\n  onClickToContinue,\r\n  backButtonLabel,\r\n  onClickToBack,\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"overlay-notification\">\r\n        <div className=\"notification-blob absolute-center\">\r\n          <div className=\"notification-content\">\r\n            <span lang=\"pt-br\">{preventSingleWordBreak(blobMessage.text)}</span>\r\n            <span lang=\"en\">\r\n              {preventSingleWordBreak(blobMessage.textTranslate)}\r\n            </span>\r\n\r\n            {backButtonLabel ? (\r\n              <div className=\"notification-buttons\">\r\n                <Voltar label={backButtonLabel} onClick={onClickToBack} />\r\n                <Iniciar\r\n                  label={continueButtonLabel}\r\n                  onClick={onClickToContinue}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"notification-buttons\">\r\n                <Button\r\n                  blink\r\n                  colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_3}\r\n                  onClick={onClickToContinue}\r\n                >\r\n                  {continueButtonLabel}\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { ButtonConfigs, Iniciar, Voltar } from \"../../../../_components/Button\";\r\nimport React from \"react\";\r\nimport { preventSingleWordBreak } from \"../../../../_helpers\";\r\nimport \"./index.scss\";\r\n\r\nconst FeedbackPanel = ({ feedback, won, restart, leave }) => {\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div className=\"feedback-panel\" id=\"feedback-panel\">\r\n        <div className=\"feedback-panel-content\">\r\n          <div\r\n            className=\"feedback-panel-column\"\r\n            style={{ width: 100 / feedback.length + \"%\" }}\r\n          >\r\n            <img\r\n              className=\"feedback-panel-img\"\r\n              src={feedback[0].image}\r\n              alt=\"feedback-panel-icon\"\r\n            />\r\n            <div className=\"feedback-panel-text\">\r\n              <span lang=\"pt-br\">\r\n                {preventSingleWordBreak(feedback[0].message)}\r\n              </span>\r\n              <span\r\n                lang=\"en\"\r\n                className=\"purple-line-before line-before-margin-30-auto italic\"\r\n              >\r\n                {preventSingleWordBreak(feedback[0].messageTranslate)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"feedback-panel-column\"\r\n            style={{ width: 100 / feedback.length + \"%\" }}\r\n          >\r\n            <img\r\n              className=\"feedback-panel-img\"\r\n              src={feedback[1].image}\r\n              alt=\"feedback-panel-icon\"\r\n            />\r\n            <div className=\"feedback-panel-text\">\r\n              <span lang=\"pt-br\">\r\n                {preventSingleWordBreak(feedback[1].message)}\r\n              </span>\r\n              <span\r\n                lang=\"en\"\r\n                className=\"purple-line-before line-before-margin-30-auto italic\"\r\n              >\r\n                {preventSingleWordBreak(feedback[1].messageTranslate)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {!won && (\r\n            <div\r\n              className=\"feedback-panel-column\"\r\n              style={{ width: 100 / feedback.length + \"%\" }}\r\n            >\r\n              <img\r\n                className=\"feedback-panel-img\"\r\n                src={feedback[2].image}\r\n                alt=\"feedback-panel-icon\"\r\n              />\r\n              <div className=\"feedback-panel-text\">\r\n                <span lang=\"pt-br\">\r\n                  {preventSingleWordBreak(feedback[2].message)}\r\n                </span>\r\n                <span\r\n                  lang=\"en\"\r\n                  className=\"purple-line-before line-before-margin-30-auto italic\"\r\n                >\r\n                  {preventSingleWordBreak(feedback[2].messageTranslate)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"jogo4-end-btns\">\r\n        <Voltar\r\n          label={\"Tentar novamente\"}\r\n          colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_6}\r\n          onClick={restart}\r\n        />\r\n        <Iniciar\r\n          label={\"Sair do jogo\"}\r\n          colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_3}\r\n          onClick={leave}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPanel;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nimport { Button, ButtonConfigs } from \"../../../../_components/Button\";\r\n\r\nconst TutorialWardrobe = ({ blobMessage, onClickToEnd, index }) => {\r\n  let blobPosition =\r\n    index === 1 ? \" blob-left\" : index === 2 ? \" blob-right\" : \" blob-center\";\r\n\r\n  console.log(blobPosition);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"overlay-tutorial-notification\">\r\n        <div className=\"overlay-tutorial-notification-content\">\r\n          <div className={\"tutorial-notification-message\" + blobPosition}>\r\n            <span lang=\"pt-br\">{blobMessage.text}</span>\r\n            <span lang=\"en\">{blobMessage.textTranslate}</span>\r\n            <Button\r\n              blink\r\n              colorScheme={ButtonConfigs.COLOR_SCHEMES.COR_3}\r\n              onClick={onClickToEnd}\r\n            >\r\n              Entendi! / Got it!\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TutorialWardrobe;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { Link, Redirect } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./index.scss\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport DressingCharacter from \"../../_components/DressingCharacter\";\r\nimport Wardrobe from \"../../_components/Wardrobe\";\r\nimport Button from \"../../_components/Button\";\r\nimport { BlobBg } from \"../../_components/Blob\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { tomato } from \"../../img\";\r\n\r\nimport initialState from \"./initialState\";\r\nimport Tutorial from \"./components/Tutorial\";\r\nimport Notification from \"./components/Notification\";\r\nimport Lamp from \"../../_components/Lamp\";\r\n\r\nimport { Iniciar, Voltar } from \"../../_components/Button\";\r\nimport FeedbackPanel from \"./components/FeedbackPanel\";\r\nimport { ContactSupportOutlined } from \"@material-ui/icons\";\r\nimport TutorialWardrobe from \"./components/TutorialWardrobe\";\r\n\r\nconst Game5 = (props) => {\r\n  const [state, setState] = React.useState({ ...initialState() });\r\n  const dispatch = useDispatch();\r\n  const id = props.match.params.id;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  let missionData = mission ? mission.missionData : null;\r\n\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const timesPlayed = useSelector((state) => state.game.items.resultsCount);\r\n\r\n  React.useEffect(() => {\r\n    if (mission)\r\n      dispatch(\r\n        musicActions.set(\r\n          mission.backgroundAudio ? mission.backgroundAudio.url : \"\"\r\n        )\r\n      );\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  React.useEffect(() => {\r\n    if (mission) {\r\n      if (!state.checkedPlayed) {\r\n        dispatch(\r\n          gameActions.find(\"results/count\", {\r\n            user: userId,\r\n            mission: mission.id,\r\n          })\r\n        );\r\n        setState({ ...state, checkedPlayed: true });\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, state.checkedPlayed]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      missionData &&\r\n      Object.keys(state.wardrobe).length === 0 &&\r\n      timesPlayed !== undefined\r\n    ) {\r\n      const wardrobeBody = [\"Tronco\", \"Pernas\", \"Pés\"];\r\n\r\n      let wardrobe = missionData.clothes.reduce((acc, clothing) => {\r\n        let clothingReduce = {\r\n          id: clothing.id,\r\n          name: clothing.asset.name,\r\n          cover: clothing.cover ?? \"default\",\r\n          image: clothing.asset.image ? clothing.asset.image.url : \"\",\r\n          category: clothing.tags.find((tag) => tag.type === \"category\").name,\r\n          color: clothing.tags.find((tag) => tag.type === \"color\").name,\r\n          time: clothing.tags\r\n            .filter((tag) => tag.type === \"time\")\r\n            .map((tag) => tag.name),\r\n          weather: clothing.tags\r\n            .filter((tag) => tag.type === \"weather\")\r\n            .map((tag) => tag.name),\r\n          picked: false,\r\n        };\r\n\r\n        if (wardrobeBody.includes(clothingReduce.category))\r\n          acc[clothingReduce.category] = [\r\n            ...(acc[clothingReduce.category] || []),\r\n            clothingReduce,\r\n          ];\r\n        else acc[\"Acessórios\"] = [...(acc[\"Acessórios\"] || []), clothingReduce];\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n      let characters = missionData.characters.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          image: character.characterAssets[0].image.url,\r\n        };\r\n      });\r\n\r\n      let invitation =\r\n        missionData.invites[\r\n          Math.floor(Math.random() * missionData.invites.length)\r\n        ];\r\n\r\n      let inviteQuestions = [\r\n        { question: \"Qual mês?\", answer: invitation.month, asked: false },\r\n        {\r\n          question: \"A que horas?\",\r\n          answer: \"Às \" + invitation.time.toLowerCase(),\r\n          asked: false,\r\n        },\r\n        {\r\n          question: \"Qual estação?\",\r\n          answer: \"No(a) \" + invitation.season.toLowerCase(),\r\n          asked: false,\r\n        },\r\n        {\r\n          question: \"Qual a previsão do tempo?\",\r\n          answer: invitation.weather,\r\n          asked: false,\r\n        },\r\n      ];\r\n\r\n      invitation = {\r\n        ...invitation,\r\n        rightTags: invitation.rightTags.map((tag) => tag.name),\r\n      };\r\n\r\n      setState((s) => {\r\n        return {\r\n          ...s,\r\n          wardrobe,\r\n          characters,\r\n          invitation,\r\n          inviteQuestions,\r\n        };\r\n      });\r\n    }\r\n  }, [missionData, state.wardrobe, timesPlayed, lang]);\r\n\r\n  const onStartGame = () => setState((s) => ({ ...state, scene: \"INTRO\" }));\r\n\r\n  const addClothesToBody = (item) => () => {\r\n    const wardrobeBody = [\"Tronco\", \"Pernas\", \"Pés\"];\r\n    var clothes = { ...state.clothes };\r\n\r\n    if (wardrobeBody.includes(item.category)) {\r\n      if (\r\n        (clothes[item.category].length !== 0 &&\r\n          (clothes[item.category].find(\r\n            (clothing) => clothing.cover === item.cover\r\n          ) ||\r\n            item.cover === \"inteiro\")) ||\r\n        (clothes[\"Tronco\"].find((clothing) => clothing.cover === \"inteiro\") &&\r\n          item.category !== \"Pés\" &&\r\n          item.cover === \"default\")\r\n      ) {\r\n        setState((s) => ({\r\n          ...s,\r\n          showClothingSpaceTakenErrorNotification: true,\r\n        }));\r\n      } else {\r\n        clothes[item.category] = [...clothes[item.category], item];\r\n\r\n        setState((s) => ({\r\n          ...s,\r\n          clothes: clothes,\r\n          wardrobe: {\r\n            ...s.wardrobe,\r\n            [item.category]: state.wardrobe[item.category].map((clothing) => {\r\n              if (clothing.id === item.id) return { ...clothing, picked: true };\r\n              return clothing;\r\n            }),\r\n          },\r\n        }));\r\n      }\r\n    } else {\r\n      if (\r\n        clothes[\"Acessórios\"].length !== 0 &&\r\n        clothes[\"Acessórios\"].find(\r\n          (clothing) => clothing.category === item.category\r\n        )\r\n      ) {\r\n        setState((s) => ({\r\n          ...s,\r\n          showClothingSpaceTakenErrorNotification: true,\r\n        }));\r\n      } else {\r\n        clothes[\"Acessórios\"] = [...clothes[\"Acessórios\"], item];\r\n\r\n        setState((s) => ({\r\n          ...s,\r\n          clothes: clothes,\r\n          wardrobe: {\r\n            ...s.wardrobe,\r\n            Acessórios: state.wardrobe[\"Acessórios\"].map((clothing) => {\r\n              if (clothing.id === item.id) return { ...clothing, picked: true };\r\n              return clothing;\r\n            }),\r\n          },\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeClothesFromBody = (item) => () => {\r\n    var clothes = { ...state.clothes };\r\n    const category = [\"Tronco\", \"Pernas\", \"Pés\"].includes(item.category)\r\n      ? item.category\r\n      : \"Acessórios\";\r\n\r\n    setState((s) => ({\r\n      ...s,\r\n      clothes: {\r\n        ...clothes,\r\n        [category]: clothes[category].filter(\r\n          (clothing) => clothing.id !== item.id\r\n        ),\r\n      },\r\n      wardrobe: {\r\n        ...s.wardrobe,\r\n        [category]: state.wardrobe[category].map((clothing) => {\r\n          if (clothing.id === item.id) return { ...clothing, picked: false };\r\n          return clothing;\r\n        }),\r\n      },\r\n    }));\r\n  };\r\n\r\n  const showInviteAnswer = (index) => () => {\r\n    let inviteQuestions = [...state.inviteQuestions];\r\n\r\n    inviteQuestions[index].asked = true;\r\n\r\n    setState((s) => ({\r\n      ...s,\r\n      inviteQuestions,\r\n      showInviteQuestions: false,\r\n      showInviteAnswer: true,\r\n      inviteAnswer: inviteQuestions[index].answer,\r\n    }));\r\n  };\r\n\r\n  const checkFullOutfit = () => {\r\n    let hasInteiroCover = false;\r\n    for (var key in state.clothes) {\r\n      if (key === \"Acessórios\") continue;\r\n\r\n      let clothesCovers = state.clothes[key].reduce(\r\n        (acc, clothing) => [...acc, clothing.cover],\r\n        []\r\n      );\r\n\r\n      if (clothesCovers.includes(\"inteiro\")) hasInteiroCover = true;\r\n\r\n      if (\r\n        key === \"Pernas\" &&\r\n        state.clothes[key].length === 0 &&\r\n        hasInteiroCover\r\n      )\r\n        continue;\r\n\r\n      if (\r\n        !clothesCovers.includes(\"default\") &&\r\n        !clothesCovers.includes(\"inteiro\")\r\n      )\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const getWrongClothes = () => {\r\n    const rightTags = [...state.invitation.rightTags];\r\n    let wrongClothes = [];\r\n\r\n    for (var key in state.clothes) {\r\n      for (let i = 0; i < state.clothes[key].length; i++) {\r\n        if (\r\n          state.clothes[key][i].time.reduce(\r\n            (acc, tag) => acc && !rightTags.includes(tag),\r\n            true\r\n          ) ||\r\n          state.clothes[key][i].weather.reduce(\r\n            (acc, tag) => acc && !rightTags.includes(tag),\r\n            true\r\n          )\r\n        )\r\n          wrongClothes.push(state.clothes[key][i]);\r\n      }\r\n    }\r\n\r\n    return wrongClothes;\r\n  };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState() });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const endGame = (saveResult = true) => {\r\n    let wrongClothes = getWrongClothes();\r\n    console.log(wrongClothes);\r\n    let clothesCount = Object.keys(state.clothes).reduce((acc, key) => {\r\n      return acc + state.clothes[key].length;\r\n    }, 0);\r\n    let sawInvite =\r\n      state.inviteQuestions.filter((question) => question.asked).length > 0;\r\n    let feedbackMessages = [];\r\n\r\n    if (wrongClothes.length === 0 && checkFullOutfit())\r\n      feedbackMessages.push(\r\n        {\r\n          image: tomato,\r\n          message:\r\n            \"Parabéns! Você montou um look perfeito para a ocasião. Certamente fará um sucesso no evento!!\",\r\n          messageTranslate:\r\n            \"Well done! You came up with the perfect outfit for the occasion. You'll surely be a blast in the event!!\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: sawInvite\r\n            ? \"Ainda bem que você checou novamente as informações do convite. Já pensou se escolhesse as roupas erradas?\"\r\n            : \"Você completou seu look sem precisar rever as informações do convite. Que memória você tem!\",\r\n          messageTranslate: sawInvite\r\n            ? \"Good thing you checked the invite information. What if you had picked the wrong clothes?\"\r\n            : \"You finished your outfit without looking for the event's information. What a good memory you have!\",\r\n        }\r\n      );\r\n    else if (wrongClothes.length === 0)\r\n      feedbackMessages.push(\r\n        {\r\n          image: tomato,\r\n          message:\r\n            \"Ei, até que não ficou tão mal, mas acho que algumas pessoas podem estranhar seu look para esse evento...\",\r\n          messageTranslate:\r\n            \"Hey, it's not that bad, but people might think your outfit is a bit weird for the event...\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: sawInvite\r\n            ? \"Ainda bem que você checou novamente as informações do convite. Ainda sim, acho que você cometeu alguns tropeços no seu look…\"\r\n            : \"Você completou seu look sem precisar rever as informações do convite. Mas acho que você se confundiu um pouco…\",\r\n          messageTranslate: sawInvite\r\n            ? \"Good thing you checked the invite information. Still, I think you made some mistakes in your outfit...\"\r\n            : \"You finished your outfit without looking for the event's information. But I think you got a bit lost...\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message:\r\n            \"Preste atenção nas peças que você escolheu. Provavelmente você esqueceu alguma peça de roupa importante para sair de casa!\",\r\n          messageTranslate:\r\n            \"Pay attention to the garments you have chosen. You probably forgot some important piece of clothing!\",\r\n        }\r\n      );\r\n    else\r\n      feedbackMessages.push(\r\n        {\r\n          image: tomato,\r\n          message:\r\n            wrongClothes.length / clothesCount < 0.5\r\n              ? \"Ei, até que não ficou tão mal, mas acho que algumas pessoas podem estranhar seu look para esse evento...\"\r\n              : \"Ei, eu sei que estilo é uma questão pessoal, mas acho que esse não é o look mais adequado para este evento...\",\r\n          messageTranslate:\r\n            wrongClothes.length / clothesCount < 0.5\r\n              ? \"Hey, it's not that bad, but people might think your outfit is a bit weird for the event...\"\r\n              : \"Hey, I know style is a personal matter, but I think that is not the most adequate outfit for this event...\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message: sawInvite\r\n            ? \"Ainda bem que você checou novamente as informações do convite. Ainda sim, acho que você cometeu alguns tropeços no seu look…\"\r\n            : \"Você completou seu look sem precisar rever as informações do convite. Mas acho que você se confundiu um pouco…\",\r\n          messageTranslate: sawInvite\r\n            ? \"Good thing you checked the invite information. Still, I think you made some mistakes in your outfit...\"\r\n            : \"You finished your outfit without looking for the event's information. But I think you got a bit lost...\",\r\n        },\r\n        {\r\n          image: tomato,\r\n          message:\r\n            \"Preste atenção nas peças que você escolheu. Em seu look, você escolheu um total de \" +\r\n            wrongClothes.length +\r\n            \" peças que não combinam com o evento: \" +\r\n            wrongClothes.map((clothes) => clothes.name).join(\", \"),\r\n          messageTranslate:\r\n            \"Pay attention to the pieces of clothing you picked. In your outfit, you chose a total of \" +\r\n            wrongClothes.length +\r\n            \" pieces that did not match the event :\" +\r\n            wrongClothes.map((clothes) => clothes.name).join(\", \"),\r\n        }\r\n      );\r\n\r\n    setState({\r\n      ...state,\r\n      scene: \"END_GAME\",\r\n      won: wrongClothes.length === 0 && checkFullOutfit(),\r\n      feedbackMessages,\r\n    });\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n\r\n    if (saveResult)\r\n      dispatch(\r\n        gameActions.create(\"results\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n          invite: state.invitation.id,\r\n          won: wrongClothes.length === 0 && checkFullOutfit(),\r\n          sawInviteAgain: sawInvite,\r\n          wrongClothesCount: wrongClothes.length,\r\n          outfit: Object.keys(state.clothes).reduce((acc, key) => {\r\n            return [\r\n              ...acc,\r\n              ...state.clothes[key].map((clothing) => clothing.id),\r\n            ];\r\n          }, []),\r\n          character: state.choosenCharacter.id,\r\n        })\r\n      );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {mission ? (\r\n        <React.Fragment>\r\n          {(function scene() {\r\n            switch (state.scene) {\r\n              case \"INIT\":\r\n                return (\r\n                  <Init\r\n                    icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                    name={mission.name}\r\n                    description={mission.description}\r\n                    nameTranslate={\r\n                      mission.nameTranslate.find((name) => {\r\n                        return name.language.id === lang;\r\n                      }).name\r\n                    }\r\n                    descriptionTranslate={\r\n                      mission.descriptionTranslate.find((description) => {\r\n                        return description.language.id === lang;\r\n                      }).description\r\n                    }\r\n                    onStart={onStartGame}\r\n                    onBack={() => setState({ ...state, back: true })}\r\n                    ready={Object.keys(state.wardrobe).length > 0}\r\n                  />\r\n                );\r\n              case \"INTRO\":\r\n                return (\r\n                  <React.Fragment>\r\n                    {state.showBlob && (\r\n                      <Tutorial\r\n                        blobMessage={state.tutorialBlobsText[state.blobToShow]}\r\n                        onClickToEnd={() =>\r\n                          setState((s) => ({\r\n                            ...s,\r\n                            blobToShow: s.blobToShow + 1,\r\n                            showBlob: false,\r\n                          }))\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {state.chooseCharacterScreen && (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"space-evenly\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        {state.characters.map((character) => (\r\n                          <img\r\n                            key={character.name}\r\n                            src={character.image}\r\n                            style={{ height: \"50%\", cursor: \"pointer\" }}\r\n                            onClick={() =>\r\n                              setState((s) => ({\r\n                                ...s,\r\n                                choosenCharacter: character,\r\n                                showInvitation: true,\r\n                                chooseCharacterScreen: false,\r\n                              }))\r\n                            }\r\n                            alt={character.id}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.showInvitation && (\r\n                      <div\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: 0,\r\n                          width: \"50%\",\r\n                          height: \"50%\",\r\n                          left: \"25%\",\r\n                          backgroundColor: \"var(--color-second)\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        <div className=\"\">\r\n                          <span lang=\"pt-br\" className=\"\">\r\n                            Nós temos o prazer de convidar VOCÊ para nosso\r\n                            evento!\r\n                          </span>\r\n                          <span lang=\"en\" className=\"\">\r\n                            We're glad to invite YOU to our event!\r\n                          </span>\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            backgroundColor: \"white\",\r\n                            width: \"50%\",\r\n                            left: \"25%\",\r\n                            fontSize: \"3em\",\r\n                          }}\r\n                        >\r\n                          <div>Mês: {state.invitation.month}</div>\r\n                          <div>Estação: {state.invitation.season}</div>\r\n                          <div>Horário: {state.invitation.time}</div>\r\n                          <div>\r\n                            Previsão do tempo: {state.invitation.weather}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <Button\r\n                          style={{\r\n                            position: \"relative\",\r\n                            bottom: \"10%\",\r\n                            margin: \"50% auto 0% auto\",\r\n                          }}\r\n                          onClick={() =>\r\n                            setState((s) => ({\r\n                              ...s,\r\n                              proceedToDressingConfirmation: true,\r\n                            }))\r\n                          }\r\n                        >\r\n                          Estou pronto!\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.proceedToDressingConfirmation && (\r\n                      <Notification\r\n                        blobMessage={{\r\n                          text:\r\n                            \"Tem certeza? Você terá apenas UMA chance de rever cada informação do convite. Deseja continuar?\",\r\n                          textTranslate:\r\n                            \"Are you sure? You will have only ONE chance to review each piece of information in the invitation. Do you want to continue?\",\r\n                        }}\r\n                        continueButtonLabel=\"Continuar/Continue\"\r\n                        onClickToContinue={() =>\r\n                          setState((s) => ({\r\n                            ...s,\r\n                            scene: \"DRESS\",\r\n                            proceedToDressingConfirmation: false,\r\n                            dressingContext: true,\r\n                            showInvitation: false,\r\n                            showBlob: true,\r\n                          }))\r\n                        }\r\n                        backButtonLabel=\"Ver o convite/See the invite\"\r\n                        onClickToBack={() =>\r\n                          setState((s) => ({\r\n                            ...s,\r\n                            proceedToDressingConfirmation: false,\r\n                            showInvitation: true,\r\n                          }))\r\n                        }\r\n                      />\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              case \"DRESS\":\r\n                return (\r\n                  <React.Fragment>\r\n                    {state.showBlob && (\r\n                      <TutorialWardrobe\r\n                        blobMessage={state.tutorialBlobsText[state.blobToShow]}\r\n                        onClickToEnd={() => {\r\n                          if (\r\n                            state.blobToShow <\r\n                            state.tutorialBlobsText.length - 1\r\n                          )\r\n                            setState((s) => ({\r\n                              ...s,\r\n                              blobToShow: s.blobToShow + 1,\r\n                            }));\r\n                          else\r\n                            setState((s) => ({\r\n                              ...s,\r\n                              showBlob: false,\r\n                            }));\r\n                        }}\r\n                        index={state.blobToShow}\r\n                      />\r\n                    )}\r\n\r\n                    {state.dressingContext && (\r\n                      <div>\r\n                        <div\r\n                          style={{\r\n                            marginTop: \"15em\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            flexWrap: \"wrap\",\r\n                            width: \"100%\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{ flex: \"1 0 0px\", border: \"1px solid red\" }}\r\n                          >\r\n                            <DressingCharacter\r\n                              character={state.choosenCharacter}\r\n                              clothes={state.clothes}\r\n                              showRemove\r\n                              onRemoveClick={removeClothesFromBody}\r\n                              style={{\r\n                                height: \"80em\",\r\n                                zIndex: state.blobToShow === 2 ? 1000000 : 0,\r\n                                position: \"relative\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            style={{ flex: \"1 0 0px\", border: \"1px solid red\" }}\r\n                          >\r\n                            <Wardrobe\r\n                              style={{\r\n                                border: \"1px solid red\",\r\n                                zIndex: state.blobToShow === 1 ? 1000000 : 0,\r\n                                position: \"relative\",\r\n                              }}\r\n                              wardrobe={state.wardrobe}\r\n                              onClothesClick={addClothesToBody}\r\n                            />\r\n                            {!state.showInvitation && (\r\n                              <img\r\n                                src=\"\"\r\n                                alt=\"invite-button\"\r\n                                onClick={() =>\r\n                                  setState((s) => ({\r\n                                    ...s,\r\n                                    showInvitation: true,\r\n                                    showInviteQuestions: true,\r\n                                  }))\r\n                                }\r\n                                style={{\r\n                                  zIndex: state.blobToShow === 3 ? 1000000 : 0,\r\n                                  position: \"relative\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        <Lamp\r\n                          onClick={() => {\r\n                            let ready =\r\n                              state.clothes[\"Tronco\"].length > 0 &&\r\n                              (state.clothes[\"Tronco\"].find(\r\n                                (clothing) => clothing.cover === \"inteiro\"\r\n                              ) ||\r\n                                state.clothes[\"Pernas\"].length > 0);\r\n                            setState((s) => ({\r\n                              ...s,\r\n                              ready: ready,\r\n                              readyAlert: !ready,\r\n                            }));\r\n                          }}\r\n                          message=\"Estou pronto!\"\r\n                          style={{\r\n                            zIndex: state.blobToShow === 4 ? 1000000 : 0,\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.showInvitation && (\r\n                      <div\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: 0,\r\n                          width: \"50%\",\r\n                          height: \"50%\",\r\n                          left: \"25%\",\r\n                          backgroundColor: \"var(--color-second)\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        {state.showInviteQuestions && (\r\n                          <div>\r\n                            {state.inviteQuestions.map((question, index) => (\r\n                              <button\r\n                                key={index}\r\n                                onClick={showInviteAnswer(index)}\r\n                                disabled={question.asked}\r\n                              >\r\n                                <span>{question.question}</span>\r\n                              </button>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n\r\n                        {state.showInviteAnswer && (\r\n                          <span>{state.inviteAnswer}</span>\r\n                        )}\r\n                        <Voltar\r\n                          onClick={() => {\r\n                            if (state.showInviteQuestions)\r\n                              setState((s) => ({\r\n                                ...s,\r\n                                showInvitation: false,\r\n                              }));\r\n                            else\r\n                              setState((s) => ({\r\n                                ...s,\r\n                                showInviteQuestions: true,\r\n                                showInviteAnswer: false,\r\n                              }));\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.showClothingSpaceTakenErrorNotification && (\r\n                      <Notification\r\n                        blobMessage={{\r\n                          text:\r\n                            \"Você já vestiu uma roupa para essa parte do corpo! Para vestir outra remova a que já esta antes.\",\r\n                          textTranslate:\r\n                            \"You've already worn an outfit for that body part! To wear another one, remove the one that is already there.\",\r\n                        }}\r\n                        continueButtonLabel=\"Ok!\"\r\n                        onClickToContinue={() =>\r\n                          setState((s) => ({\r\n                            ...s,\r\n                            showClothingSpaceTakenErrorNotification: false,\r\n                          }))\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {state.readyAlert && (\r\n                      <Notification\r\n                        blobMessage={{\r\n                          text: \"Você não pode sair vestindo tão pouco!\",\r\n                          textTranslate: \"You can't leave wearing so little!\",\r\n                        }}\r\n                        continueButtonLabel=\"Voltar ao closet/Back to closet\"\r\n                        onClickToContinue={() =>\r\n                          setState((s) => ({ ...s, readyAlert: false }))\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    {state.ready && (\r\n                      <div className=\"confirm-screen\">\r\n                        <div className=\"character\">\r\n                          <DressingCharacter\r\n                            character={state.choosenCharacter}\r\n                            clothes={state.clothes}\r\n                            showRemove\r\n                            onRemoveClick={removeClothesFromBody}\r\n                            style={{ height: \"80em\" }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"confirm-blob\">\r\n                          <div className=\"blob-spans\">\r\n                            <span lang=\"pt-br\">Pronto pra sair?</span>\r\n                            <span lang=\"en\">Ready to go outside?</span>\r\n                          </div>\r\n                          <div className=\"btns\">\r\n                            <button\r\n                              className=\"btn btn-center\"\r\n                              id=\"btn-back\"\r\n                              onClick={() =>\r\n                                setState((s) => ({\r\n                                  ...s,\r\n                                  ready: false,\r\n                                }))\r\n                              }\r\n                            >\r\n                              Voltar\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-center\"\r\n                              id=\"btn-start\"\r\n                              onClick={() => endGame()}\r\n                            >\r\n                              Continuar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              case \"END_GAME\":\r\n                return (\r\n                  <div\r\n                    className={\r\n                      state.won ? \"blue-background\" : \"salmon-background\"\r\n                    }\r\n                  >\r\n                    <div className=\"feedback absolute-center\">\r\n                      <DressingCharacter\r\n                        character={state.choosenCharacter}\r\n                        clothes={state.clothes}\r\n                        showRemove\r\n                        onRemoveClick={removeClothesFromBody}\r\n                        className=\"feedback-dressing-character\"\r\n                      />\r\n                      <FeedbackPanel\r\n                        feedback={state.feedbackMessages}\r\n                        won={state.won}\r\n                        restart={restart}\r\n                        leave={() => setState({ ...state, back: true })}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              default:\r\n                return <div>Error</div>;\r\n            }\r\n          })()}\r\n\r\n          {state.back && <Redirect to=\"/userspace\" />}\r\n        </React.Fragment>\r\n      ) : (\r\n        <div>Loading..</div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Game5;\r\n","const initialState = () => ({\r\n  scene: 'INIT',\r\n  back: false,\r\n  clothesTypes: [\"HEAD\", \"TOP\", \"BOTTOM\", \"SHOES\"],\r\n  dressingTabIndex: 0,\r\n  chooseCharacterScreen: true,\r\n  choosenCharacter: null,\r\n  cellPhoneStart: false,\r\n  showCellphone: false,\r\n  dressingContext: false,\r\n  clothes: [null, null, null, null],\r\n  dialog: [],\r\n  namingClothesContext: false,\r\n  selectedClothesName: null,\r\n  selectedColor: null\r\n\r\n})\r\n\r\nexport default initialState\r\n","const stub = {\r\n  id: '0',\r\n  name: 'Jogo6',\r\n  description: 'Descrição do jogo 6',\r\n  nameTranslate: 'Game6',\r\n  descriptionTranslate: 'Game 6 description',\r\n  clothes:[\r\n    {\r\n      type: 0,\r\n      name: \"chapeu de couro\",\r\n      color: \"marrom\"\r\n    },\r\n    {\r\n      type: 0,\r\n      name: \"chapeu do kiko\",\r\n      color: \"blue\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa normal\",\r\n      color: \"branco\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa de frio\",\r\n      color: \"preto\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"bermuda\",\r\n      color: \"amarelo\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"calça jeans\",\r\n      color: \"azul\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"tenis\",\r\n      color: \"verde\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"chinelo\",\r\n      color: \"laranja\"\r\n    },\r\n  ],\r\n  day: \"Dia tal\",\r\n  where: \"tal lugal\",\r\n  when: \"I don't know\"\r\n}\r\n\r\nexport default stub\r\n","import React from 'react'\r\n// import DialogHistory from '../../../../_components/DialogHistory'\r\n\r\n\r\nconst Cellphone = ({children, style, ...props}) => {\r\n  return(\r\n    <div style={{...style, position: 'relative'}}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cellphone\r\n","import React from 'react'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nimport initialState from './initialState'\r\nimport stub from './stub'\r\nimport Init from '../../_components/Init'\r\nimport FullscreenOverlay from '../../_components/FullscreenOverlay'\r\nimport DressingCharacter from '../../_components/DressingCharacter'\r\nimport Wardrobe from '../../_components/Wardrobe'\r\nimport DialogHistory from '../../_components/DialogHistory'\r\nimport Cellphone from './components/Cellphone'\r\nimport Button from '../../_components/Button'\r\n\r\nconst Game6 = () => {\r\n  const [state, setState] = React.useState(initialState())\r\n  const mission = stub\r\n  const onStartGame = () => setState({...state, scene: 'GAME'})\r\n  return(\r\n    <div>\r\n      {(function scene(){\r\n        switch(state.scene){\r\n          case 'INIT':\r\n            return(\r\n              <Init\r\n              name={mission.name}\r\n              description={mission.description}\r\n              nameTranslate={ mission.nameTranslate\r\n                //mission.nameTranslate.find((name) => {\r\n                //  return name.language.id === lang;\r\n                //}).name\r\n              }\r\n              descriptionTranslate={ mission.descriptionTranslate\r\n                //mission.descriptionTranslate.find((description) => {\r\n                //  return description.language.id === lang;\r\n                //}).description\r\n              }\r\n              onStart={onStartGame}\r\n              onBack={() => setState({ ...state, back: true })}\r\n              ready={mission.id}\r\n              />\r\n            )\r\n          case 'GAME':\r\n            return(\r\n              <div>\r\n              {state.chooseCharacterScreen &&\r\n                <div>\r\n                  Escolha quem vestir\r\n                  <div>\r\n                    <button onClick={()=> setState({...state, choosenCharacter: 1, cellPhoneStart: true, chooseCharacterScreen: false})}>Personagem 1</button>\r\n                    <button onClick={()=> setState({...state, choosenCharacter: 2, cellPhoneStart: true, chooseCharacterScreen: false})}>Personagem 2</button>\r\n                  </div>\r\n                </div>\r\n              }\r\n              {state.cellPhoneStart &&\r\n                <div>\r\n                  <button onClick={()=>setState({...state, cellPhoneStart: false, dressingContext: true})}>Estou pronto!</button>\r\n                </div>\r\n              }\r\n              {state.dressingContext &&\r\n                <div>\r\n                  {state.showCellphone ?\r\n                    <FullscreenOverlay onClickClose={() => setState({...state, showCellphone: false})}\r\n                      style={{width: '100%', height: '100%', backgroundColor: 'blue', zIndex: 10}}>\r\n                      <Cellphone style={{width: '30%', height: '90%', margin: '2% auto', backgroundColor: 'red', border: '1px solid red'}}>\r\n                        <DialogHistory dialogHistory={[{speaker: '', text: 'stuff'}, {speaker: '', text: 'stuff2'}, {speaker: 'player', text: 'stuff3'}]}\r\n                        />\r\n                        <div style={{display: 'flex', flexDirection: 'column', position: 'absolute', bottom: 0, width: '100%', backgroundColor: 'green'}}>\r\n                          <button>Que dia?</button>\r\n                          <button>Onde?</button>\r\n                          <button>Quando?</button>\r\n                        </div>\r\n                      </Cellphone>\r\n                    </FullscreenOverlay>\r\n                    :\r\n                    <div style={{position: 'absolute', top: '2%', left: '2%'}}>\r\n                      <button onClick={()=>setState({...state, showCellphone: true, dressingContext: true})}>Celular</button>\r\n                    </div>\r\n                  }\r\n                  <div style={{marginTop: '15%', display: 'flex', flexDirection: 'row', flexWrap: 'wrap', width: '100%'}}>\r\n                    <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                      <DressingCharacter clothesTypes={state.clothesTypes}\r\n                        clothes={state.clothes}\r\n                        showRemove\r\n                        onRemoveClick={ index => () => {\r\n                          let clothes = [...state.clothes]\r\n                          clothes[index] = null\r\n                          setState({...state, clothes:clothes})\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                      <Wardrobe style={{border: '1px solid red'}} clothes={mission.clothes}\r\n                          onClothesClick={ item => () =>\r\n                          {\r\n                            var clothes = [...state.clothes]\r\n                            clothes[item.type] = item\r\n                            setState({...state, clothes: clothes})\r\n                          }\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <button onClick={() =>{\r\n                      let clotheCount = state.clothes.reduce((acc, item)=> (item === null ? acc: acc + 1), 0)\r\n                      setState({...state, ready: clotheCount >= 2, readyAlert: clotheCount < 2})\r\n                    }}\r\n                  >\r\n                    Estou pronto!\r\n                  </button>\r\n                  {state.readyAlert &&\r\n                    <div>\r\n                      Não pode sair vestido tão pouco!\r\n                      <button onClick={()=>setState({...state, readyAlert: false})}>Voltar a vestir</button>\r\n                    </div>\r\n                  }\r\n                  {state.ready &&\r\n                    <FullscreenOverlay showCloseBtn={false}\r\n                      style={{width: '100%', height: '100%', backgroundColor: 'blue', zIndex: 10}}\r\n                    >\r\n                      <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                        <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                          <DressingCharacter\r\n                            clothesTypes={state.clothesTypes}\r\n                            clothes={state.clothes}\r\n                          />\r\n                        </div>\r\n                        <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                          Esse é seu look ideal?\r\n                          <button onClick={()=>setState({...state, ready: false, dressingContext:false, namingClothesContext: true})}>Sim</button>\r\n                          <button onClick={()=>setState({...state, ready: false})}>Não</button>\r\n                        </div>\r\n                      </div>\r\n                    </FullscreenOverlay>\r\n                  }\r\n                </div>\r\n              }\r\n              {state.namingClothesContext &&\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                  <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                    <Cellphone style={{width: '30%', height: '90%', margin: '2% auto', backgroundColor: 'red', border: '1px solid red'}}>\r\n                      <DialogHistory dialogHistory={[{speaker: '', text: 'stuff'}, {speaker: '', text: 'stuff2'}, {speaker: 'player', text: 'stuff3'}]}/>\r\n\r\n                      {!state.ready ?\r\n                        <div>\r\n                          <div style={{display: 'flex', flexDirection: 'column', position: 'absolute', bottom: 0, width: '100%', backgroundColor: 'green'}}>\r\n                            <button >Que dia?</button>\r\n                            <button>Onde?</button>\r\n                            <button>Quando?</button>\r\n                          </div>\r\n\r\n                          <button onClick={() => setState({...state, ready: true})}\r\n                            style={{width: '60%', marginLeft: '-30%', position: 'absolute', bottom: '-5%', left: '50%'}}>\r\n                            Prontinho!\r\n                          </button>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                          <button onClick={() => setState({...state, lastConfirmation: true, namingClothesContext: false})}>Sim</button>\r\n                          <button>Não</button>\r\n                        </div>\r\n                      }\r\n                    </Cellphone>\r\n                  </div>\r\n                  <div style={{flex: '1 0 0px', border: '1px solid red'}}>\r\n                    <DressingCharacter clothesTypes={state.clothesTypes}\r\n                      clothes={state.clothes}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              }\r\n              {state.lastConfirmation &&\r\n                <div>\r\n                  <Cellphone style={{width: '30%', height: '90%', margin: '2% auto', backgroundColor: 'red', border: '1px solid red'}}>\r\n                    <DressingCharacter clothesTypes={state.clothesTypes}\r\n                      clothes={state.clothes}\r\n                    />\r\n                  </Cellphone>\r\n                  <button onClick={()=>setState({...state, scene: 'END'})}>Next</button>\r\n                </div>\r\n              }\r\n              </div>\r\n            )\r\n          case 'END':\r\n            return(\r\n              <div>\r\n                <div>Tela de feedback</div>\r\n                <Button blink onClick={() => setState(initialState())}>Jogar novamente</Button>\r\n                <Button blink onClick={() => setState({...state, back: true})}>Sair do jogo</Button>\r\n              </div>\r\n            )\r\n          default:\r\n            return(<div>Error</div>)\r\n        }\r\n      }())}\r\n      {state.back && <Redirect to='/userspace'/>}\r\n    </div>\r\n  )\r\n}\r\n/*\r\n<div>\r\n  {!state.selectedClothesName &&\r\n    mission.clothes.map((item, index) =>\r\n    <button key={index} onClick={()=> setState({...state, selectedClothesName: item.name})}>\r\n      {item.name}\r\n    </button>\r\n  )}\r\n  {!state.selectedColor &&\r\n    mission.clothes.map((item, index) =>\r\n    <button key={index} onClick={()=> setState({...state, selectedColor: item.color})}>\r\n      {item.color}\r\n    </button>\r\n  )}\r\n  <div>\r\n    {state.selectedClothesName}\r\n  </div>\r\n  <div>\r\n    {state.selectedColor}\r\n  </div>\r\n</div>\r\n\r\n*/\r\nexport default Game6\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nfunction PrivateRoute ({component: Component, roles, render, ...rest}){\r\n    return (\r\n        <Route {...rest}\r\n          render={ props => localStorage.getItem('user') ?\r\n                    Component ? <Component {...props} />\r\n                  : render && render(props)\r\n                  : <Redirect to={{ pathname: '/login', state: {from:props.location} }} />\r\n          }\r\n        />\r\n    )\r\n}\r\n\r\nexport { PrivateRoute }\r\n","import './index.scss'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport { login } from '../../_actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://source.unsplash.com/random)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    }\r\n  }));\r\n\r\nconst Login = () => {\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [submitted, setSubmitted ] = useState(false)\r\n    const { email, password } = inputs\r\n    const loggingIn = useSelector(state => state.authentication.loggingIn)\r\n    const user = useSelector(state => state.authentication.user)\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const alert = useAlert()\r\n\r\n    function handleChange(e) { \r\n        const {name, value} = e.target\r\n        setInputs(inputs => ({...inputs, [name]: value}))\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        setSubmitted(true)\r\n\r\n        if(email && password){\r\n            dispatch(login(email, password))\r\n              .catch(() => {\r\n                alert.error('Email and/or password invalid! Please, check your inputs and try again!')\r\n              })\r\n\r\n        } else {\r\n          alert.error('Email and/or password missing! Please, check your inputs and try again!')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          {user ? user.user ? <Redirect to='/userspace' /> : null : null}\r\n          <CssBaseline />\r\n          <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n          <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"E-mail\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  className={'form-control' + (submitted && !email ? ' is-invalid' : '')}\r\n                  onChange={handleChange}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Senha\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  className={'form-control' + (submitted && !password ? ' is-invalid' : '')}\r\n                  onChange={handleChange}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                {loggingIn && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                  Sign in\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link to=\"/register\" variant=\"body2\">\r\n                    Don't have an account yet? Sign up!\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n\r\n\r\n}\r\n\r\nexport default Login \r\n","import './index.scss'\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { gameActions } from '../../_actions'\r\n\r\nconst UserSpace = () => {\r\n\r\n  const user = useSelector(state => state.authentication.user.user)\r\n  const game = useSelector( state => state.game)\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(gameActions.getAll('missions'))\r\n  }, [dispatch])\r\n\r\n  // React.useEffect(()=>{\r\n  //   dispatch(game_1_missionsActions.getAll())\r\n  // }, [dispatch, game_1_missionsActions])\r\n\r\n  // React.useEffect(()=>{\r\n  //   dispatch(game_3_missionsActions.getAll())\r\n  // }, [dispatch, game_3_missionsActions])\r\n\r\n  return(\r\n    <div id=\"userspace\">\r\n      {!user.id ?\r\n        <div>Loading...</div>\r\n        :\r\n        <div>\r\n          <p>Oi {user.username}!</p>\r\n\r\n          {/* user.role.type === \"professor\"  && <div id=\"area-criacao\">\r\n            Área de criação\r\n            <div>\r\n              <Link to='/missions'>Ver Missões</Link>\r\n            </div>\r\n\r\n            <div>\r\n              <Link to='/characters'>Personagens</Link>\r\n            </div>\r\n\r\n            <div>\r\n              <Link to='/questions'>Perguntas</Link>\r\n            </div>\r\n          </div>\r\n        */}\r\n\r\n          <div className=\"jogos\">\r\n            <p>Jogos:</p>\r\n            <div id=\"missoes\">\r\n              {game.loading ? <div>Loading...</div> :\r\n                game.items.missions && game.items.missions.map( (mission, index) =>\r\n                <div key={index} className=\"missao\">\r\n                  <Link to={`/game${mission.gameType.game}/${mission.id}`}>\r\n                    <div id=\"imagem\"></div>\r\n                    <div id=\"card-text-wrapper\">\r\n                      <div id=\"nome-missao\">{mission.name}</div>\r\n                      <div id=\"descricao\">{mission.description}</div>\r\n                      <div id=\"recompensas\">Recompensas</div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {process.env.NODE_ENV === 'development' &&\r\n            <div>\r\n              Development\r\n              <div>\r\n                <Link to='/game4/0'>Game4 Stub</Link><br/>\r\n                <Link to='/game5/0'>Game5 Stub</Link><br/>\r\n                <Link to='/game6/0'>Game6 Stub</Link><br/>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserSpace\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { apiActions, register } from '../../_actions'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { useAlert } from 'react-alert'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { MenuItem } from '@material-ui/core'\r\n\r\nimport { login } from '../../_actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\n\r\nconst Register = () => {\r\n  const classes = useStyles()\r\n  const alert = useAlert()\r\n\r\n  const { languagesActions } = apiActions\r\n\r\n  const [inputs, setInputs] = useState({\r\n      email: '',\r\n      password: '',\r\n      username: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      language: ''\r\n  })\r\n  const languages = useSelector(state => state.languages.items)\r\n  const [submitted, setSubmitted ] = useState(false)\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [blocked, setBlocked] = useState(false)\r\n  const registering = useSelector(state => state.authentication.registering)\r\n  const user = useSelector(state => state.authentication.user)\r\n  const dispatch = useDispatch()\r\n\r\n  function handleChange(e) {\r\n      const {name, value} = e.target\r\n      setInputs(inputs => ({...inputs, [name]: value}))\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n\t\tdispatch(languagesActions.getAll())\r\n\t}, [dispatch, languagesActions])\r\n\r\n  // É para executar somente no primeiro render\r\n  // Como um ComponentDidMount\r\n  React.useEffect(() => {\r\n    if( user?.user ) setRedirect(true)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  function handleSubmit(e) {\r\n      e.preventDefault()\r\n      setSubmitted(true)\r\n      setBlocked(true)\r\n      alert.info(\"Creating your account. Hold tight!\")\r\n\r\n      if(inputs.email && inputs.password && inputs.username && inputs.language){\r\n          dispatch(register(inputs))\r\n            .then(() => {\r\n              alert.success('Account succesfully created! Logging you in...')\r\n              dispatch(login(inputs.email, inputs.password))\r\n              setTimeout(()=>{\r\n                setRedirect(true)\r\n              }, 3000)\r\n            })\r\n            .catch(error => {\r\n              alert.error(error)\r\n              setBlocked(false)\r\n            })\r\n      } else {\r\n        alert.error('Required fields missing! Please, check your inputs and try again!')\r\n        setBlocked(false)\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n    {/*<Container maxWidthXs=\"xs\">*/}\r\n      {(redirect && user?.user) && <Redirect to={'/userspace'} />}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                className={submitted && !inputs.username ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                className={submitted && !inputs.email ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                className={submitted && !inputs.password ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"language\"\r\n                  label=\"Language\"\r\n                  type=\"language\"\r\n                  id=\"language\"\r\n                  className={submitted && !inputs.language ? 'danger' : ''}\r\n                  onChange={handleChange}\r\n                  select\r\n                  disabled={blocked}\r\n                >\r\n                  {languages.map((language, index) =>\r\n                    <MenuItem value={language.id} key={index}>{language.name}</MenuItem>\r\n                  )}\r\n              </TextField>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={blocked}\r\n          >\r\n          {registering && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n           Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n              Already have an account? Sign in!\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\n\r\nconst UserInfo = ({user}) => {\r\n  return(\r\n    <div>\r\n      Username: {user.username}\r\n      Email: {user.email}\r\n      Provider: {user.provider}\r\n      Confirmed: <input type='checkbox' checked={user.confirmed} />\r\n      Blocked: <input type='checkbox' checked={user.blocked} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInfo\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { userActions } from '../../_actions'\r\nimport Register from '../Register'\r\nimport UserInfo from '../../_components/UserInfo'\r\n\r\nconst UsersCRUD = () => {\r\n  const dispatch = useDispatch()\r\n  const users = useSelector( state => state.users )\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(userActions.getAll())\r\n  }, [dispatch])\r\n\r\n  console.log('users:', users)\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Create User:\r\n        <Register />\r\n      </div>\r\n      <div>\r\n        All Users:\r\n        {users && users.items ? users.items.map( (user, index) =>\r\n          <div key={index}>\r\n            <UserInfo user={user} />\r\n            <button onClick={()=>{}}>\r\n              UPDATE USER\r\n            </button>\r\n            <button onClick={()=>dispatch(userActions.delete(user.id))}>\r\n              DELETE USER\r\n            </button>\r\n          </div>\r\n        ): null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersCRUD\r\n","import React from 'react'\r\n\r\nconst Mission = ({mission}) => {\r\n\r\n  return(\r\n    <div>\r\n      <div>Nome: {mission.name}</div>\r\n      <div>\r\n        <div>Descrição:</div>\r\n        <div>{mission.description}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mission\r\n","import React from 'react'\r\n\r\nconst Character = ({character}) => {\r\n  const getAnswer = (qId) => {\r\n    let a = character.answers.find( answer => answer.question && answer.question.id === qId)\r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div style={{borderStyle: 'groove', borderRadius: 5}}>\r\n      <div style={{borderStyle: 'groove', borderRadius: 5}}>\r\n        <div>Name: {character.name}</div>\r\n        <div style={{display: 'flex'}}>\r\n          {character.characterAssets && character.characterAssets.length > 0 ?\r\n            character.characterAssets.map((characterAsset, index) =>\r\n              <div key={index}>\r\n                <img style={{width: 50}} src={`${character.characterAssets[index].image[0].url}`} alt={characterAsset.name}/>\r\n              </div>\r\n            ):'nenhum'\r\n          }\r\n        </div>\r\n        {character.characterAssets && <div>Layers: {character.characterAssets.length}</div>}\r\n        <div>Job: {character.job}</div>\r\n        <div>Country: {character.country}</div>\r\n        <div>Civil state: {character.civilState}</div>\r\n      </div>\r\n      <div>\r\n        <div> JOGO 1 - Missões que participa: </div>\r\n        {character.game_1_missions && character.game_1_missions.map((mission, index)=>\r\n          <div key={index}>\r\n            <div>{index+1}: {mission.name}</div>\r\n            {mission.questions.map((question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>Pergunta: {question.question}</div>\r\n                <div>Resposta: {getAnswer(question.id)}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <div> JOGO 2 - Missões que participa: </div>\r\n        {character.missions && character.missions.map((mission, index)=>\r\n          <div key={index}>\r\n            <div>{index+1}: {mission.name}</div>\r\n            {mission.questions.map((question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>Pergunta: {question.question}</div>\r\n                <div>Resposta: {getAnswer(question.id)}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div>Errou alguma: {character.wrongAnswer}</div>\r\n        <div>Acertou o suficiente: {character.rightAnswer}</div>\r\n        <div>Dica: {character.tip}</div>\r\n        <div>Resposta à acusação: {character.acusationAnswer}</div>\r\n        <div>Despedida: {character.endDialog}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Character\r\n","import React from 'react'\r\n\r\nconst Question = ({question}) => {\r\n  return(\r\n    <div style={{display: 'flex', flexDirection: 'row'}}>\r\n      <span>{question.question}</span> <span>{question.correct? 'true' : 'false'}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question\r\n","import React from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nimport Character from '../Character'\r\nimport Question from '../Question'\r\n\r\nconst EditMission = ({mission, onDone}) => {\r\n  const [state, setState] = React.useState(mission)\r\n\r\n  const [charList, setCharList] = React.useState(mission.missionCharacters)\r\n  const [locationList, setLocationList] = React.useState(mission.locations)\r\n  const [questionList, setQuestionList] = React.useState(mission.questions)\r\n  const characters = useSelector(state => state.characters)\r\n  const locations = useSelector(state => state.locations)\r\n  const questions = useSelector(state => state.questions)\r\n\r\n  const addToMission = (character) => () => {\r\n    setCharList([...charList, character])\r\n  }\r\n\r\n  const removeFromMission = (character) => () => {\r\n    setCharList(charList.filter( c => c.id !== character.id) )\r\n  }\r\n\r\n  const addLocationToMission = (location) => () => {\r\n    setLocationList([...locationList, location])\r\n  }\r\n\r\n  const removeLocationFromMission = (location) => () => {\r\n    setLocationList(locationList.filter( l => l.id !== location.id) )\r\n  }\r\n\r\n  const addQuestionToMission = (question) => () => {\r\n    setQuestionList([...questionList, question])\r\n  }\r\n\r\n  const removeQuestionFromMission = (question) => () => {\r\n    setQuestionList(questionList.filter(c => c.id !== question.id))\r\n  }\r\n\r\n  const onClick = () => {\r\n    let newState = {\r\n      id: state.id,\r\n      name: state.name,\r\n      description: state.description\r\n    }\r\n    newState.characters = charList.reduce((acc, character) => [...acc, character.id], [] )\r\n    newState.locations = locationList.reduce((acc, location) => [...acc, location.id], [] )\r\n    newState.questions = questionList.reduce((acc, question) => [...acc, question.id], [] )\r\n    onDone(newState)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Nome: <input value={state.name} onChange={ e => setState({...state, name: e.target.value})} />\r\n      </div>\r\n      <div>\r\n        Descrição: <input value={state.description} onChange={ e => setState({...state, description: e.target.value})} />\r\n      </div>\r\n\r\n      <div>\r\n        <div>Personagens na missão:</div>\r\n        {charList.map((character, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeFromMission(character)}><RemoveIcon /></Button>\r\n            <Character character={character}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Personagens disponíveis</div>\r\n        {characters.items && characters.items.length > 0 && characters.items\r\n          .filter( character => !charList.find( c => c.id === character.id ) )\r\n          .map( (character, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addToMission(character)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <Character character={character}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Locais na missão:</div>\r\n        {locationList.map((location, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeLocationFromMission(location)}><RemoveIcon /></Button>\r\n            <div>{location.name}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Locais disponíveis</div>\r\n        {locations.items && locations.items.length > 0 && locations.items\r\n          .filter( location => !locationList.find( l => l.id === location.id ) )\r\n          .map( (location, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addLocationToMission(location)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <div>{location.name}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Questions:</div>\r\n        {questionList.map( ( question, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeQuestionFromMission(question)}><RemoveIcon /></Button>\r\n            <Question question={question}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Preset questions</div>\r\n        {questions.items && questions.items.length > 0 && questions.items\r\n          .filter( question => !questionList.find( c => c.id === question.id) )\r\n          .map( (question, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addQuestionToMission(question)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <Question question={question}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Button onClick={onClick}><DoneIcon/></Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditMission\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n\r\nimport Mission from '../Mission'\r\nimport EditMission from '../EditMission'\r\n\r\nconst Missions = () => {\r\n  const { missionsActions, game_1_missionsActions } = apiActions\r\n  const dispatch = useDispatch()\r\n  const missions = useSelector( state => state.missions)\r\n  const game1missions = useSelector( state => state.game_1_missions)\r\n  const [ createMission, setCreateMission ] = React.useState(false)\r\n  const [ edit, setEdit ] = React.useState(-1)\r\n\r\n  React.useEffect(()=> {\r\n    setEdit(-1)\r\n    setCreateMission(false)\r\n  }, [missions])\r\n\r\n  React.useEffect(() => {\r\n    dispatch(game_1_missionsActions.getAll())\r\n  }, [dispatch, game_1_missionsActions])\r\n\r\n  React.useEffect(() => {\r\n    dispatch(missionsActions.getAll())\r\n  }, [dispatch, missionsActions])\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>Missões jogo 1</div>\r\n        {game1missions.items && game1missions.items.length > 0 && game1missions.items.map((mission, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            {edit !== index ?\r\n              <Mission key={index} mission={mission} />\r\n              : <EditMission mission={mission} onDone={(newState) => {\r\n                  setEdit(-1)\r\n                  dispatch(game_1_missionsActions.update(newState))\r\n                }} /> }\r\n\r\n            {edit !== index ?\r\n              <Button><Link to={`missions/edit/game_1_missions/${mission.id}`}><EditIcon/></Link></Button>\r\n              : <Button onClick={() => setEdit(-1) }><CancelIcon/></Button>\r\n             }\r\n\r\n            <Button onClick={() => dispatch(game_1_missionsActions.delete(mission.id))}><DeleteIcon/></Button>\r\n          </div>\r\n        )}\r\n        <Button onClick={() => setCreateMission(!createMission)}>\r\n          {createMission? 'Cancelar' : 'Criar Missão'}\r\n        </Button>\r\n        {createMission &&  <Redirect to='missions/create'/>}\r\n      </div>\r\n      <div>\r\n        <div>Missões jogo 2</div>\r\n        {missions.items && missions.items.length > 0 && missions.items.map((mission, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            {edit !== index ?\r\n              <Mission key={index} mission={mission} />\r\n              : <EditMission mission={mission} onDone={(newState) => {\r\n                  setEdit(-1)\r\n                  dispatch(missionsActions.update(newState))\r\n                }} /> }\r\n\r\n            {edit !== index ?\r\n              <Button><Link to={`missions/edit/${mission.id}`}><EditIcon/></Link></Button>\r\n              : <Button onClick={() => setEdit(-1) }><CancelIcon/></Button>\r\n             }\r\n\r\n            <Button onClick={() => dispatch(missionsActions.delete(mission.id))}><DeleteIcon/></Button>\r\n          </div>\r\n        )}\r\n        <Button onClick={() => setCreateMission(!createMission)}>\r\n          {createMission? 'Cancelar' : 'Criar Missão'}\r\n        </Button>\r\n        {createMission &&  <Redirect to='missions/create'/>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Missions\r\n","import React from 'react'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\nimport { useAlert } from 'react-alert'\r\n\r\nconst CreateCharacter = () => {\r\n  const { charactersActions } = apiActions\r\n  const [name, setName] = React.useState('')\r\n  const [job, setJob] = React.useState('')\r\n  const [civilState, setCivilState] = React.useState('single')\r\n  const civilStates = ['single', 'married', 'divorced', 'widowed']\r\n  const estadosCivis = ['solteir@', 'casad@', 'divorciad@', 'viúv@']\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert()\r\n\r\n  const create = () => {\r\n    dispatch(charactersActions.create({name: name, job: job, civilState: civilState})).then(() => {\r\n        alert.success('Character created!')\r\n    })\r\n    .catch(error => {\r\n        alert.error(error)\r\n    })\r\n    setName('')\r\n    setJob('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>Criador de personagens:</div>\r\n      <div>Nome: <input type='text' value={name} onChange={ e => setName(e.target.value)} /> </div>\r\n      <div>Trabalho: <input type='text' value={job} onChange={ e => setJob(e.target.value)} /> </div>\r\n      <div>Estado civil:\r\n        {civilStates.map((cs, index) =>\r\n          <div key={index}>\r\n            <Radio checked={civilState === civilStates[index]} value={civilStates[index]} onChange={ e => setCivilState(e.target.value)}/>\r\n            {estadosCivis[index]}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button onClick={create}>Criar</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateCharacter\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst CreateLocation = () => {\r\n  const [state, setState] = React.useState({name: ''})\r\n  const dispatch = useDispatch()\r\n  const { locationsActions } = apiActions\r\n\r\n  const create = () => {\r\n    dispatch(locationsActions.create(state))\r\n    setState({name: ''})\r\n  }\r\n  return (\r\n    <div>\r\n      Nome: <input value={state.name} onChange={ e => setState({...state, name:e.target.value})} placeholder='Sala de estar' />\r\n      <Button onClick={create}>Salvar</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateLocation\r\n","import { React, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst CreateQuestion = () => {\r\n    const { questionsActions }= apiActions\r\n    const dispatch = useDispatch()\r\n    const [inputs, setInputs] = useState({\r\n        question: '',\r\n        group: 0,\r\n        correct: true\r\n    })\r\n    const submitted = false\r\n    const classes = useStyles()\r\n    const creating = useSelector(state => state.authentication.registering)\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        console.log('inputs', inputs)\r\n        dispatch(questionsActions.create(inputs))\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                Create Question\r\n                </Typography>\r\n                <form id=\"create-question-form\" onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                            type=\"textArea\"\r\n                            name=\"question\"\r\n                            variant=\"outlined\"\r\n                            id=\"question\"\r\n                            label=\"Question\"\r\n                            fullWidth\r\n                            required\r\n                            className={submitted && (inputs.question === \"\") ? 'danger' : ''}\r\n                            onChange={e => {setInputs(inputs => ({...inputs, question: e.target.value}))}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"group\"\r\n                            label=\"Group\"\r\n                            name=\"group\"\r\n                            required\r\n                            aria-describedby=\"my-helper-text\"\r\n                            className={submitted && !inputs.group ? 'danger' : ''}\r\n                            onChange={e => {setInputs(inputs => ({...inputs,  group: parseInt(e.target.value)}))}}\r\n                            />\r\n                            <span id=\"my-helper-text\">Group is a integer that defines the which questions to show in every step. For example, if a question is group 1, it will be displayed on the first user interaction with a character.</span>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} justify=\"center\">\r\n                            <FormLabel component=\"legend\">Is question correct?</FormLabel>\r\n\r\n                            <RadioGroup\r\n                            aria-label=\"correct\"\r\n                            id=\"correct\"\r\n                            name=\"correct\"\r\n                            value={inputs.correct.toString()}\r\n                            required\r\n                            onChange={e => {setInputs(inputs => ({...inputs, correct: e.target.value === \"true\" ? true : false}))}}\r\n                            >\r\n                                <FormControlLabel value=\"true\" control={<Radio />} label=\"Correct\"/>\r\n                                <FormControlLabel value=\"false\" control={<Radio />} label=\"Incorrect\"/>\r\n                            </RadioGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    >\r\n                    {creating && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                    Create\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreateQuestion\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditMissionCharacter = ({missionCharacter, onDone, questions, cancel}) => {\r\n\r\n  const [state, setState] = React.useState({\r\n    answers: missionCharacter.answers ? [...missionCharacter.answers] : []\r\n  })\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    console.log('question:', question)\r\n    let aQ = _.cloneDeep(missionCharacter.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...state.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setState({\r\n      ...state,\r\n      answers: [\r\n        ...state.answers.slice(0, index),\r\n        changedIndex,\r\n        ...state.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n  const getAnswer = (qId) => {\r\n    let a = state.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    console.log('a:', a)\r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div>Answers:</div>\r\n            {questions.map( (question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>{question.question}</div>\r\n                <input type='text' value={getAnswer(question.id)}\r\n                  onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n              </div>\r\n            )}  \r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAnswer} onChange={e => setState({...state, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAnswer} onChange={e => setState({...state, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={missionCharacter.tip} onChange={e => setState({...state, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação certa:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAcusationAnswer} onChange={e => setState({...state, rightAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação errada:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAcusationAnswer} onChange={e => setState({...state, wrongAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={missionCharacter.endDialog} onChange={e => setState({...state, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(state)}>Salvar</button>\r\n        <button onClick={cancel()}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditMissionCharacter","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditNewMissionCharacter = ({character, onDone, questions, cancel}) => {\r\n\r\n  const [missionCharacter, setmissionCharacter] = React.useState({...character})\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    let aQ = _.cloneDeep(missionCharacter.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...missionCharacter.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setmissionCharacter({\r\n      ...missionCharacter,\r\n      answers: [\r\n        ...missionCharacter.answers.slice(0, index),\r\n        changedIndex,\r\n        ...missionCharacter.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n\r\n  const getAnswer = (qId) => {\r\n    let a = missionCharacter.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    \r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div>Answers:</div>\r\n            {questions.map( (question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>{question.question}</div>\r\n                <input type='text' value={getAnswer(question.id)}\r\n                  onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n              </div>\r\n            )}  \r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAnswer} onChange={e => setmissionCharacter({...missionCharacter, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAnswer} onChange={e => setmissionCharacter({...missionCharacter, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={missionCharacter.tip} onChange={e => setmissionCharacter({...missionCharacter, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação certa:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAcusationAnswer} onChange={e => setmissionCharacter({...missionCharacter, rightAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação errada:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAcusationAnswer} onChange={e => setmissionCharacter({...missionCharacter, wrongAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={missionCharacter.endDialog} onChange={e => setmissionCharacter({...missionCharacter, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(missionCharacter)}>Salvar</button>\r\n        <button onClick={cancel()}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditNewMissionCharacter\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nconst missionCharacterInitialState = (character) => ({\r\n  character: character,\r\n  answers: [],\r\n  tip: '',\r\n  endDialog: '',\r\n  wrongAnswer: '',\r\n  rightAnswer: '',\r\n  wrongAcusationAnswer: '',\r\n  rightAcusationAnswer: '',\r\n  targetCharacter: false,\r\n})\r\n  \r\nexport default missionCharacterInitialState\r\n  \r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../../_actions'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nconst CreateGame1Data = ({data, characters}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onCheckChange = (id, type) => e => {\r\n\r\n    let payload = {id: id, [type]: e.target.checked}\r\n    dispatch(apiActions.game_1_mission_charactersActions.update(payload))\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      Dados do Game1:\r\n      {data && data.map((d, index) =>\r\n        <div>\r\n          <div>{characters.find(character => d.character === character.id).name}</div>\r\n          <div>\r\n            <Checkbox checked={d.showJob} onChange={onCheckChange(d.id, 'showJob')}/>\r\n            Show Job\r\n          </div>\r\n          <div>\r\n            <Checkbox checked={d.showCountry} label='ShowCountry' onChange={onCheckChange(d.id, 'showCountry')}/>\r\n            Show Country\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateGame1Data\r\n","import React from 'react'\r\n\r\nconst Game2Data = () => {\r\n  return (\r\n    <div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game2Data\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport CreateCharacter from '../CreateCharacter'\r\nimport CreateLocation from '../CreateLocation'\r\nimport Question from '../Question'\r\nimport CreateQuestion from '../CreateQuestion'\r\nimport EditMissionCharacter from './components/EditMissionCharacter'\r\nimport EditNewMissionCharacter from './components/EditNewMissionCharacter'\r\nimport missionCharacterInitialState from './missionCharacterInitialState'\r\n\r\n// import { useAlert } from 'react-alert'\r\n\r\nimport CreateGame1Data from './Game1Data'\r\nimport Game2Data from './Game2Data'\r\n\r\nimport { apiActions } from '../../_actions'\r\n\r\n//used for game 1 and 2 coincident data\r\nconst CreateMissionGame1 = (props) => {\r\n  const dispatch = useDispatch()\r\n  // const alert = useAlert()\r\n\r\n  //for edit\r\n  const game = props && props.match? props.match.params.game : null\r\n  const id = props && props.match ? props.match.params.id : null\r\n  const originalMission = useSelector( state => id && state[game].items.length > 0 ? state[game].items.filter(m => m.id === id)[0] : null )\r\n\r\n  const characters = useSelector( state => state.characters)\r\n  const locations = useSelector( state => state.locations)\r\n  const questions = useSelector( state => state.questions)\r\n\r\n  const [state, setState] = React.useState({\r\n    mission: {\r\n      name: '',\r\n      description: '',\r\n      missionCharacters: [],\r\n      locations: [],\r\n      questions:[]\r\n    },\r\n    charactersList: [],\r\n    charactersConfigList: [],\r\n    characterConfig: null,\r\n    newCharacterConfig: null,\r\n  })\r\n\r\n  //for edit\r\n  if(originalMission && !state.mission.id)\r\n    setState({...state, mission: {...originalMission}})\r\n\r\n  //refrashed route\r\n  React.useEffect(() => {\r\n    if(id && !originalMission)\r\n      dispatch(apiActions[game+\"Actions\"].getById(id))\r\n    if(characters.items.length === 0)\r\n      dispatch(apiActions.charactersActions.getAll())\r\n    if(locations.items.length === 0)\r\n      dispatch(apiActions.locationsActions.getAll())\r\n    if(questions.items.length === 0)\r\n      dispatch(apiActions.questionsActions.getAll())\r\n  }, [dispatch, id, originalMission, questions.items.length, locations.items.length, characters.items.length, game])\r\n\r\n  const [createCharacter, setCreateCharacter] = React.useState(false)\r\n  const [createLocation, setCreateLocation] = React.useState(false)\r\n  const [createQuestion, setCreateQuestion] = React.useState(false)\r\n\r\n  const createMission = () => {\r\n/*\r\n    let data = {...state.mission,\r\n      missionCharacters: state.mission.missionCharacters.map(missionCharacter => {\r\n        return missionCharacter.id\r\n      }),\r\n      missionCharactersCreate: [...state.charactersConfigList, ...state.charactersList]\r\n    }\r\n\r\n//  algo muito errado aqui\r\n\r\n//\r\n    state.charactersConfigList = []\r\n    state.charactersList = []\r\n\r\n    dispatch(apiActions.missionsActions.create(data))\r\n\r\n    data = {...state.mission}\r\n\r\n    let data = {...state.mission}\r\n    dispatch(apiActions[game+\"Actions\"].create(data))\r\n  */\r\n  }\r\n\r\n  const editMission = () => {\r\n    // state.mission.missionCharacters = [...state.mission.missionCharacters]\r\n    // state.charactersConfigList = []\r\n    // state.charactersList = []\r\n    let data = {...state.mission,\r\n      missionCharacters: state.mission.missionCharacters.map(missionCharacter => {\r\n        return missionCharacter.id\r\n      }),\r\n      missionCharactersCreate: [...state.charactersConfigList, ...state.charactersList]\r\n    }\r\n\r\n\r\n//  algo errado aqui\r\n//\r\n    state.charactersConfigList = []\r\n    state.charactersList = []\r\n\r\n    dispatch(apiActions.missionsActions.update(data))\r\n\r\n    // data = {...state.mission}\r\n    // dispatch(apiActions[game+\"Actions\"].update(data))\r\n\r\n    data = {...state.mission}\r\n    dispatch(apiActions[game+\"Actions\"].update(data))\r\n  }\r\n\r\n  const addToMission = (type, data) => () => {\r\n    setState({...state, mission: {...state.mission, [type]:[...state.mission[type], data]}})\r\n  }\r\n\r\n  const removeFromMission = (type, data) => () => {\r\n      setState({...state, mission: {...state.mission, [type]: state.mission[type].filter(d => d.id !== data.id)}})\r\n  }\r\n\r\n  const editCharacterConfig = (character) => () => {\r\n    setState({...state, characterConfig: character})\r\n  }\r\n\r\n  const createCharacterConfig = (character) => () => {\r\n    setState({...state, newCharacterConfig: character})\r\n  }\r\n\r\n  const cancelCharacterConfig = () => () => {\r\n    setState({...state, characterConfig: null, newCharacterConfig: null})\r\n  }\r\n\r\n  const addCharacterToList = (character) => () => {\r\n    setState({...state, charactersList: [...state.charactersList, missionCharacterInitialState(character)]})\r\n  }\r\n\r\n  const removeCharacterFromList = (character) => () => {\r\n    setState({...state, charactersList: state.charactersList.filter(d => d.character.id !== character.character.id)})\r\n  }\r\n\r\n  const removeCharacterFromConfigList = (character) => () => {\r\n    setState({...state, charactersConfigList: state.charactersList.filter(d => d.character.id !== character.character.id)})\r\n  }\r\n\r\n  const updateCharacterConfig = (character) => () => {\r\n    dispatch(apiActions.mission_charactersActions.update(character))\r\n    setState({...state, characterConfig: null})\r\n  }\r\n\r\n  const addCharacterConfig = (missionCharacter) => () => {\r\n    setState({...state, charactersConfigList: [...state.charactersConfigList, missionCharacter], charactersList: state.charactersList.filter(d => d.character.id !== missionCharacter.character.id), newCharacterConfig: null})\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <div style={{\r\n          display: 'flex', flexGrow: 1,\r\n          flexShrink: 1,\r\n          flexBasis: 0,\r\n          flexDirection: 'row'}}>\r\n        <div>\r\n          <div>\r\n            <div>Nome:</div>\r\n            <div>\r\n              <input type='text' value={state.mission.name} onChange={e => setState({...state, mission: {...state.mission, name: e.target.value}})} placeholder='Missão maneira'/>\r\n            </div>\r\n          </div>\r\n\r\n          <div>Texto da missão:</div>\r\n          <textarea value={state.mission.description} onChange={e => setState({...state, mission: {...state.mission, description: e.target.value}})} />\r\n          <div>\r\n            {id ?\r\n              <Button onClick={editMission}>{'Salvar Missão'}</Button>\r\n              :<Button onClick={createMission}>{'Criar Missão'}</Button>\r\n            }\r\n          </div>\r\n\r\n          <div>\r\n            <div>Personagens na missão:</div>\r\n            {state.mission.missionCharacters.map( ( missionCharacter, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('missionCharacters', missionCharacter)}><RemoveIcon /></Button>\r\n                <Button onClick={editCharacterConfig(missionCharacter)}>\r\n                  {missionCharacter.character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {state.charactersConfigList.map( ( missionCharacter, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeCharacterFromConfigList('missionCharacters', missionCharacter)}><RemoveIcon /></Button>\r\n                <Button onClick={editCharacterConfig(missionCharacter)}>\r\n                  {missionCharacter.character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {state.charactersList.map( ( character, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeCharacterFromList(character)}><RemoveIcon /></Button>\r\n                <Button onClick={createCharacterConfig(character)}>\r\n                  {character.character.name}\r\n                </Button>\r\n                {state.charactersList.indexOf(character) !== -1 ? <div >!\r\n                  <span>This character has no config!</span>\r\n                </div> : null}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Locais na missão:</div>\r\n            {state.mission.locations.map((location, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('locations', location)}><RemoveIcon /></Button>\r\n                <div>{location.name}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Questions:</div>\r\n            {state.mission.questions.map((question, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('questions', question)}><RemoveIcon /></Button>\r\n                <Question question={question}/>\r\n              </div>\r\n            )}\r\n          </div>\r\n            {game === 'game_1_missions' &&\r\n              <CreateGame1Data data={state.mission.game_1_mission_characters} characters={state.mission.characters}\r\n                onChangeCharacter={()=>{}} onJobCheckChange={()=>{}} onCountryCheckChange={()=>{}}/>\r\n            }\r\n            {game === 'game2' &&\r\n              <Game2Data />\r\n            }\r\n        </div>\r\n\r\n        <div>\r\n          <div>\r\n            <div>Personagens disponíveis</div>\r\n            {characters.items && characters.items.length > 0 && characters.items\r\n              .filter( character => !state.mission.missionCharacters.find( c => c.character.id === character.id) && !state.charactersList.find( c => c.character.id === character.id) && !state.charactersConfigList.find( c => c.character.id === character.id))\r\n              .map( (character, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addCharacterToList(character)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <Button onClick={editCharacterConfig(character)}>\r\n                  {character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateCharacter(!createCharacter)}>\r\n              {createCharacter ? \"Cancelar\" : \"Criar personagem\"}\r\n            </Button>\r\n            {createCharacter && <CreateCharacter /> }\r\n          </div>\r\n\r\n          <div>\r\n            <div>Locais disponíveis</div>\r\n            {locations.items && locations.items.length > 0 && locations.items\r\n              .filter( location => !state.mission.locations.find( l => l.id === location.id) )\r\n              .map( (location, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addToMission('locations', location)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <div>{location.name}</div>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateLocation(!createLocation)}>\r\n            {createLocation ? \"Cancelar\" : \"Criar local\"}\r\n            </Button>\r\n            {createLocation && <CreateLocation />}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Preset questions</div>\r\n            {questions.items && questions.items.length > 0 && questions.items\r\n              .filter( question => !state.mission.questions.find( c => c.id === question.id) )\r\n              .map( (question, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addToMission('questions', question)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <Question question={question}/>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateQuestion(!createQuestion)}>\r\n              {createQuestion ? \"Cancel\" : \"Create question\"}\r\n            </Button>\r\n            {createQuestion && <CreateQuestion /> }\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h5>Detalhes do personagem:</h5>\r\n          {state.characterConfig && <EditMissionCharacter missionCharacter={state.characterConfig} onDone={updateCharacterConfig} questions={state.mission.questions} cancel={cancelCharacterConfig}/>}\r\n          {state.newCharacterConfig && <EditNewMissionCharacter character={state.newCharacterConfig} onDone={addCharacterConfig} questions={state.mission.questions} cancel={cancelCharacterConfig}/>}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateMissionGame1\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditCharacter = ({character, onDone}) => {\r\n  const [state, setState] = React.useState({\r\n    name: character.name,\r\n    job: character.job ? character.job : '',\r\n    id: character.id,\r\n    answers: character.answers ? [...character.answers] : []\r\n  })\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    let aQ = _.cloneDeep(character.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...state.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setState({\r\n      ...state,\r\n      answers: [\r\n        ...state.answers.slice(0, index),\r\n        changedIndex,\r\n        ...state.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n  const getAnswer = (qId) => {\r\n    let a = state.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    \r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          Name:<input type='text' value={state.name} onChange={ e => setState({...state, name: e.target.value}) }/>\r\n        </div>\r\n        <div>\r\n          Job:<input type='text' value={state.job} onChange={ e => setState({...state, job: e.target.value}) } />\r\n        </div>\r\n        <div>\r\n          Country:<input type='text' value={state.country} onChange={ e => setState({...state, country: e.target.value}) } />\r\n        </div>\r\n        <div>{character.civilState}</div>\r\n        <div>\r\n          <div>JOGO 1 - Missões que participa:</div>\r\n          {character.game_1_missions.map((mission, mIndex) =>\r\n            <div key={mIndex}>\r\n              <div>{mIndex+1}: {mission.name}</div>\r\n              <div>\r\n                {mission.questions.map( (question, qIndex) =>\r\n                  <div key={qIndex}>\r\n                    <div>{question.question}</div>\r\n                    <input type='text' value={getAnswer(question.id)}\r\n                      onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <div>JOGO 2 - Missões que participa:</div>\r\n          {character.missions.map((mission, mIndex) =>\r\n            <div key={mIndex}>\r\n              <div>{mIndex+1}: {mission.name}</div>\r\n              <div>\r\n                {mission.questions.map( (question, qIndex) =>\r\n                  <div key={qIndex}>\r\n                    <div>{question.question}</div>\r\n                    <input type='text' value={getAnswer(question.id)}\r\n                      onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={character.wrongAnswer} onChange={e => setState({...state, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={character.rightAnswer} onChange={e => setState({...state, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={character.tip} onChange={e => setState({...state, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação:\r\n            </div>\r\n            <input type='text' value={character.acusationAnswer} onChange={e => setState({...state, acusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={character.endDialog} onChange={e => setState({...state, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(state)}>Salvar</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditCharacter\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport Character from '../Character'\r\nimport CreateCharacter from '../CreateCharacter'\r\nimport EditCharacter from '../EditCharacter'\r\n\r\nconst Characters = ({onAdd}) => {\r\n  const { charactersActions } = apiActions\r\n  const [createCharacter, setCreateCharacter] = React.useState(false)\r\n  const [edit, setEdit] = React.useState(-1)\r\n  const dispatch = useDispatch()\r\n  const characters = useSelector( state => state.characters)\r\n\r\n  React.useEffect(()=>{\r\n      dispatch(charactersActions.getAll())\r\n  }, [dispatch, charactersActions])\r\n\r\n  React.useEffect(()=>{\r\n    setEdit(-1)\r\n  }, [characters])\r\n\r\n  return (\r\n    <div>\r\n      <div>Área de personagens</div>\r\n      <button onClick={() => setCreateCharacter(!createCharacter)}>{createCharacter? 'Cancelar' : 'Criar personagem'} </button>\r\n      { createCharacter && <CreateCharacter /> }\r\n      <div>\r\n        <div>All Characters:</div>\r\n        { characters.loading && <div>Loading...</div> }\r\n        <div>\r\n          <span>Nome</span> <span>Estado civil</span> <span>Trabalho</span>\r\n        </div>\r\n        <div>\r\n          {characters.items.map((character, index) =>\r\n            <React.Fragment key={index}>\r\n              {edit === index ?\r\n                <div>\r\n                  <EditCharacter character={character} onDone={ state => () => dispatch(charactersActions.update(state))}/>\r\n                  <Button onClick={ () => setEdit(-1) }><CancelIcon /></Button>\r\n                </div>\r\n                : <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                    <Character character={character}/>\r\n                    <Button onClick={ () => setEdit(index) }><EditIcon /></Button>\r\n                  </div>\r\n              }\r\n              <br/>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Characters\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Question from '../Question'\r\nimport CreateQuestion from '../CreateQuestion'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst Questions = ({onAdd}) => {\r\n  const { questionsActions } = apiActions\r\n  const [createQuestion, setCreateQuestion] = React.useState(false)\r\n  const dispatch = useDispatch()\r\n  const questions = useSelector( state => state.questions)\r\n\r\n  React.useEffect(()=>{\r\n    if(questions.items.length === 0)\r\n      dispatch(questionsActions.getAll())\r\n  }, [dispatch, questionsActions, questions.items.length])\r\n\r\n  const editQuestion = (question) => () => {\r\n\r\n  }\r\n\r\n  const deleteQuestion = (question) => () => dispatch(questionsActions.delete(question.id))\r\n\r\n  return (\r\n    <div>\r\n      <div>Questions</div>\r\n      <button onClick={() => setCreateQuestion(!createQuestion)}>{createQuestion? 'Cancelar' : 'Criar pergunta'} </button>\r\n      { createQuestion && <CreateQuestion /> }\r\n      <div>\r\n        <div>All questions:</div>\r\n        <div>\r\n          <span>Question</span> <span>Correct</span>\r\n        </div>\r\n        <div>\r\n          {questions.items.map((question, index) =>\r\n            <div key={index}>\r\n              <Question question={question}/>\r\n              <Button onClick={editQuestion(question)}><EditIcon/></Button>\r\n              <Button onClick={deleteQuestion(question)}><DeleteIcon/></Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Questions\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Questionnaire from '../Questionnaire'\r\n// import CreateQuestionnaire from '../CreateQuestionnaire'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst Questionnaires = ({onAdd}) => {\r\n  const { questionnairesActions } = apiActions\r\n  const dispatch = useDispatch()\r\n  const questionnaires = useSelector( state => state.questionnaires)\r\n\r\n  React.useEffect(()=>{\r\n    if(questionnaires.items.length === 0)\r\n      dispatch(questionnairesActions.getAll())\r\n  }, [dispatch, questionnairesActions, questionnaires.items.length])\r\n\r\n  const editQuestionnaire = (questionnaire) => () => {\r\n\r\n  }\r\n\r\n  const deleteQuestionnaire = (questionnaire) => () => dispatch(questionnairesActions.delete(questionnaire.id))\r\n\r\n  return (\r\n    <div>\r\n      <div>Questionnaires</div>\r\n      {/* <button onClick={() => setCreateQuestionnaire(!createQuestionnaire)}>{createQuestionnaire? 'Cancel' : 'Create Questionnaire'} </button>\r\n      { createQuestionnaire && <CreateQuestionnaire /> } */}\r\n      <div>\r\n        <div>All questionnaires:</div>\r\n        <div>\r\n          <span>Questionnaire</span>\r\n        </div>\r\n        <div>\r\n          {questionnaires.items.map((questionnaire, index) =>\r\n            <div key={index}>\r\n              <Questionnaire questionnaire={questionnaire}/>\r\n              <Button onClick={editQuestionnaire(questionnaire)}><EditIcon/></Button>\r\n              <Button onClick={deleteQuestionnaire(questionnaire)}><DeleteIcon/></Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Questionnaires\r\n","import React from 'react'\r\nimport { apiActions } from '../../_actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst PlaySessions = () => {\r\n  const dispatch = useDispatch()\r\n  const playSessions = useSelector( state => state.play_sessions.items)\r\n  const { play_sessionsActions } = apiActions\r\n\r\n  React.useEffect(() => {\r\n    dispatch(play_sessionsActions.getAll())\r\n  }, [dispatch, play_sessionsActions])\r\n\r\n  return(\r\n    <div>\r\n      <div>PlaySessions:</div>\r\n      {playSessions.length > 0 && playSessions.map((playSession, index) =>\r\n        <div key={index}>\r\n          <div>User: {playSession.usersPermissionsUser.firstName} {playSession.usersPermissionsUser.lastName}</div>\r\n          <div>Missão: {playSession.mission.name}</div>\r\n          <div>\r\n          <div>PlayerActions:</div>\r\n          {playSession.player_actions.map((playerAction, index) =>\r\n            <div key={index}>TAG:{playerAction.data.tag}</div>\r\n          )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaySessions\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst Config = (props) => {\r\n  return(\r\n    <div id=\"config-dialog\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Config\r\n","import React from 'react'\r\nimport Config from '../Config'\r\n\r\nconst ConfigWindow = ({onConfig, onStatistics, onLeave, onClose}) => {\r\n  return(\r\n    <Config>\r\n      <div className=\"config-option\" onClick={onConfig}>\r\n        <span lang=\"pt-br\">Configurações de jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Game settings</span>\r\n      </div>\r\n      <div className=\"config-option\" onClick={onStatistics}>\r\n        <span lang=\"pt-br\">Estatísticas</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Statistics</span>\r\n      </div>\r\n      <div className=\"config-option\" onClick={onLeave}>\r\n        <span lang=\"pt-br\">Sair do jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Leave game</span>\r\n      </div>\r\n      <div id=\"config-fechar\" onClick={onClose}>×</div>\r\n    </Config>\r\n  )\r\n}\r\n\r\nexport default ConfigWindow\r\n","import React from 'react'\r\nimport Config from '../Config'\r\nimport Button from '@material-ui/core/Button'\r\nimport VolumeMute from '@material-ui/icons/VolumeMute'\r\nimport VolumeUp from '@material-ui/icons/VolumeUp'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\n\r\nconst GameConfig = (\r\n  {\r\n    onVolumeMute, onVolumeUp, volume, onVolumeChange,\r\n    fontSize, onFontSizeChange, assistMode, onAssistModeChange,\r\n    onAccessibilityLeft, onAccessibilityRight,\r\n    onBack, onClose\r\n  }) => {\r\n  return(\r\n    <Config>\r\n      <div id=\"title\">\r\n        <span lang=\"pt-br\">Configurações de jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Game settings</span>\r\n      </div>\r\n      <table id=\"game-options\">\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Volume</span>\r\n              <span lang=\"en\">Volume</span>\r\n            </td>\r\n            <td>\r\n              <Button onClick={onVolumeMute}>\r\n                <VolumeMute />\r\n              </Button>\r\n                <Slider value={volume} onChange={onVolumeChange}/>\r\n              <Button onClick={onVolumeUp}>\r\n                <VolumeUp />\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Tamanho da fonte</span>\r\n              <span lang=\"en\">Font size</span>\r\n            </td>\r\n            <td id=\"tamanho-fonte\">\r\n              <span className=\"label-pequeno\">Aa</span>\r\n              <Slider value={fontSize} onChange={onFontSizeChange}/>\r\n              <span className=\"label-grande\">Aa</span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Modo assistência</span>\r\n              <span lang=\"en\">Assist mode</span>\r\n            </td>\r\n            <td>\r\n              <Checkbox checked={assistMode} onChange={onAssistModeChange}/>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Acessibilidade</span>\r\n              <span lang=\"en\">Accessibility</span>\r\n            </td>\r\n            <td id=\"tipo-acessibilidade\">\r\n              <Button onClick={onAccessibilityLeft}> {'❮'} </Button>\r\n              <div>\r\n                <span lang=\"pt-br\">Nenhum</span>\r\n                <span lang=\"en\">None</span>\r\n              </div>\r\n              <Button onClick={onAccessibilityRight}> {'❯'} </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td id=\"voltar-cell\" colSpan=\"2\">\r\n              <Button onClick={onBack}>Voltar</Button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div id=\"config-fechar\" onClick={onClose}>×</div>\r\n    </Config>\r\n  )\r\n}\r\n\r\nexport default GameConfig\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { headerActions, musicActions } from \"../../_actions\";\r\nimport ConfigWindow from \"../../_components/ConfigWindow\";\r\nimport GameConfig from \"../../_components/GameConfig\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { settings } from \"../../img\";\r\nimport \"./index.scss\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nconst dimensions = { width: 16, height: 9}\r\nconst ALIGNMENTS = {\r\n  TOP: \"flex-start\",\r\n  LEFT: \"flex-start\",\r\n  CENTER: \"center\",\r\n  RIGHT: \"flex-end\",\r\n  BOTTOM: \"flex-end\"\r\n}\r\n\r\nconst GameContext = (props) => {\r\n  const [state, setState] = React.useState({\r\n    fontSize: 12,\r\n    assistMode: false,\r\n    accessibility: \"NONE\",\r\n    gameConfig: false,\r\n    back: false,\r\n    config: false,\r\n    debug: true,\r\n    alignment: {vertical: ALIGNMENTS.CENTER, horizontal: ALIGNMENTS.CENTER}\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const music = useSelector( state  => state.music)\r\n  let headerInfo = useSelector( state  => state.header)\r\n\r\n  let { children } = props;\r\n  children = { ...children, props: { ...props } };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n    return () => {\r\n      dispatch(headerActions.clearAll());\r\n      dispatch(headerActions.setState(headerConstants.STATES.NORMAL));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {headerInfo.state === headerConstants.STATES.HIDDEN && (\r\n        <div\r\n          id=\"floating-config-btn\"\r\n          onClick={() => setState({ ...state, config: true })}\r\n        >\r\n          <img src={settings} alt=\"config\" />\r\n        </div>\r\n      )}\r\n      {state.config && (\r\n        <ConfigWindow\r\n          onConfig={() =>\r\n            setState({ ...state, config: false, gameConfig: true })\r\n          }\r\n          onStatistics={() => {}}\r\n          onLeave={() => setState({ ...state, back: true })}\r\n          onClose={() => setState({ ...state, config: false })}\r\n        />\r\n      )}\r\n      {state.gameConfig && (\r\n        <GameConfig\r\n          volume={music.volume}\r\n          onVolumeMute={() => dispatch(musicActions.volume(0)) }\r\n          onVolumeUp={() => dispatch(musicActions.volume(100)) }\r\n          onVolumeChange={(e, newValue) => dispatch(musicActions.volume(newValue)) }\r\n          fontSize={state.fontSize}\r\n          onFontSizeChange={(e, newValue) => setState({ ...state, fontSize: newValue }) }\r\n          assistMode={state.assistMode}\r\n          onAssistModeChange={(e) => setState({ ...state, assistMode: e.target.checked }) }\r\n          onAccessibilityLeft={() => {}}\r\n          onAccessibilityRight={() => {}}\r\n          onBack={() => setState({ ...state, gameConfig: false, config: true })}\r\n          onClose={() => setState({ ...state, gameConfig: false })}\r\n        />\r\n      )}\r\n      <ReactAudioPlayer\r\n        src={music.url}\r\n        autoPlay\r\n        volume={music.volume / 100}\r\n        loop={true}\r\n      />\r\n      <div id=\"game-screen-wrapper\" style={{alignItems: state.alignment.vertical, justifyContent: state.alignment.horizontal}}>\r\n        <div id=\"game-screen\" style={{\"--aspectRatio\": dimensions.width / dimensions.height}}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n      {state.back && <Redirect to=\"/userspace\" />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n//className={state.debug && \"debug\"}\r\nexport default GameContext;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Conversa from \"./_components/Conversa\";\r\nimport { headerActions } from \"./_actions\";\r\nimport { headerConstants } from \"./_constants\";\r\n\r\nconst TestPage = () => {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n    return () => {\r\n      dispatch(headerActions.setState(headerConstants.STATES.NORMAL));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const divStyle = {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  };\r\n\r\n  // -------------------------------------------\r\n  // MODIFICAR SOMENTE DAQUI PARA BAIXO\r\n  // -------------------------------------------\r\n\r\n  return (\r\n    <div style={divStyle}>\r\n      {\" \"}\r\n      {/* NÃO MODIFICAR ESSA LINHA */}\r\n      <Conversa\r\n        convOptions={[\r\n          { question: \"Pergunta 1\", answers: [\"Resposta 1.1\", \"Resposta 1.2\"] },\r\n          { question: \"Pergunta 2\", answers: [\"Resposta 2.1\"] },\r\n          { question: \"Pergunta 3\", answers: [\"Resposta 3.1\"] },\r\n          { question: \"Pergunta 4\", answers: [\"Resposta 4.1\"] },\r\n        ]}\r\n      />\r\n    </div> /* NÃO MODIFICAR ESSA LINHA */\r\n  );\r\n\r\n  // -------------------------------------------\r\n  // MODIFICAR SOMENTE ATÉ AQUI\r\n  // -------------------------------------------\r\n};\r\n\r\nexport default TestPage;\r\n","\r\nconst rootUrl = process.env.NODE_ENV === 'development'? ''\r\n              : process.env.NODE_ENV === 'production'? process.env.PUBLIC_URL\r\n              : ''\r\n\r\nexport default rootUrl\r\n","import './App.scss'\r\nimport AppHeader from './_components/AppHeader'\r\nimport Home from './pages/Home'\r\nimport Game1 from './pages/Game1'\r\nimport Game2 from './pages/Game2'\r\nimport Game3 from './pages/Game3'\r\nimport Game4 from './pages/Game4'\r\nimport Game5 from './pages/Game5'\r\nimport Game6 from './pages/Game6'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\"\r\n\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { PrivateRoute } from './_components/PrivateRoute'\r\n// import { history } from './_helpers'\r\nimport Login from './pages/Login'\r\nimport UserSpace from './pages/UserSpace'\r\nimport UsersCRUD from './pages/UsersCRUD'\r\nimport Missions from './pages/Missions'\r\nimport CreateMission from './pages/CreateMission'\r\nimport Characters from './pages/Characters'\r\nimport Questions from './pages/Questions'\r\nimport Register from './pages/Register'\r\nimport Questionnaires from './pages/Questionnaires'\r\nimport PlaySessions from './pages/PlaySessions'\r\nimport GameContext from './pages/GameContext'\r\nimport { headerConstants } from './_constants'\r\nimport TestPage from './TestPage'\r\nimport rootUrl from './rootUrl'\r\n\r\nconst App = () => {\r\n\r\n  let palette = \"palette01\"\r\n  document.getElementsByTagName('html')[0].className = palette\r\n\r\n  let gameMode = useSelector( state => state.header.state ) !== headerConstants.STATES.NORMAL;\r\n  console.log('env:', process.env.NODE_ENV)\r\n  console.log('rootUrl:', rootUrl)\r\n  return (\r\n    <div className={ \"App\" + (gameMode? \" game-mode\" : \"\")}>\r\n      <Router basename={rootUrl}>\r\n        <AppHeader props={{isLogged: useSelector(state => state.authentication.loggedIn)}} />\r\n        <Switch>\r\n          <Redirect path={'/EADLearningTool'} to={'/userspace'}/>\r\n          <Route exact path={'/'} component={Home} />\r\n          <Route exact path={'/home'} component={Home} />\r\n          <Route path={`/login`} component={Login} />\r\n          <Route path={`/register`} component={Register} />\r\n          <PrivateRoute exact path={`/game1/:id`} render={(props) => <GameContext {...props}><Game1 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game2/:id`} render={(props) => <GameContext {...props}><Game2 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game3/:id`} render={(props) => <GameContext {...props}><Game3 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game4/:id`} render={(props) => <GameContext {...props}><Game4 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game5/:id`} render={(props) => <GameContext {...props}><Game5 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game6/:id`} render={(props) => <GameContext {...props}><Game6 /></GameContext>} />\r\n          <PrivateRoute exact path={`/test`} component={TestPage} />\r\n          <PrivateRoute exact path={`/userspace`} component={UserSpace} />\r\n          <PrivateRoute exact path={`/missions`} component={Missions} />\r\n          <PrivateRoute exact path={`/questions`} component={Questions} />\r\n          <PrivateRoute exact path={`/questionnaires`} component={Questionnaires} />\r\n          <PrivateRoute exact path={`/missions/create`} component={CreateMission} />\r\n          <PrivateRoute exact path={`/missions/edit/:game/:id`} component={CreateMission} />\r\n          <PrivateRoute exact path={`/characters`} component={Characters} />\r\n          <PrivateRoute exact path={`/users`} component={UsersCRUD} />\r\n          <PrivateRoute exact path={`/playSessions`} component={PlaySessions}/>\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n/*\r\nreturn (\r\n  <div>\r\n    {/* { alert.message &&\r\n      <div className={`alert ${alert.type}`}>{alert.message}</div>\r\n    })\r\n*/\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport {positions, Provider as AlertProvider} from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\nimport { store } from './_helpers'\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.TOP_RIGHT\r\n}\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <AlertProvider template={AlertTemplate} {...options}>\r\n        <App />\r\n      </AlertProvider>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-icon\":\"Recipe_list-icon__2LL-E\",\"shop-list-div\":\"Recipe_shop-list-div__3Sp2b\",\"overlay-shop-list\":\"Recipe_overlay-shop-list__K4ddh\",\"shop-list\":\"Recipe_shop-list__sBQfl\",\"shop-list-item-container\":\"Recipe_shop-list-item-container__2nYK2\",\"shop-list-item\":\"Recipe_shop-list-item__3S65a\",\"checkmark\":\"Recipe_checkmark__1tARE\",\"shop-list-item-img\":\"Recipe_shop-list-item-img__3VKws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aisle\":\"Aisle_aisle__1Ley4\",\"shelves\":\"Aisle_shelves__3N0Vc\",\"items\":\"Aisle_items__3Vcfo\",\"shelfPrice\":\"Aisle_shelfPrice__XPfAI\",\"products\":\"Aisle_products__OgKpo\",\"tooltip\":\"Aisle_tooltip__2V79d\",\"tooltiptext\":\"Aisle_tooltiptext__2V_Ux\",\"inflate\":\"Aisle_inflate__2WWcW\",\"btnChangeAisle\":\"Aisle_btnChangeAisle__12NyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__4fA21\",\"blink\":\"Button_blink__1GV7A\",\"inflate\":\"Button_inflate__2CM-f\",\"left\":\"Button_left__ruKy_\",\"stayAsPill\":\"Button_stayAsPill__3l_4i\",\"showArrow\":\"Button_showArrow__2P9Et\",\"right\":\"Button_right__o_sCL\",\"cor1\":\"Button_cor1__1Drse\",\"cor2\":\"Button_cor2__25Reu\",\"cor3\":\"Button_cor3__1-5uE\",\"cor4\":\"Button_cor4__26JP7\",\"cor5\":\"Button_cor5__3yH_O\",\"cor6\":\"Button_cor6__67alL\",\"jump\":\"Button_jump__2yS7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tutorialBlob\":\"Tutorial_tutorialBlob__2BA-9\",\"tutorialGrid\":\"Tutorial_tutorialGrid__3f814\",\"blobLeft\":\"Tutorial_blobLeft__1mdBt\",\"blobRight\":\"Tutorial_blobRight__IItoW\",\"btnTutorial\":\"Tutorial_btnTutorial__3wOej\"};"],"sourceRoot":""}
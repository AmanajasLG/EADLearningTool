{"version":3,"sources":["components/pages/game1/pages/page1/index.js","components/pages/game1/pages/page2/index.js","App.js","reportWebVitals.js","index.js"],"names":["Page1","to","Page2","React","useState","room","state","setState","buttonClick","num","onClick","App","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAYeA,EATD,WACV,OACI,gCACI,8HACA,cAAC,IAAD,CAAMC,GAAG,SAAT,4B,QCeGC,EAnBD,WAAO,IAAD,EACOC,IAAMC,SAAS,CAACC,KAAM,IAD7B,mBACZC,EADY,KACLC,EADK,KAGbC,EAAc,SAACC,GAAD,OAAS,WAC5BF,EAAS,CAACF,KAAMI,MAGd,OACI,gCACI,6CACT,2CAAcH,EAAMD,QACpB,wBAAQK,QAASF,EAAY,GAA7B,wBACA,wBAAQE,QAASF,EAAY,GAA7B,wBACA,wBAAQE,QAASF,EAAY,GAA7B,wBACA,wBAAQE,QAASF,EAAY,GAA7B,4B,OCYYG,MAjBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,wBAAQA,UAAU,aAAlB,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,mBAAZ,SAA+B,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOA,KAAK,SAAZ,SAAqB,cAAC,EAAD,MACrB,cAAC,IAAD,CAAOA,KAAK,SAAZ,SAAqB,cAAC,EAAD,gBCTlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ca7dfb78.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Page1 = () => {\r\n    return (\r\n        <div>\r\n            <div>Parabéns! Você foi contratado para trabalhar na escola X! Hoje é seu primeiro dia!</div>\r\n            <Link to=\"/page2\">Começar</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page1","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Page2 = () => {\r\n\tconst [state, setState] = React.useState({room: 0});\r\n\r\n\tconst buttonClick = (num) => () => {\r\n\t\tsetState({room: num});\r\n\t}\r\n\r\n    return (\r\n        <div>\r\n            <div>Página2</div>\r\n\t\t\t<div>Estado: {state.room}</div>\r\n\t\t\t<button onClick={buttonClick(1)}>Botão 1</button>\r\n\t\t\t<button onClick={buttonClick(2)}>Botão 2</button>\r\n\t\t\t<button onClick={buttonClick(3)}>Botão 3</button>\r\n\t\t\t<button onClick={buttonClick(4)}>Botão 4</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page2","\r\nimport './App.css'\r\nimport Page1 from './components/pages/game1/pages/page1'\r\nimport Page2 from './components/pages/game1/pages/page2'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <header className=\"App-header\">\r\n          {/* <Logo /> */}\r\n          <Switch>\r\n            <Route path=\"/EADLearningTool\"><Page1 /></Route>\r\n            <Route path=\"/page1\"><Page1 /></Route>\r\n            <Route path=\"/page2\"><Page2 /></Route>\r\n          </Switch>\r\n        </header>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
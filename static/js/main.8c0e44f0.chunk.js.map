{"version":3,"sources":["img/Game1/Celular Base.svg","img/Game1/Mão dedão.svg","img/Game1/Mão palma.svg","img/Game1/Celular Sala.svg","img/Game2/parabens_vitoria-persistente.svg","img/Game2/parabens_vitoria-primeira.svg","img/Game2/símbolo_feedback errado.svg","img/Game2/bloco.svg","img/Game2/blocoButton.svg","img/Game3/shelf.svg","img/Game3/cart.svg","img/Game3/ingredients-list.svg","img/Game3/check.svg","img/Game3/recipe-bg.svg","img/Game3/list-icon.svg","img/Game3/checkout.svg","img/Game3/wallet.svg","img/Game3/hourglass-full.svg","img/Game3/hourglass-empty.svg","img/Game3/chashier-table.svg","img/Game3/ingredients-list-rotated.svg","img/Game3/cashier-bg.svg","img/Game3/kitchen.svg","img/avatar1.svg","img/i-home.svg","img/i-notification.svg","img/i-settings.svg","img/lampada_apagada.svg","img/lampada_acesa.svg","img/ícone_jogo1.svg","img/bg-forma-azul.svg","img/bg-forma-verde.svg","img/Score Baixo_blob.svg","img/bg-forma-laranja.svg","_constants/alert.constants.js","_constants/user.constants.js","_constants/header.constants.js","apiValues.js","_constants/api.constants.js","_helpers/apiConstantBuilder.js","_constants/game.constants.js","_constants/music.constants.js","_actions/alert.actions.js","_helpers/history.js","_reducers/authentication.reducer.js","_helpers/reducerBuilder.js","_reducers/api.reducers.js","_reducers/apiGame.reducer.js","_reducers/index.js","_reducers/registration.reducer.js","_reducers/users.reducer.js","_reducers/alert.reducer.js","_reducers/header.reducer.js","_reducers/music.reducer.js","_helpers/store.js","_helpers/auth-header.js","_helpers/generalFunctions.js","_services/api.services.js","_services/user.services.js","_services/apiGame.services.js","_actions/user.actions.js","_actions/header.actions.js","_actions/apiGame.actions.js","_actions/api.actions.js","_actions/music.actions.js","_components/UserHeader/index.js","_components/DefaultHeader/index.js","_components/AppHeader/index.js","pages/Home/index.js","_components/Init/index.js","pages/Game2/components/Result/index.js","_components/RoomSelect/index.js","_components/Sala/index.js","_components/Character/index.js","pages/Game1/initialState.js","pages/Game1/initialDialog.js","pages/Game1/stub.js","_components/Dropdown/index.js","_components/FullscreenOverlay/index.js","_components/Phone/index.js","_components/Menu/index.js","_components/DialogCharacter/index.js","_components/DialogHistory/index.js","_components/Writer/index.js","_components/Conversa/index.js","pages/Game1/index.js","_components/AcusationLamp/index.js","pages/Game2/initialState.js","pages/Game2/index.js","pages/Game3/initialState.js","_components/Timer/index.js","_components/Aisle/index.js","pages/Game3/components/Intro/index.js","pages/Game3/components/Tutorial/index.js","pages/Game3/index.js","_components/Recipe/index.js","pages/Game4/stub.js","pages/Game4/initialState.js","pages/Game4/index.js","_components/DressingCharacter/index.js","_components/Wardrobe/index.js","pages/Game5/initialState.js","pages/Game5/stub.js","pages/Game5/index.js","pages/Game6/initialState.js","pages/Game6/stub.js","pages/Game6/index.js","_components/PrivateRoute/index.js","pages/Login/index.js","pages/UserSpace/index.js","pages/Register/index.js","_components/UserInfo/index.js","pages/UsersCRUD/index.js","pages/Mission/index.js","pages/Character/index.js","pages/Question/index.js","pages/EditMission/index.js","pages/Missions/index.js","pages/CreateCharacter/index.js","pages/CreateLocation/index.js","pages/CreateQuestion/index.js","pages/CreateMission/components/EditMissionCharacter.js","pages/CreateMission/components/EditNewMissionCharacter.js","pages/CreateMission/missionCharacterInitialState.js","pages/CreateMission/Game1Data/index.js","pages/CreateMission/Game2Data/index.js","pages/CreateMission/index.js","pages/EditCharacter/index.js","pages/Characters/index.js","pages/Questions/index.js","pages/Questionnaires/index.js","pages/PlaySessions/index.js","_components/Config/index.js","_components/ConfigWindow/index.js","_components/GameConfig/index.js","pages/GameContext/index.js","TestPage.js","rootUrl.js","App.js","reportWebVitals.js","index.js"],"names":["alertConstants","userConstants","headerConstants","NORMAL","HIDDEN","OVERLAY","apiValues","apiConstants","map","value","UPDATE_REQUEST","apiDataType","UPDATE_SUCCESS","UPDATE_FAILURE","CREATE_REQUEST","CREATE_SUCCESS","CREATE_FAILURE","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","GETBYID_REQUEST","GETBYID_SUCCESS","GETBYID_FAILURE","FIND_REQUEST","FIND_SUCCESS","FIND_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","gameConstants","musicConstants","alertActions","success","message","type","error","clear","createBrowserHistory","user","JSON","parse","localStorage","getItem","initialState","loggedIn","loading","items","apiReducers","Object","keys","forEach","apiType","constants","toLowerCase","state","action","creating","data","updating","index","findIndex","item","id","copy","slice","deleting","filter","deleteError","rootReducer","combineReducers","authentication","loggingIn","logginFailure","registration","registering","users","userCopy","roles","alert","header","title","subtitle","newTitle","newSubtitle","newState","music","url","volume","game","loggerMiddleware","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","authHeader","jwt","numberToMoney","n","units","tens","hundreds","chunks","chunk","ints","i","word","words","string","toString","parseInt","split","length","push","reverse","parseFloat","replace","join","goRound","max","Math","abs","shuffle","array","temporaryValue","randomIndex","currentIndex","shuffledArray","floor","random","zeroFill","s","size","api","axios","create","baseURL","getByIdBuilder","routeName","method","headers","then","handleResponse","findBuilder","query","createBuilder","updateBuilder","deleteBuilder","response","status","location","reload","Promise","reject","statusText","apiServices","getAll","getById","find","update","delete","userService","login","email","password","identifier","setItem","stringify","logout","register","console","log","getRoles","removeItem","apiGameServices","params","userActions","dispatch","failure","request","resolve","messages","headerActions","requester","service","route","payload","gameActions","info","getByIdConstructor","findData","findConstructor","createData","createConstructor","updateData","updateConstructor","deleteData","deleteConstructor","getAllConstructor","apiActions","musicActions","UserHeader","pageInfo","headerInfo","useSelector","React","useState","view","setState","useDispatch","useAlert","className","onClick","show","src","home","alt","notifications","settings","avatar","style","position","backgroundColor","top","margin","width","height","Button","DefaultHeader","AppHeader","props","isLogged","Home","to","Init","icon","name","description","nameTranslate","descriptionTranslate","onStart","onBack","ready","Result","gameEndState","str","RoomSelect","buttonList","onChange","showInBtnFormat","useEffect","lang","num","Sala","children","roomData","img","setCurrentChar","background","Character","zDepth","character","dragPosition","showNameOnHover","characterAssets","asset","bodyPart","image","initialValue","back","scene","endGame","currentLocationIndex","locations","jobs","countries","names","contactsTemplate","contactsAtSession","dialogs","questionsAsked","result","totalFields","mainError","feedback","dialogHistory","answers","preSpeech","currentChar","characterFeeling","showContacts","maxQuestions","shouldMinimize","shouldCloseDialog","wrongContacts","tracking","question","stub","backgroundAssets","characters","answer","Dropdown","defaultText","label","optionList","disabled","option","FullscreenOverlay","showCloseBtn","shouldExit","onClickClose","onReadyToExit","bgRGBA","closeRGB","closeHoverRGB","Error","onAnimationEnd","event","target","currentTarget","r","g","b","a","Phone","modifyContact","contacts","onFinish","onAddContact","onMinimize","maximized","_shouldMinimize","smallPhone","palma","bigPhone","dedao","contact","key","showName","e","showJob","job","showCountry","country","_contatoTemplate","display","Menu","onButtonClick","color","fontSize","button","hasOwnProperty","active","DialogCharacter","feeling","characterImg","DialogHistory","dialog","speaker","text","Writer","characterTime","onWritten","afterWrittenTime","timeoutID","setTimeout","clearTimeout","substring","Conversa","showDialogHistory","onClearDialogHistory","callAfterWritterForEveryMsg","msPerCharacter","waitAfterWritten","prevDialogHistory","charPreSpeech","convOptions","charFeeling","afterWriter","onExited","onConvoChoiceMade","convoChoosen","querFechar","currentAnswer","flexGrow","updateState","Game1","play_sessionsActions","match","missions","mission","missionData","userId","currentPlaySession","play_sessions","language","backgroundAudio","trackPlayerInput","getClickedObject","actions","tag","nodeName","class","innerHTML","includes","clickTime","Date","document","addEventListener","removeEventListener","Set","missionCharacters","reduce","acc","missionCharacter","flat","sort","hasEmptyField","onStartGame","convOption","updatedState","close","shouldCloseConvo","onMenuButtonClick","indexOf","c","closeDialog","restart","hasPlayed","onPhoneFinish","missionContact","contactAtSession","gabarito","contactTemplate","changeRoomPopUp","onGoNextRoom","metrics","metric","metricTranslate","translate","count","t","score","toFixed","obj","feedbacks","minScore","maxScore","won","initIcon","refreshDialog","initialDialog","nextRoomTextWrong","nextRoomTextWrongTranslate","translation","nextRoomTextRight","nextRoomTextRightTranslate","min","topAsset","textTranslate","href","backgroundImage","blobLaranja","blobLowScore","mobileBackground","tries","AcusationLamp","lamp_apagada","lamp_acesa","currentRoom","isOnDialog","found","tips","acusation","closeAcusation","validQuestions","tutorialStep","seeTutorial","checkedPlayed","tipsCount","dialogStep","totalDialogSteps","questionsByStep","showConvo","questions","targetName","correct","ncorrect","correctMinimum","startedTimestamp","now","elapsedTime","spokenCharacters","Game2","resultsCount","dialogInitialState","availableCharacters","tutorialRoom","tutorial","totalWeight","crowdestRoomPop","emptiestRoomPop","maxWeight","weights","weight","rand","locationIndex","availableAnswers","selectedQuestions","source","splice","temp","amountChars","j","exchangeWith","aux","tip","endTutorial","mc","wrongEndAnswer","refresh","endDialog","rightEndAnswer","tchaus","rIdx","closeAfterWritter","onRefreshDialog","tutorialCharacter","tutorialScreen","showTips","zIndex","marginLeft","bloco","padding","blocoButton","iconVitoriaPrim","iconVitoriaPers","blobAzul","blobVerde","iconDerrota","iconDicas","spokenCharactersCount","validQuestionsCount","cart","recipe","ingredientsList","aisles","currentAisle","checkout","onPayment","payment","win","change","runTimer","reaminingTime","moneySelection","Timer","seconds","onEnd","onStop","run","timeout","sentRemaning","previousRef","useRef","current","Aisle","products","addProduct","toPreviousAisle","toNextAisle","shelf","product","Array","backgroundSize","backgroundRepeat","backgroundPosition","overflow","tooltip","Intro","chef","goToTutorial","screen","kitchen","ingredientsListRotated","ingredient","Tutorial","aisle","shoppingCart","removeProduct","goToMarket","step","tutorialLine","shopList","removeProductNextLine","marginTop","listIcon","ingredientsListBg","listCheck","hourglassFull","Game3","timesPlayed","recipes","resumeRecipe","ingredients","measure","price","unityValue","quantity","shelfCount","separation","arr","len","splitArrayIntoChunksOfLen","cartUpdate","checkShoppingList","cartIngredient","cartItem","haveAll","moveToCheckout","checkoutConfirm","addToPayment","money","moneyObj","paymentUpdate","removeFromPayment","moveToPayment","doPayment","getWrongItemsInCart","rightQuantity","userQuantity","timeUp","wrongIngredients","secondsTaken","remainingTime","rightPayment","remaining","cashierTable","wallet","hourglassEmpty","Recipe","closeText","onClose","dishes","rightDishes","showRecipe","selectItem","selected","cookPhase","shuffled","orderedLetters","prepared","servePhase","shuffledDishes","shuffledDishesNames","dishImageSelected","dishNameSelected","pairCheck","tableDish","allDishes","Game4","onSecondPassed","onTimeEnd","next","allPrepared","onLetterClick","letter","onNameSelected","dish","d","onSeeTutorial","cook","DressingCharacter","clothesTypes","clothes","onRemoveClick","Wardrobe","onClothesClick","Tabs","Tab","chooseCharacterScreen","choosenCharacter","showInvitation","proceedToDressingConfirmation","dressingContext","dressingTabIndex","readyAlert","invitation","date","time","season","Game5","clotheCount","cellPhoneStart","showCellphone","namingClothesContext","selectedClothesName","selectedColor","day","where","when","Game6","showRemove","PrivateRoute","Component","component","render","rest","pathname","from","useStyles","makeStyles","theme","root","palette","grey","paper","spacing","flexDirection","alignItems","secondary","main","form","submit","Login","inputs","setInputs","submitted","setSubmitted","classes","handleChange","Grid","container","CssBaseline","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","onSubmit","preventDefault","catch","noValidate","TextField","required","fullWidth","autoComplete","autoFocus","justify","UserSpace","username","gameType","process","Register","languagesActions","firstName","lastName","languages","redirect","setRedirect","blocked","setBlocked","Container","select","MenuItem","UserInfo","provider","checked","confirmed","UsersCRUD","Mission","getAnswer","qId","borderStyle","borderRadius","characterAsset","civilState","game_1_missions","qIndex","wrongAnswer","rightAnswer","acusationAnswer","Question","EditMission","onDone","charList","setCharList","locationList","setLocationList","questionList","setQuestionList","addToMission","removeFromMission","addLocationToMission","removeLocationFromMission","l","addQuestionToMission","removeQuestionFromMission","Missions","missionsActions","game_1_missionsActions","game1missions","createMission","setCreateMission","edit","setEdit","CreateCharacter","charactersActions","setName","setJob","setCivilState","civilStates","estadosCivis","cs","Radio","CreateLocation","locationsActions","placeholder","CreateQuestion","questionsActions","group","maxWidth","aria-describedby","FormLabel","RadioGroup","aria-label","FormControlLabel","control","EditMissionCharacter","cancel","editAnswer","aQ","_","cloneDeep","changedIndex","rightAcusationAnswer","wrongAcusationAnswer","EditNewMissionCharacter","setmissionCharacter","missionCharacterInitialState","targetCharacter","CreateGame1Data","onCheckChange","game_1_mission_charactersActions","Checkbox","Game2Data","CreateMissionGame1","originalMission","m","charactersList","charactersConfigList","characterConfig","newCharacterConfig","createCharacter","setCreateCharacter","createLocation","setCreateLocation","createQuestion","setCreateQuestion","editCharacterConfig","createCharacterConfig","cancelCharacterConfig","addCharacterToList","removeCharacterFromList","flexShrink","flexBasis","missionCharactersCreate","game_1_mission_characters","onChangeCharacter","onJobCheckChange","onCountryCheckChange","mission_charactersActions","EditCharacter","mIndex","Characters","onAdd","Fragment","Questions","deleteQuestion","Questionnaires","questionnairesActions","questionnaires","deleteQuestionnaire","questionnaire","PlaySessions","playSessions","playSession","usersPermissionsUser","player_actions","playerAction","Config","ConfigWindow","onConfig","onStatistics","onLeave","GameConfig","onVolumeMute","onVolumeUp","onVolumeChange","onFontSizeChange","assistMode","onAssistModeChange","onAccessibilityLeft","onAccessibilityRight","Slider","colSpan","GameContext","accessibility","gameConfig","config","autoPlay","loop","newValue","TestPage","right","bottom","left","rootUrl","App","getElementsByTagName","gameMode","basename","path","exact","CreateMission","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","options","positions","TOP_RIGHT","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.8c0e44f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Celular Base.794704d0.svg\";","export default __webpack_public_path__ + \"static/media/Mão dedão.60615287.svg\";","export default __webpack_public_path__ + \"static/media/Mão palma.ff873eea.svg\";","export default __webpack_public_path__ + \"static/media/Celular Sala.f026f530.svg\";","export default __webpack_public_path__ + \"static/media/parabens_vitoria-persistente.62184df1.svg\";","export default __webpack_public_path__ + \"static/media/parabens_vitoria-primeira.a06b772e.svg\";","export default __webpack_public_path__ + \"static/media/símbolo_feedback errado.7ae11eab.svg\";","export default __webpack_public_path__ + \"static/media/bloco.18b55b9f.svg\";","export default __webpack_public_path__ + \"static/media/blocoButton.99d070aa.svg\";","export default __webpack_public_path__ + \"static/media/shelf.bedc3c7c.svg\";","export default __webpack_public_path__ + \"static/media/cart.e38072ee.svg\";","export default __webpack_public_path__ + \"static/media/ingredients-list.ac3701f3.svg\";","export default __webpack_public_path__ + \"static/media/check.74d8eed8.svg\";","export default __webpack_public_path__ + \"static/media/recipe-bg.6f1d88ac.svg\";","export default __webpack_public_path__ + \"static/media/list-icon.022d0ebd.svg\";","export default __webpack_public_path__ + \"static/media/checkout.e736737a.svg\";","export default __webpack_public_path__ + \"static/media/wallet.74eef3a3.svg\";","export default __webpack_public_path__ + \"static/media/hourglass-full.3946bb9c.svg\";","export default __webpack_public_path__ + \"static/media/hourglass-empty.f2a68e53.svg\";","export default __webpack_public_path__ + \"static/media/chashier-table.aab5bb14.svg\";","export default __webpack_public_path__ + \"static/media/ingredients-list-rotated.2096f259.svg\";","export default __webpack_public_path__ + \"static/media/cashier-bg.2fd3ef7f.svg\";","export default __webpack_public_path__ + \"static/media/kitchen.8fd918a2.svg\";","export default __webpack_public_path__ + \"static/media/avatar1.48f082ac.svg\";","export default __webpack_public_path__ + \"static/media/i-home.949bb3de.svg\";","export default __webpack_public_path__ + \"static/media/i-notification.995f04ef.svg\";","export default __webpack_public_path__ + \"static/media/i-settings.1d1409d0.svg\";","export default __webpack_public_path__ + \"static/media/lampada_apagada.3f2311d7.svg\";","export default __webpack_public_path__ + \"static/media/lampada_acesa.aeef7b84.svg\";","export default __webpack_public_path__ + \"static/media/ícone_jogo1.244e8c29.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-azul.166555e1.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-verde.60dfa7ed.svg\";","export default __webpack_public_path__ + \"static/media/Score Baixo_blob.f42aa286.svg\";","export default __webpack_public_path__ + \"static/media/bg-forma-laranja.01e2bb93.svg\";","export const alertConstants = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    CLEAR: 'ALERT_CLEAR'\r\n}","export const userConstants = {\r\n    REGISTER_REQUEST: 'USER_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USER_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USER_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USER_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USER_LOGIN_FAILURE',\r\n\r\n    UPDATE_REQUEST: 'USER_UPDATE_REQUEST',\r\n    UPDATE_SUCCESS: 'USER_UPDATE_SUCCESS',\r\n    UPDATE_FAILURE: 'USER_UPDATE_FAILURE',\r\n\r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USER_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USER_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USER_GETALL_FAILURE',\r\n\r\n    GETBYID_REQUEST: 'USER_GETBYID_REQUEST',\r\n    GETBYID_SUCCESS: 'USER_GETBYID_SUCCESS',\r\n    GETBYID_FAILURE: 'USER_GETBYID_FAILURE',\r\n\r\n    FIND_REQUEST: 'USER_FIND_REQUEST',\r\n    FIND_SUCCESS: 'USER_FIND_SUCCESS',\r\n    FIND_FAILURE: 'USER_FIND_FAILURE',\r\n    \r\n    DELETE_REQUEST: 'USER_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USER_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USER_DELETE_FAILURE',\r\n\r\n    GETROLES_REQUEST: 'USER_GETROLES_REQUEST',\r\n    GETROLES_SUCCESS: 'USER_GETROLES_SUCCESS',\r\n    GETROLES_FAILURE: 'USER_GETROLES_FAILURE',\r\n}","export const headerConstants = {\r\n\tSET_TITLE:\t\t'SET_HEADER_TITLE',\r\n\tSET_SUBTITLE:\t'SET_HEADER_SUBTITLE',\r\n\tSET_ALL:\t\t'SET_HEADER_ALL',\r\n\r\n\tCLEAR_TITLE:\t'CLEAR_HEADER_TITLE',\r\n\tCLEAR_SUBTITLE:\t'CLEAR_HEADER_SUBTITLE',\r\n\tCLEAR_ALL:\t\t'CLEAR_HEADER_ALL',\r\n\r\n\tSET_STATE:\t\t'SET_HEADER_STATE',\r\n\tSTATES:\t\t\t{\r\n\t\tNORMAL:\t\t'NORMAL',\r\n\t\tHIDDEN:\t\t'HIDDEN',\r\n\t\tOVERLAY:\t'OVERLAY'\r\n\t},\r\n}\r\n","const apiValues = [\r\n  'GAMES_TYPES', 'MISSIONS', 'ASSETS',\r\n  'CHARACTERS', 'CHARACTER_ASSETS', \r\n  'LOCATIONS', 'QUESTIONS', 'LANGUAGES', 'PLAY_SESSIONS'\r\n]\r\n\r\nexport default apiValues\r\n","import { apiConstantBuilder } from '../_helpers/apiConstantBuilder'\r\nimport apiValues from '../apiValues'\r\n\r\nlet apiConstants = {}\r\n\r\napiValues.map( value => apiConstants[value] = apiConstantBuilder(value) )\r\n\r\nexport { apiConstants }\r\n","export const apiConstantBuilder = apiDataType => {\r\n  return {\r\n    UPDATE_REQUEST: `${apiDataType}_UPDATE_REQUEST`,\r\n    UPDATE_SUCCESS: `${apiDataType}_UPDATE_SUCCESS`,\r\n    UPDATE_FAILURE: `${apiDataType}_UPDATE_FAILURE`,\r\n\r\n    CREATE_REQUEST: `${apiDataType}_CREATE_REQUEST`,\r\n    CREATE_SUCCESS: `${apiDataType}_CREATE_SUCCESS`,\r\n    CREATE_FAILURE: `${apiDataType}_CREATE_FAILURE`,\r\n\r\n    GETALL_REQUEST: `${apiDataType}_GETALL_REQUEST`,\r\n    GETALL_SUCCESS: `${apiDataType}_GETALL_SUCCESS`,\r\n    GETALL_FAILURE: `${apiDataType}_GETALL_FAILURE`,\r\n\r\n    GETBYID_REQUEST: `${apiDataType}_GETBYID_REQUEST`,\r\n    GETBYID_SUCCESS: `${apiDataType}_GETBYID_SUCCESS`,\r\n    GETBYID_FAILURE: `${apiDataType}_GETBYID_FAILURE`,\r\n\r\n    FIND_REQUEST: `${apiDataType}_REQUES `,\r\n    FIND_SUCCESS: `${apiDataType}_SUCCES `,\r\n    FIND_FAILURE: `${apiDataType}_FAILUR `,\r\n\r\n    DELETE_REQUEST: `${apiDataType}_DELETE_REQUEST`,\r\n    DELETE_SUCCESS: `${apiDataType}_DELETE_SUCCESS`,\r\n    DELETE_FAILURE: `${apiDataType}_DELETE_FAILURE`,\r\n  }\r\n}\r\n","export const gameConstants =  {\r\n  UPDATE_REQUEST: 'GAME_UPDATE_REQUEST',\r\n  UPDATE_SUCCESS: 'GAME_UPDATE_SUCCESS',\r\n  UPDATE_FAILURE: 'GAME_UPDATE_FAILURE',\r\n\r\n  CREATE_REQUEST: 'GAME_CREATE_REQUEST',\r\n  CREATE_SUCCESS: 'GAME_CREATE_SUCCESS',\r\n  CREATE_FAILURE: 'GAME_CREATE_FAILURE',\r\n\r\n  GETALL_REQUEST: 'GAME_GETALL_REQUEST',\r\n  GETALL_SUCCESS: 'GAME_GETALL_SUCCESS',\r\n  GETALL_FAILURE: 'GAME_GETALL_FAILURE',\r\n\r\n  GETBYID_REQUEST: 'GAME_GETBYID_REQUEST',\r\n  GETBYID_SUCCESS: 'GAME_GETBYID_SUCCESS',\r\n  GETBYID_FAILURE: 'GAME_GETBYID_FAILURE',\r\n\r\n  FIND_REQUEST: 'GAME_REQUEST',\r\n  FIND_SUCCESS: 'GAME_SUCCESS',\r\n  FIND_FAILURE: 'GAME_FAILURE',\r\n\r\n  DELETE_REQUEST: 'GAME_DELETE_REQUEST',\r\n  DELETE_SUCCESS: 'GAME_DELETE_SUCCESS',\r\n  DELETE_FAILURE: 'GAME_DELETE_FAILURE',\r\n}","export const musicConstants = {\r\n\tSET:\t'SET'\r\n}\r\n","import { alertConstants } from '../_constants'\r\n\r\nexport const alertActions = {\r\n    success,\r\n    error,\r\n    clear\r\n}\r\n\r\nfunction success(message) {\r\n    return {\r\n        type: alertConstants.SUCCESS, \r\n        message\r\n    }\r\n}\r\n\r\nfunction error(message) {\r\n    return {\r\n        type: alertConstants.ERROR,\r\n        message\r\n    }\r\n}\r\n\r\nfunction clear() {\r\n    return {\r\n        type: alertConstants.CLEAR\r\n    }\r\n}","import { createBrowserHistory } from 'history'\r\n\r\nexport const history = createBrowserHistory()","import { userConstants } from '../_constants'\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'))\r\nconst initialState = user ? { loggedIn: true, user } : {}\r\n\r\nexport function authentication (state = initialState, action){\r\n    switch (action.type) {\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {\r\n                loggingIn: true,\r\n                user: action.user\r\n            }\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            }\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {\r\n                logginFailure: true\r\n            }\r\n        case userConstants.LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {\r\n  loading: false,\r\n  items: []\r\n}\r\n\r\nexport const reducerBuilder = constants => (state = initialState, action) =>\r\n{\r\n  switch (action.type) {\r\n      case constants.CREATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            creating: true\r\n          }\r\n      case constants.CREATE_SUCCESS:\r\n          return {...state,\r\n            creating: false,\r\n            items: [...state.items, action.data]\r\n          }\r\n      case constants.CREATE_FAILURE:\r\n          return {\r\n            error: action.error\r\n          }\r\n\r\n      case constants.UPDATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            updating: true\r\n          }\r\n      case constants.UPDATE_SUCCESS:\r\n          let index = state.items.findIndex( item => item.id === action.data.id )\r\n          let copy = [...state.items.slice(0, index), action.data, ...state.items.slice(index + 1)]\r\n          return {...state, updating: false,\r\n            items: copy\r\n          }\r\n      case constants.UPDATE_FAILURE:\r\n          return {...state, updating: false}\r\n\r\n      case constants.GETALL_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case constants.GETALL_SUCCESS:\r\n          return {...state,\r\n              loading: false,\r\n              items: action.data\r\n          };\r\n      case constants.GETALL_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n      case constants.GETBYID_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case constants.GETBYID_SUCCESS:\r\n          return {...state,\r\n              items: [...state.items, action.data],\r\n              loading: false\r\n          };\r\n      case constants.GETBYID_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n        case constants.FIND_REQUEST:\r\n            return {...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case constants.FIND_SUCCESS:\r\n            return {...state,\r\n                items: action.data,\r\n                loading: false\r\n            };\r\n        case constants.FIND_FAILURE:\r\n            return {...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n      case constants.DELETE_REQUEST:\r\n          // add 'deleting:true' property to character being deleted\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item =>\r\n                  item.id === action.id\r\n                      ? { ...item, deleting: true }\r\n                      : item\r\n              )\r\n          };\r\n      case constants.DELETE_SUCCESS:\r\n          // remove deleted character from state\r\n          return {...state,\r\n              items: state.items.filter(item => item.id !== action.id)\r\n          }\r\n      case constants.DELETE_FAILURE:\r\n          // remove 'deleting:true' property and add 'deleteError:[error]' property to character\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item => {\r\n                  if (item.id === action.id) {\r\n                      // make copy of character without 'deleting:true' property\r\n                      const { deleting, ...copy } = item;\r\n                      // return copy of character with 'deleteError:[error]' property\r\n                      return { ...copy, deleteError: action.error };\r\n                  }\r\n                  return item;\r\n              })\r\n          };\r\n      default:\r\n          return state\r\n  }\r\n}\r\n","import { reducerBuilder } from '../_helpers/reducerBuilder'\r\nimport { apiConstants } from '../_constants'\r\n\r\nconst apiReducers = { }\r\nObject.keys(apiConstants).forEach(apiType => {\r\n  apiReducers[apiType.toLowerCase()] = reducerBuilder(apiConstants[apiType])\r\n})\r\n\r\n\r\nexport default apiReducers\r\n","import { gameConstants } from '../_constants'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  items: []\r\n}\r\n\r\nexport function game (state = initialState, action) {\r\n  switch (action.type) {\r\n      case gameConstants.CREATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            creating: true\r\n          }\r\n      case gameConstants.CREATE_SUCCESS:\r\n          return {...state,\r\n            creating: false,\r\n            items: {...state.items, ...action.data }\r\n          }\r\n      case gameConstants.CREATE_FAILURE:\r\n          return {\r\n            error: action.error\r\n          }\r\n\r\n      case gameConstants.UPDATE_REQUEST:\r\n          return {...state,\r\n            error: null,\r\n            updating: true\r\n          }\r\n      case gameConstants.UPDATE_SUCCESS:\r\n          let index = state.items.findIndex( item => item.id === action.data.id )\r\n          let copy = [...state.items.slice(0, index), action.data, ...state.items.slice(index + 1)]\r\n          return {...state, updating: false,\r\n            items: copy\r\n          }\r\n      case gameConstants.UPDATE_FAILURE:\r\n          return {...state, updating: false}\r\n\r\n      case gameConstants.GETALL_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case gameConstants.GETALL_SUCCESS:\r\n          return {...state,\r\n              loading: false,\r\n              items: {...state.items, ...action.data }\r\n          };\r\n      case gameConstants.GETALL_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n      case gameConstants.GETBYID_REQUEST:\r\n          return {...state,\r\n              error: null,\r\n              loading: true\r\n          };\r\n      case gameConstants.GETBYID_SUCCESS:\r\n          return {...state,\r\n              items: {...state.items, ...action.data },\r\n              loading: false\r\n          };\r\n      case gameConstants.GETBYID_FAILURE:\r\n          return {...state,\r\n              loading: false,\r\n              error: action.error\r\n          };\r\n\r\n        case gameConstants.FIND_REQUEST:\r\n            return {...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case gameConstants.FIND_SUCCESS:\r\n            return {...state,\r\n                items:{...state.items, ...action.data },\r\n                loading: false\r\n            };\r\n        case gameConstants.FIND_FAILURE:\r\n            return {...state,\r\n                loading: false,\r\n                error: action.error\r\n            };\r\n\r\n      case gameConstants.DELETE_REQUEST:\r\n          // add 'deleting:true' property to character being deleted\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item =>\r\n                  item.id === action.id\r\n                      ? { ...item, deleting: true }\r\n                      : item\r\n              )\r\n          };\r\n      case gameConstants.DELETE_SUCCESS:\r\n          // remove deleted character from state\r\n          return {...state,\r\n              items: state.items.filter(item => item.id !== action.id)\r\n          }\r\n      case gameConstants.DELETE_FAILURE:\r\n          // remove 'deleting:true' property and add 'deleteError:[error]' property to character\r\n          return {\r\n              ...state,\r\n              items: state.items.map(item => {\r\n                  if (item.id === action.id) {\r\n                      // make copy of character without 'deleting:true' property\r\n                      const { deleting, ...copy } = item;\r\n                      // return copy of character with 'deleteError:[error]' property\r\n                      return { ...copy, deleteError: action.error };\r\n                  }\r\n                  return item;\r\n              })\r\n          };\r\n      default:\r\n        return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { authentication } from './authentication.reducer'\r\nimport { registration } from './registration.reducer'\r\nimport { users } from './users.reducer'\r\nimport { alert } from './alert.reducer'\r\nimport { header } from './header.reducer'\r\nimport { music } from './music.reducer'\r\nimport apiReducers from './api.reducers'\r\nimport { game } from './apiGame.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    registration,\r\n    users,\r\n    alert,\r\n    header,\r\n    music,\r\n    game,\r\n    ...apiReducers,\r\n})\r\n\r\nexport default rootReducer\r\n","import { userConstants } from '../_constants'\r\n\r\nexport function registration (state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.REGISTER_REQUEST:\r\n            return {registering: true}\r\n        case userConstants.REGISTER_SUCCESS:\r\n            return {}\r\n        case userConstants.REGISTER_FAILURE:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import { userConstants } from '../_constants';\r\n\r\nexport function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.UPDATE_REQUEST:\r\n            return {updating: true}\r\n        case userConstants.UPDATE_SUCCESS:\r\n            return {}\r\n        case userConstants.UPDATE_FAILURE:\r\n            return {}\r\n        case userConstants.GETALL_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETALL_SUCCESS:\r\n            return {...state,\r\n                items: action.users\r\n            };\r\n        case userConstants.GETALL_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.GETBYID_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETBYID_SUCCESS:\r\n            return {...state,\r\n                items: action.user\r\n            };\r\n        case userConstants.GETBYID_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.FIND_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.FIND_SUCCESS:\r\n            return {...state,\r\n                items: action.user\r\n            };\r\n        case userConstants.FIND_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        case userConstants.DELETE_REQUEST:\r\n            // add 'deleting:true' property to user being deleted\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user =>\r\n                    user.id === action.id\r\n                        ? { ...user, deleting: true }\r\n                        : user\r\n                )\r\n            };\r\n        case userConstants.DELETE_SUCCESS:\r\n            // remove deleted user from state\r\n            return {...state,\r\n                items: state.items.filter(user => user.id !== action.id)\r\n            };\r\n        case userConstants.DELETE_FAILURE:\r\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user => {\r\n                    if (user.id === action.id) {\r\n                        // make copy of user without 'deleting:true' property\r\n                        const { deleting, ...userCopy } = user;\r\n                        // return copy of user with 'deleteError:[error]' property\r\n                        return { ...userCopy, deleteError: action.error };\r\n                    }\r\n\r\n                    return user;\r\n                })\r\n            };\r\n        case userConstants.GETROLES_REQUEST:\r\n            return {...state,\r\n                loading: true\r\n            };\r\n        case userConstants.GETROLES_SUCCESS:\r\n            return {...state,\r\n                roles: action.users.roles\r\n            };\r\n        case userConstants.GETROLES_FAILURE:\r\n            return {...state,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { alertConstants} from '../_constants'\r\n\r\nexport function alert (state = {}, action) {\r\n    switch(action.type) {\r\n        case alertConstants.SUCCESS:\r\n            return {\r\n                type: 'alert-succes',\r\n                message: action.message\r\n            }\r\n        case alertConstants.ERROR:\r\n            return {\r\n                type: 'alert-danger',\r\n                message: action.message\r\n            }\r\n        case alertConstants.CLEAR:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { headerConstants } from '../_constants'\r\n\r\nexport function header (state = {state: headerConstants.STATES.NORMAL, title: \"\", subtitle: \"\"}, action) {\r\n    switch(action.type) {\r\n        case headerConstants.SET_TITLE:\r\n\t\t\treturn {...state, title: action.newTitle};\r\n\r\n\t\tcase headerConstants.SET_SUBTITLE:\r\n\t\t\treturn {...state, subtitle: action.newSubtitle};\r\n\r\n\t\tcase headerConstants.SET_ALL:\r\n\t\t\treturn {...state, title: action.newTitle, subtitle: action.newSubtitle};\r\n\r\n\t\tcase headerConstants.CLEAR_TITLE:\r\n\t\t\treturn {...state, title: \"\"};\r\n\r\n\t\tcase headerConstants.CLEAR_SUBTITLE:\r\n\t\t\treturn {...state, subtitle: \"\"};\r\n\r\n\t\tcase headerConstants.CLEAR_ALL:\r\n\t\t\treturn {...state, title: \"\", subtitle: \"\"};\r\n\r\n\t\tcase headerConstants.SET_STATE:\r\n\t\t\treturn {...state, state: action.newState};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n    }\r\n}\r\n","import { musicConstants } from '../_constants/music.constants'\r\n\r\nexport function music ( state = {url: '', volume: 15}, action ) {\r\n\tswitch( action.type ) {\r\n\t\tcase musicConstants.SET:\r\n\t\t\treturn {...state, url: action.url};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from '../_reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n          thunkMiddleware,\r\n          loggerMiddleware\r\n      )\r\n    )\r\n)\r\n\r\nexport { store }\r\n","export function authHeader () {\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n    return user && user.jwt ? {\r\n        'Authorization': 'Bearer ' + user.jwt\r\n    } : {}\r\n}\r\n","function numberToMoney(n) {\r\n  var string = n.toString(),\r\n    units,\r\n    tens,\r\n    hundreds,\r\n    chunks,\r\n    chunk,\r\n    ints,\r\n    i,\r\n    word,\r\n    words;\r\n\r\n  /* Is number zero? */\r\n  if (parseInt(string) === 0) {\r\n    return \"zero\";\r\n  }\r\n\r\n  /* Array of units as words */\r\n  units = [\r\n    \"\",\r\n    \"um\",\r\n    \"dois\",\r\n    \"três\",\r\n    \"quatro\",\r\n    \"cinco\",\r\n    \"seis\",\r\n    \"sete\",\r\n    \"oito\",\r\n    \"nove\",\r\n    \"dez\",\r\n    \"onze\",\r\n    \"doze\",\r\n    \"treze\",\r\n    \"quatorze\",\r\n    \"quize\",\r\n    \"dezesseis\",\r\n    \"dezessete\",\r\n    \"dezoito\",\r\n    \"dezenove\",\r\n  ];\r\n\r\n  /* Array of tens as words */\r\n  tens = [\r\n    \"\",\r\n    \"\",\r\n    \"vinte\",\r\n    \"trinta\",\r\n    \"quarenta\",\r\n    \"cinquenta\",\r\n    \"sessenta\",\r\n    \"setenta\",\r\n    \"oitenta\",\r\n    \"noventa\",\r\n  ];\r\n\r\n  /* Array of scales as words */\r\n  hundreds = [\r\n    \"\",\r\n    \"cento\",\r\n    \"duzentos\",\r\n    \"trezentos\",\r\n    \"quatrocentos\",\r\n    \"quinhentos\",\r\n    \"seissentos\",\r\n    \"setecentos\",\r\n    \"oitocentos\",\r\n    \"novecentos\",\r\n  ];\r\n\r\n  chunks = string.split(\".\");\r\n\r\n  /* Stringify each integer in each chunk */\r\n  words = [];\r\n  for (i = 0; i < chunks.length; i++) {\r\n    chunk = parseInt(chunks[i]);\r\n\r\n    if (chunk) {\r\n      if (i === 1) words.push(\"e\");\r\n\r\n      if (chunk === 100) {\r\n        words.push(\"cem reais\");\r\n        continue;\r\n      }\r\n\r\n      /* Split chunk into array of individual integers */\r\n      ints = chunks[i].split(\"\").reverse().map(parseFloat);\r\n\r\n      /* If tens integer is 1, i.e. 10, then add 10 to units integer */\r\n      if (ints[1] === 1) {\r\n        ints[0] += 10;\r\n      }\r\n\r\n      if ((word = hundreds[ints[2]])) {\r\n        words.push(word + \" e\");\r\n      }\r\n\r\n      /* Add tens word if array item exists */\r\n      if ((word = tens[ints[1]])) {\r\n        words.push(word + \" e\");\r\n      }\r\n\r\n      /* Add unit word if array item exists */\r\n      if ((word = units[ints[0]])) {\r\n        words.push(word);\r\n      } else {\r\n        words[words.length - 1] = words[words.length - 1].replace(\" e\", \"\");\r\n      }\r\n\r\n      if (i === 0) {\r\n        if (chunk > 1) words.push(\"reais\");\r\n        else words.push(\"real\");\r\n      } else {\r\n        if (chunk > 1) words.push(\"centavos\");\r\n        else words.push(\"centavo\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return words.join(\" \");\r\n}\r\n\r\nfunction goRound(value, max) {\r\n  return value >= 0 ? value % max : max - (Math.abs(value) % max);\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex,\r\n    shuffledArray = [...array];\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = shuffledArray[currentIndex];\r\n    shuffledArray[currentIndex] = shuffledArray[randomIndex];\r\n    shuffledArray[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return shuffledArray;\r\n}\r\n\r\nfunction splitArrayIntoChunksOfLen(arr, len) {\r\n  var chunks = [],\r\n    i = 0,\r\n    n = arr.length;\r\n  while (i < n) {\r\n    chunks.push(arr.slice(i, (i += len)));\r\n  }\r\n  return chunks;\r\n}\r\n\r\nfunction zeroFill(s, size) {\r\n  while (s.length < size) {\r\n    s = \"0\" + s;\r\n  }\r\n  return s;\r\n}\r\n\r\nexport { numberToMoney, zeroFill, splitArrayIntoChunksOfLen, shuffle, goRound };\r\n","import axios from 'axios'\r\nimport { authHeader } from '../_helpers'\r\nimport apiValues from '../apiValues'\r\n\r\nconst baseURL = 'https://learning-tool-api.herokuapp.com'\r\nconst api  = axios.create({ baseURL })\r\n\r\nconst getAllBuilder = (routeName) => function getAll() {\r\n    // pegar rota\r\n    return api(\r\n      {\r\n        method: 'get',\r\n        url: `/${routeName.toLowerCase().replace(/_/g, '-')}`,\r\n        headers: authHeader()\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nconst getByIdBuilder = (routeName) => function getById(id){\r\n    return api(\r\n        {\r\n          method: 'get',\r\n          url: `/${routeName.toLowerCase().replace(/_/g, '-')}/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nconst findBuilder = (routeName) => function find(data) {\r\n  return api(\r\n    {\r\n      method: 'get',\r\n      url: `/${routeName.toLowerCase().replace(/_/g, '-')}`,\r\n      headers: authHeader(),\r\n      query: data\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\nconst createBuilder = (routeName) => function create(data) {\r\n    return api(\r\n      {\r\n        method: 'post',\r\n        url: `/${routeName.toLowerCase().replace(/_/g, '-')}`,\r\n        headers: authHeader(),\r\n        data: data\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nconst updateBuilder = (routeName) => function update(data){\r\n    return api(\r\n        {\r\n          method: 'put',\r\n          url: `/${routeName.toLowerCase().replace(/_/g, '-')}/${data.id}`,\r\n          headers:  {\r\n            ...authHeader(),\r\n          'Content-Type': 'application/json'\r\n          },\r\n          data: data\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nconst deleteBuilder = (routeName) => function _delete(id){\r\n    return api(\r\n        {\r\n          method: 'delete',\r\n          url: `/${routeName.toLowerCase().replace(/_/g, '-')}/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  if(response.status !== 200){\r\n      if(response.status === 401){\r\n          window.location.reload()\r\n      }\r\n      return Promise.reject(response.statusText)\r\n  }\r\n\r\n  return response.data\r\n}\r\n\r\nlet apiServices = {}\r\n\r\napiValues.map( apiDataType =>\r\n  apiServices[`${apiDataType}`] = {\r\n    getAll:  getAllBuilder(apiDataType),\r\n    getById: getByIdBuilder(apiDataType),\r\n    find:  findBuilder(apiDataType),\r\n    create:  createBuilder(apiDataType),\r\n    update:  updateBuilder(apiDataType),\r\n    delete:  deleteBuilder(apiDataType)\r\n})\r\n\r\nexport { apiServices, baseURL }\r\nexport default api\r\n","import { authHeader } from '../_helpers'\r\nimport api from './api.services'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    getById,\r\n    find,\r\n    update,\r\n    delete: _delete,\r\n    getRoles\r\n}\r\n\r\nfunction login(email, password) {\r\n    return api(\r\n        {\r\n            method: 'post',\r\n            url: '/auth/local',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: {\r\n                identifier: email,\r\n                password: password\r\n            }\r\n        })\r\n        .then(response => {\r\n          if(response.data.jwt){\r\n            localStorage.setItem('user',JSON.stringify(response.data))\r\n          }\r\n            \r\n          return response.data\r\n        })\r\n}\r\n\r\nfunction logout(){\r\n    localStorage.removeItem('user')\r\n}\r\n\r\nfunction getAll() {\r\n    // pegar rota\r\n    return api(\r\n      {\r\n        method: 'get',\r\n        url: '/users',\r\n        headers: authHeader()\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nfunction getById(id){\r\n    return api(\r\n        {\r\n          method: 'get',\r\n          url: `/users/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction find(data) {\r\n  return api(\r\n    {\r\n      method: 'get',\r\n      url: '/users',\r\n      headers: authHeader(),\r\n      query: data\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction register(user) {\r\n    return api(\r\n        {\r\n          method: 'post',\r\n          url: '/auth/local/register',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n          data: user,\r\n        })\r\n        .then(response => {\r\n          if(response.data.jwt){\r\n            localStorage.setItem('user',JSON.stringify(response.data))\r\n          }\r\n            \r\n          return response.data\r\n        })\r\n}\r\n\r\nfunction update(user){\r\n    // checar rotausers\r\n    return api(\r\n        {\r\n          method: 'put',\r\n          url: `/users/${user.id}`,\r\n          headers:  {\r\n            ...authHeader(),\r\n          'Content-Type': 'application/json'\r\n          },\r\n          data: user\r\n        })\r\n        .then(response => {\r\n          console.log(response)\r\n        })\r\n}\r\n\r\nfunction _delete(id){\r\n    return api(\r\n        {\r\n          method: 'delete',\r\n          url: `/users/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getRoles(){\r\n  return api(\r\n    {\r\n      method: 'get',\r\n      url: '/users-permissions/roles',\r\n      headers: authHeader()\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response) {\r\n\r\n  if(response.status !== 200){\r\n      if(response.status === 401){\r\n          logout()\r\n          window.location.reload()\r\n      }\r\n\r\n      return Promise.reject(response.statusText)\r\n  }\r\n\r\n  return response.data\r\n}\r\n\r\n","import axios from 'axios'\r\nimport { authHeader } from '../_helpers'\r\n\r\nconst baseURL = 'https://learning-tool-api.herokuapp.com'\r\nconst api  = axios.create({ baseURL })\r\n\r\nconst getAll = (routeName) => {\r\n    // pegar rota\r\n    return api(\r\n      {\r\n        method: 'get',\r\n        url: `/game/${routeName}`,\r\n        headers: authHeader()\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nconst getById = (routeName,id) => {\r\n    return api(\r\n        {\r\n          method: 'get',\r\n          url: `/game/${routeName}/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nconst find = (routeName,data) => {\r\n  return api(\r\n    {\r\n      method: 'get',\r\n      url: `/game/${routeName}`,\r\n      headers: authHeader(),\r\n      params: data\r\n    })\r\n    .then(handleResponse)\r\n}\r\n\r\nconst create = (routeName,data) => {\r\n    return api(\r\n      {\r\n        method: 'post',\r\n        url: `/game/${routeName}`,\r\n        headers: authHeader(),\r\n        params: data\r\n      })\r\n      .then(handleResponse)\r\n}\r\n\r\nconst update = (routeName,data) => {\r\n    return api(\r\n        {\r\n          method: 'put',\r\n          url: `/game/${routeName}/${data.id}`,\r\n          headers:  {\r\n            ...authHeader(),\r\n          'Content-Type': 'application/json'\r\n          },\r\n          params: data\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nconst _delete = (routeName,id) => {\r\n    return api(\r\n        {\r\n          method: 'delete',\r\n          url: `/game/${routeName}/${id}`,\r\n          headers: authHeader()\r\n        })\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  if(response.status !== 200){\r\n      if(response.status === 401){\r\n          window.location.reload()\r\n      }\r\n      return Promise.reject(response.statusText)\r\n  }\r\n\r\n  return response.data\r\n}\r\n\r\nconst apiGameServices = {\r\n  getAll:   getAll,\r\n  getById:  getById,\r\n  find:     find,\r\n  create:   create,\r\n  update:   update,\r\n  delete:   _delete\r\n}\r\n\r\nexport { apiGameServices, baseURL }\r\nexport default api\r\n","import { userConstants } from '../_constants'\r\nimport { userService } from '../_services'\r\nimport { alertActions } from './'\r\n\r\nexport const userActions = {\r\n    getAll,\r\n    getById,\r\n    delete: _delete,\r\n    getRoles\r\n}\r\n\r\nexport const login = (email, password) => dispatch => {\r\n    dispatch(request({email}))\r\n\r\n    return userService.login(email, password)\r\n        .then(\r\n            user => {\r\n                dispatch(success(user))\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject(error.response.data.data[0].messages[0].message)\r\n            }\r\n        )\r\n\r\n    function request(user) { return {type: userConstants.LOGIN_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.LOGIN_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.LOGIN_FAILURE, error} }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    userService.logout()\r\n    dispatch({type: userConstants.LOGOUT})                        \r\n}\r\n\r\nexport const register = (user) => dispatch => {\r\n    dispatch(request(user))\r\n\r\n    return userService.register(user)\r\n        .then(\r\n            user => {\r\n                dispatch(success())\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject(error.response.data.data[0].messages[0].message)\r\n            }\r\n        )\r\n    function request(user) { return {type: userConstants.REGISTER_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.REGISTER_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.REGISTER_FAILURE, error} }\r\n}\r\n\r\nexport const update = (user) => dispatch => {\r\n    dispatch(request(user))\r\n\r\n    return userService.update(user)\r\n        .then(\r\n            user => {\r\n                dispatch(success())\r\n                return Promise.resolve()\r\n            },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n                dispatch(alertActions.error(error.toString()))\r\n                return Promise.reject()\r\n            }\r\n        )\r\n\r\n    function request(user) { return {type: userConstants.UPDATE_REQUEST, user} }\r\n    function success(user) { return {type: userConstants.UPDATE_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.UPDATE_FAILURE, error} }\r\n}\r\n\r\nfunction getAll(){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        const r = userService.getAll()\r\n            r.then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETALL_REQUEST} }\r\n    function success(users) { return {type: userConstants.GETALL_SUCCESS, users} }\r\n    function failure(error) { return {type: userConstants.GETALL_FAILURE, error} }\r\n}\r\n\r\nfunction getById(id){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        userService.getById(id)\r\n            .then(\r\n                user => dispatch(success(user)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETBYID_REQUEST} }\r\n    function success(user) { return {type: userConstants.GETBYID_SUCCESS, user} }\r\n    function failure(error) { return {type: userConstants.GETBYID_FAILURE, error} }\r\n}\r\n\r\nfunction _delete(id){\r\n    return dispatch => {\r\n        dispatch(request(id))\r\n\r\n        userService.delete(id)\r\n            .then(\r\n                user => dispatch(success(id)),\r\n                error => dispatch(failure(id, error.toString()))\r\n            )\r\n    }\r\n\r\n    function request(id) { return {type: userConstants.DELETE_REQUEST, id} }\r\n    function success(id) { return {type: userConstants.DELETE_SUCCESS, id} }\r\n    function failure(id, error) { return {type: userConstants.DELETE_FAILURE, id, error} }\r\n}\r\n\r\nfunction getRoles(){\r\n    return dispatch => {\r\n        dispatch(request())\r\n\r\n        const r = userService.getRoles()\r\n            r.then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            )\r\n    }\r\n\r\n    function request() { return {type: userConstants.GETROLES_REQUEST} }\r\n    function success(users) { return {type: userConstants.GETROLES_SUCCESS, users} }\r\n    function failure(error) { return {type: userConstants.GETROLES_FAILURE, error} }\r\n}","import { headerConstants } from '../_constants'\r\n\r\nconst setTitle = (title) => {return {type: headerConstants.SET_TITLE, newTitle: title}};\r\nconst setSubtitle = (subtitle) => {return {type: headerConstants.SET_SUBTITLE, newSubtitle: subtitle}};\r\nconst setAll = (title, subtitle) => {return {type: headerConstants.SET_ALL, newTitle: title, newSubtitle: subtitle}};\r\n\r\nconst clearTitle = () => {return {type: headerConstants.CLEAR_TITLE}};\r\nconst clearSubtitle = () => {return {type: headerConstants.CLEAR_SUBTITLE}};\r\nconst clearAll = () => {return {type: headerConstants.CLEAR_ALL}};\r\n\r\nconst setState = (state) => {return {type: headerConstants.SET_STATE, newState: state}};\r\n\r\nexport const headerActions = {\r\n\tsetTitle,\r\n\tsetSubtitle,\r\n\tsetAll,\r\n\tclearTitle,\r\n\tclearSubtitle,\r\n\tclearAll,\r\n\tsetState\r\n}","import { gameConstants } from '../_constants'\r\nimport { apiGameServices } from '../_services'\r\n\r\nfunction requester(service, request, success, failure, route, payload){\r\n  return dispatch => {\r\n      dispatch(request(payload))\r\n\r\n      return service(route, payload)\r\n        .then(\r\n            data => {\r\n              dispatch(success(data))\r\n              return Promise.resolve()\r\n              },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n\r\n                try {\r\n                  return Promise.reject(error.response.data.data[0].messages[0].message)\r\n                } catch{\r\n                  console.log(error)\r\n                }\r\n            }\r\n          )\r\n  }\r\n}\r\n\r\n//Could use some code refactory\r\nconst getAllConstructor = (service) => {\r\n  return function(route, ){\r\n    return requester(service.getAll, request, success, failure, route)\r\n\r\n    function request() { return { type: gameConstants.GETALL_REQUEST, info: route }}\r\n    function success(data) { return {type: gameConstants.GETALL_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.GETALL_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst getByIdConstructor = (service) => {\r\n  return function(route, id){\r\n    return requester(service.getById, request, success, failure, route, id)\r\n\r\n    function request() { return {type: gameConstants.GETBYID_REQUEST, info: route} }\r\n    function success(data) { return {type: gameConstants.GETBYID_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.GETBYID_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst findConstructor = (service) => {\r\n  return function(route, findData){\r\n    return requester(service.find, request, success, failure, route, findData)\r\n\r\n    function request() { return {type: gameConstants.FIND_REQUEST, info: route} }\r\n    function success(data) { return {type: gameConstants.FIND_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.FIND_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst createConstructor = (service) => {\r\n  return function(route, createData){\r\n    return requester(service.create, request, success, failure, route, createData)\r\n\r\n    function request(data) { return {type: gameConstants.CREATE_REQUEST, info: route, game: data}}\r\n    function success(data) { return {type: gameConstants.CREATE_SUCCESS, info: route, data} }\r\n    function failure(error) { return {type: gameConstants.CREATE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst updateConstructor = (service) => {\r\n  return function(route, updateData){\r\n      return requester(service.update, request, success, failure, route, updateData)\r\n\r\n      function request(data) { return {type: gameConstants.UPDATE_REQUEST, info: route, game: data} }\r\n      function success(data) { return {type: gameConstants.UPDATE_SUCCESS, info: route, data} }\r\n      function failure(error) { return {type: gameConstants.UPDATE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nconst deleteConstructor = (service) => {\r\n  return function(route, deleteData){\r\n    return requester(service.delete, request, success, failure, route, deleteData)\r\n\r\n    function request(data) { return {type: gameConstants.DELETE_REQUEST, info: route, game: data} }\r\n    function success(data) { return {type: gameConstants.DELETE_SUCCESS, info: route, id: data.id} }\r\n    function failure(error) { return {type: gameConstants.DELETE_FAILURE, info: route, error} }\r\n  }\r\n}\r\n\r\nlet gameActions = {\r\n  getAll:  getAllConstructor(apiGameServices),\r\n  getById: getByIdConstructor(apiGameServices),\r\n  find: findConstructor(apiGameServices),\r\n  create:  createConstructor(apiGameServices),\r\n  update:  updateConstructor(apiGameServices),\r\n  delete:  deleteConstructor(apiGameServices)\r\n}\r\n\r\n\r\nexport { gameActions }\r\n","import { apiConstants } from '../_constants'\r\nimport { apiServices } from '../_services'\r\nimport { gameActions } from './apiGame.actions'\r\n\r\nfunction requester(service, request, success, failure, payload){\r\n  return dispatch => {\r\n      dispatch(request(payload))\r\n\r\n      return service(payload)\r\n        .then(\r\n            data => {\r\n              dispatch(success(data))\r\n              return Promise.resolve()\r\n              },\r\n            error => {\r\n                dispatch(failure(error.toString()))\r\n\r\n                try {\r\n                  return Promise.reject(error.response.data.data[0].messages[0].message)\r\n                } catch{\r\n                  console.log(error)\r\n                }\r\n            }\r\n          )\r\n  }\r\n}\r\n\r\n//Could use some code refactory\r\nconst getAllConstructor = (service, apiDataType) => {\r\n  return function(){\r\n    return requester(service.getAll, request, success, failure)\r\n\r\n    function request() { return { type: apiConstants[apiDataType].GETALL_REQUEST }}\r\n    function success(data) { return {type: apiConstants[apiDataType].GETALL_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].GETALL_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst getByIdConstructor = (service, apiDataType) => {\r\n  return function(id){\r\n    return requester(service.getById, request, success, failure, id)\r\n\r\n    function request() { return {type: apiConstants[apiDataType].GETBYID_REQUEST} }\r\n    function success(data) { return {type: apiConstants[apiDataType].GETBYID_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].GETBYID_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst findConstructor = (service, apiDataType) => {\r\n  return function(findData){\r\n    return requester(service.find, request, success, failure, findData)\r\n\r\n    function request() { return {type: apiConstants[apiDataType].FIND_REQUEST} }\r\n    function success(data) { return {type: apiConstants[apiDataType].FIND_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].FIND_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst createConstructor = (service, apiDataType) => {\r\n  return function(createData){\r\n    return requester(service.create, request, success, failure, createData)\r\n\r\n    function request(data) { return {type: apiConstants[apiDataType].CREATE_REQUEST, [apiDataType]: data}}\r\n    function success(data) { return {type: apiConstants[apiDataType].CREATE_SUCCESS, data} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].CREATE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst updateConstructor = (service, apiDataType) => {\r\n  return function(updateData){\r\n      return requester(service.update, request, success, failure, updateData)\r\n\r\n      function request(data) { return {type: apiConstants[apiDataType].UPDATE_REQUEST, [apiDataType]: data} }\r\n      function success(data) { return {type: apiConstants[apiDataType].UPDATE_SUCCESS, data} }\r\n      function failure(error) { return {type: apiConstants[apiDataType].UPDATE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nconst deleteConstructor = (service, apiDataType) => {\r\n  return function(deleteData){\r\n    return requester(service.delete, request, success, failure, deleteData)\r\n\r\n    function request(data) { return {type: apiConstants[apiDataType].DELETE_REQUEST, [apiDataType]: data} }\r\n    function success(data) { return {type: apiConstants[apiDataType].DELETE_SUCCESS, id: data.id} }\r\n    function failure(error) { return {type: apiConstants[apiDataType].DELETE_FAILURE, error} }\r\n  }\r\n}\r\n\r\nlet apiActions = {}\r\nObject.keys(apiConstants).forEach( (apiDataType) => {\r\n  apiActions[`${apiDataType.toLowerCase()}Actions`] = {\r\n    getAll:  getAllConstructor(apiServices[apiDataType], apiDataType),\r\n    getById: getByIdConstructor(apiServices[apiDataType], apiDataType),\r\n    find: findConstructor(apiServices[apiDataType],\r\n    apiDataType),\r\n    create:  createConstructor(apiServices[apiDataType], apiDataType),\r\n    update:  updateConstructor(apiServices[apiDataType], apiDataType),\r\n    delete:  deleteConstructor(apiServices[apiDataType], apiDataType)\r\n  }\r\n})\r\n\r\nexport { apiActions, gameActions }\r\n","import { musicConstants } from '../_constants'\r\n\r\nconst set = (music) => { return { type: musicConstants.SET, url: music } }\r\n\r\nexport const musicActions = \r\n{\r\n  set\r\n}\r\n","import React from \"react\";\r\nimport { avatar, home, notifications, settings } from \"../../img\";\r\nimport { logout } from \"../../_actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst UserHeader = ({ pageInfo }) => {\r\n  let headerInfo = useSelector((state) => state.header);\r\n  const [state, setState] = React.useState({ view: \"default\" });\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const clickProfile = () => {\r\n    setState({ ...state, view: \"profile\" });\r\n    alert.show(\"Vc achou onde faz para abrir o seu perfil! \\n\\n Ending 3/15\");\r\n  };\r\n\r\n  const clickHome = () => {\r\n    setState({ ...state, view: \"home\" });\r\n    alert.show(\"Vc achou onde faz para voltar ao início! \\n\\n Ending 1/15\");\r\n  };\r\n\r\n  const clickNotif = () => {\r\n    setState({ ...state, view: \"notif\" });\r\n    alert.show(\r\n      \"Vc achou onde faz para ver suas notificações! \\n\\n Ending 7/15\"\r\n    );\r\n  };\r\n\r\n  const clickSettings = () => {\r\n    setState({ ...state, view: \"settings\" });\r\n    alert.show(\r\n      \"Vc achou onde faz para abrir suas configurações! \\n\\n Ending 8/15\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header id=\"app-header\" className={headerInfo.state.toLowerCase()}>\r\n      <div className=\"group-btns\" id=\"left-btns\">\r\n        <div className=\"header-btn\" id=\"home-btn\" onClick={clickHome}>\r\n          <img src={home} alt=\"Home\"></img>\r\n        </div>\r\n        <div className=\"header-btn\" id=\"notif-btn\" onClick={clickNotif}>\r\n          <img src={notifications} alt=\"Notifications\"></img>\r\n        </div>\r\n        <div className=\"header-btn\" id=\"settings-btn\" onClick={clickSettings}>\r\n          <img src={settings} alt=\"Settings\"></img>\r\n        </div>\r\n      </div>\r\n      <div id=\"pageTitle\">\r\n        <div id=\"mainTitle\">{headerInfo.title}</div>\r\n        <div id=\"subTitle\">{headerInfo.subtitle}</div>\r\n      </div>\r\n      <div className=\"group-btns\" id=\"right-btns\">\r\n        <div id=\"profilePic\" onClick={clickProfile}>\r\n          <img src={avatar} alt=\"Profile_Picture\" />\r\n        </div>\r\n        <div\r\n          className=\"header-btn\"\r\n          id=\"logout-btn\"\r\n          onClick={() => {\r\n            dispatch(logout());\r\n          }}\r\n        >\r\n          Logout\r\n        </div>\r\n      </div>\r\n      {/* style provisório para teste*/}\r\n      {state.view === \"settings\" && (\r\n        <div\r\n          className=\"ConfigPopUp\"\r\n          style={{\r\n            position: \"absolute\",\r\n            backgroundColor: \"#ddddee\",\r\n            top: 100,\r\n            margin: \"0 auto\",\r\n            width: \"50%\",\r\n            height: 500,\r\n          }}\r\n        >\r\n          Configurações\r\n          <Button>Config 1</Button>\r\n          <Button>Config 2</Button>\r\n          <Button>Config 3</Button>\r\n          <Button onClick={() => setState({ ...state, view: \"default\" })}>\r\n            X\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n  /**/\r\n};\r\n\r\nexport default UserHeader;\r\n","import React from 'react'\r\n\r\nconst DefaultHeader = ({pageInfo}) => {\r\n\r\n\treturn (\r\n\t\t<header id=\"app-header\" className=\"normal\">\r\n\t\t\t<div className=\"group-btns\">\r\n\t\t\t\t<div className=\"header-btn\">Home</div>\r\n\t\t\t\t<div className=\"header-btn\">About</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default DefaultHeader","import './index.scss'\r\nimport React from 'react'\r\nimport UserHeader from '../UserHeader'\r\nimport DefaultHeader from '../DefaultHeader'\r\n\r\nconst AppHeader = ({props}) => {\r\n\treturn props.isLogged ? <UserHeader pageInfo={props} /> : <DefaultHeader />\r\n}\r\n\r\nexport default AppHeader","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './index.scss'\r\n\r\nconst Home = () => {\r\n  const isLogged = useSelector(state => state.authentication.loggedIn)\r\n\r\n  if( isLogged ) return (<Redirect to={'/userspace'}/>)\r\n  else return(\r\n    <div id=\"message\">\r\n      Aqui é a home. Nada muito interessante aqui. Se quiser fazer login:\r\n      <Link to='/login' className=\"btn-normal\">Login</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst Init = ({\r\n  icon,\r\n  name,\r\n  description,\r\n  nameTranslate = \"Name\",\r\n  descriptionTranslate = \"Description\",\r\n  onStart,\r\n  onBack,\r\n  ready,\r\n}) => {\r\n  return (\r\n    <div className=\"main-init-wrapper\">\r\n      <div className=\"inner-content\">\r\n        <div name=\"infos\">\r\n          {icon ? (\r\n            <img className=\"classImage\" src={icon} alt=\"\" />\r\n          ) : (\r\n            <div style={{ height: \"25vh\" }}></div>\r\n          )}\r\n\r\n          <h1 className=\"margin-half-top type-l type-display type-center\">\r\n            {name}\r\n          </h1>\r\n          <h1 className=\"type-m type-display type-center subtitle\">\r\n            {nameTranslate}\r\n          </h1>\r\n\r\n          <h2 className=\"margin-half-top type-s type-center description\">\r\n            {description}\r\n          </h2>\r\n          <h2 className=\"type-s type-center subdescription\">\r\n            {descriptionTranslate}\r\n          </h2>\r\n        </div>\r\n\r\n        <div id=\"btns\">\r\n          {onBack && (\r\n            <button className=\"btn btn-center\" id=\"btn-back\" onClick={onBack}>\r\n              Voltar\r\n            </button>\r\n          )}\r\n          {ready && onStart && (\r\n            <button className=\"btn btn-center\" id=\"btn-start\" onClick={onStart}>\r\n              Iniciar\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Init;\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst Result = ({gameEndState}) => {\r\n    return (\r\n        <div>\r\n            {/* Não era pra a gente precisar checar se a string é null, pq era pra isso\r\n            só aparecer quando já tivesse um valor na string... WTF */}\r\n            { gameEndState ? gameEndState.split('\\n').map( str => <p>{str}</p>) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst RoomSelect = ({value, buttonList, onChange, showInBtnFormat = true}) => {\r\n\tconst [state, setState] = React.useState(0)\r\n\r\n\tconst buttonClick = (num) => () => {\r\n\t\tif(onChange) {\r\n\t\t\tonChange(num)\r\n\t\t\tsetState(num)\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif(value) setState(value)\r\n\t}, [value])\r\n\r\n\tif( showInBtnFormat ) {\r\n\t\treturn (\r\n\t\t\t<div id=\"RoomSelect\">\r\n\t\t\t\t<div className=\"section-title\">\r\n\t\t\t\t\t<span lang=\"pt-br\">Salas</span>\r\n\t\t\t\t\t<span lang=\"en\">Rooms</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"button-rows\">\r\n\t\t\t\t\t{buttonList.map( (name, index) =>\r\n\t\t\t\t\t\t<button className={\"RoomBtn\" + (onChange ? \"\" : \" disabled\")} key={index}\r\n\t\t\t\t\t\tid={ state === index ? \"selected\" : \"\" }\r\n\t\t\t\t\t\tonClick={buttonClick(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{index+1}\r\n\t\t\t\t\t\t</button> )}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div id=\"RoomSelect\">\r\n\t\t\t\t<div className=\"section-title\">\r\n\t\t\t\t\t<span lang=\"pt-br\">Sala {state + 1}/{buttonList.length}</span>\r\n\t\t\t\t\t<span lang=\"en\">Room {state + 1}/{buttonList.length}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default RoomSelect\r\n","import React from 'react'\r\nimport './sala.scss'\r\n\r\nconst Sala = ({children, roomData, setCurrentChar}) => {\r\n\r\n  const img = roomData && roomData.background.url ? roomData.background.url : \"\"\r\n  return (\r\n      // <div id=\"sala\" style={{backgroundImage: `url(\"${img}\")`}}>\r\n      <div id=\"sala\">\r\n        <img src={img} alt=\"\" />\r\n        <div id=\"sala-content\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Sala\r\n","import React from 'react'\r\nimport './character.scss'\r\n\r\nconst Character = ({zDepth, character, dragPosition, position, onClick, showNameOnHover}) => {\r\n    return (\r\n    <div className=\"CharDiv\" onClick={onClick} style={{\"--z\": zDepth}}>\r\n        <img src={character.characterAssets.length > 0 ? character.characterAssets.find(asset => asset.bodyPart === 'fullbody'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t).image.url : \"\"} alt={`${character.name}`}/>\r\n        {showNameOnHover && <div>{character.name}</div>}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Character\r\n","const initialValue = () => ({\r\n  //METADATA\r\n  back: false,\r\n  //GAME STATE\r\n  scene: \"INIT\",\r\n  endGame: false,\r\n  currentLocationIndex: 0,\r\n  locations: [],\r\n  jobs: [],\r\n  countries: [],\r\n  names: [],\r\n  contactsTemplate: [],\r\n  contactsAtSession: [],\r\n  dialogs: {},\r\n  questionsAsked: 0,\r\n  result: 0,\r\n  totalFields: 0,\r\n  mainError: [],\r\n  feedback: {},\r\n  //DIALOG\r\n  dialogHistory: [],\r\n  answers: [],\r\n  preSpeech: [],\r\n  currentChar: null,\r\n  characterFeeling: \"init\",\r\n  showContacts: false,\r\n  maxQuestions: 4,\r\n  // onMinimize: null,\r\n  shouldMinimize: false,\r\n  shouldCloseDialog: false,\r\n  wrongContacts: 0,\r\n  tracking: true\r\n});\r\n\r\nexport default initialValue;\r\n","const initialValue = [\r\n    {\r\n        question: 'Oi!',\r\n        answers: 'Oi! Tudo bem?',\r\n    },\r\n    {\r\n        question: 'Olá!',\r\n        answers: 'Oi! Como vai?',\r\n    },\r\n    {\r\n        question: 'E aí?',\r\n        answers: 'Opa, beleza?',\r\n    },\r\n    {\r\n        question: 'Até mais!',\r\n        answers: 'Já vai...?',\r\n    },\r\n    {\r\n        question: 'Tchau!',\r\n        answers: 'Tudo certo contigo...?',\r\n    },\r\n]\r\n\r\n\r\nexport default initialValue","const stub = {\r\n  name: 'Stub mission',\r\n  description: 'Local stub mission for tests',\r\n  locations: [\r\n    {name: 'sala', backgroundAssets: []},\r\n    {name: 'cozinha', backgroundAssets: []},\r\n    {name: 'biblioteca', backgroundAssets: []},\r\n    {name: 'escritório', backgroundAssets: []}],\r\n  characters: [\r\n    {\r\n      name: 'Joao', characterAssets: [],\r\n      answers: [\r\n        {\r\n          answer: 'oi',\r\n          question: {question: \"oi?\"}\r\n        },\r\n        {\r\n          answer: 'turusim',\r\n          question: {question: \"turubem?\"}\r\n        },\r\n\r\n        {\r\n          answer: 'kiésim',\r\n          question: {question: \"cumékié?\"}\r\n        }\r\n      ]\r\n    },\r\n    {name: 'Pedro', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Marta', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Suzane', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Maria', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n    {name: 'Pablo', characterAssets: [], answers: [{question: {question: \"oi?\"}}]},\r\n  ]\r\n}\r\n\r\nexport default stub\r\n","import React from 'react'\r\n\r\nconst Dropdown = ({style, defaultText, onChange, label, optionList, value}) => {\r\n\r\n  return(\r\n    <div className={label}>\r\n      <p>{label}</p>\r\n      <select style={style} value={value} onChange={onChange}>\r\n          <option value='' key={-1} disabled>{defaultText ?? label.toLowerCase()}</option>\r\n        {optionList?.map((option, index) =>\r\n          <option value={option} key={index}>{option}</option>\r\n        )}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n","import React from 'react'\r\n\r\nimport './index.scss'\r\n\r\n/**\r\n * Cria um novo contexto de renderização de página inteira com fundo branco semitransparente\r\n * @param  {Object} props\r\n * @param  {Object | Object[]} props.children\t\t\t\t\t\t\tElementos a serem renderizados\r\n * @param  {boolean} [props.showCloseBtn]\t\t\t\t\t\t\t\tDevo mostrar o botão de fechar?\r\n * @param  {boolean} [props.shouldExit]\t\t\t\t\t\t\t\t\tDevo fechar? Se verdadeiro, inicia animação de fechamento\r\n * @param  {() => void} [props.onClickClose]\t\t\t\t\t\t\tCallback para quando clicam no botão de fechar\r\n * @param  {(event) => void} [props.onReadyToExit]\t\t\t\t\t\tCallback para quando terminei de fechar\r\n * @param  {{r:number, g:number, b:number, a:number}} [props.bgRGBA]\tCor (formato da função rgba()) do fundo desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n * @param  {{r:number, g:number, b:number}} [props.closeRGB]\t\t\tCor (formato da função rgba()) do botão de fechar desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n * @param  {{r:number, g:number, b:number}} [props.closeHoverRGB]\t\tCor (formato da função rgba()) do botão de fechar quanto em hover desse novo contexto. default é r:255, g:255, b:255, a:0.73\r\n */\r\nconst FullscreenOverlay = ({\r\n\t\tchildren,\r\n\t\tshowCloseBtn = true,\r\n\t\tshouldExit = false,\r\n\t\tonClickClose,\r\n\t\tonReadyToExit,\r\n\t\tbgRGBA = {},\r\n\t\tcloseRGB = {},\r\n\t\tcloseHoverRGB = {},\r\n\t\tstyle = {}\r\n\t}) => {\r\n\r\n\tif( showCloseBtn && onClickClose == null ) throw Error(\"Invalid callback for click on close button.\")\r\n\tif( shouldExit && onReadyToExit == null ) throw Error(\"Invalid callback for when finishing the exit animation.\")\r\n\r\n\tconst _readyToExit = (event) => {\r\n\t\tif ( event.target === event.currentTarget ) onReadyToExit(event)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"fullscreen-overlay\"\r\n\t\t\t className={shouldExit ? \"ExitAnim\" : null}\r\n\t\t\t onAnimationEnd={shouldExit ? _readyToExit : null}\r\n\t\t\t style={{...style, '--bgR': bgRGBA.r ?? 255, '--bgG': bgRGBA.g ?? 255, '--bgB': bgRGBA.b ?? 255, '--bgA': bgRGBA.a ?? 0.73}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t{showCloseBtn &&\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"fullscreen-overlay-close-btn\"\r\n\t\t\t\t\tonClick={onClickClose}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t'--closeR': closeRGB.r ?? 89,\r\n\t\t\t\t\t\t'--closeG': closeRGB.g ?? 49,\r\n\t\t\t\t\t\t'--closeB': closeRGB.b ?? 109,\r\n\t\t\t\t\t\t'--closeHoverR': closeHoverRGB.r ?? 249,\r\n\t\t\t\t\t\t'--closeHoverG': closeHoverRGB.g ?? 175,\r\n\t\t\t\t\t\t'--closeHoverB': closeHoverRGB.b ?? 161\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span>×</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FullscreenOverlay\r\n","import React from \"react\";\r\nimport Dropdown from \"../Dropdown\";\r\n\r\nimport { smallPhone, bigPhone, dedao, palma } from \"../../img\";\r\n\r\nimport \"./index.scss\";\r\nimport FullscreenOverlay from \"../FullscreenOverlay\";\r\n\r\n// const Phone = ({children, modifyContact, contactsTemplate, contacts, jobs, countries, onAddContact, onFinish, onMinimize}) => {\r\nconst Phone = ({\r\n  children,\r\n  modifyContact,\r\n  contactsTemplate,\r\n  names,\r\n  contacts,\r\n  jobs,\r\n  countries,\r\n  onAddContact,\r\n  onFinish,\r\n  shouldMinimize,\r\n  onMinimize,\r\n}) => {\r\n  const [state, setState] = React.useState({\r\n    maximized: false,\r\n    shouldMinimize: false,\r\n  });\r\n  // const [newContact,setNewContact] = React.useState({name: '', job: '', country: ''})\r\n\r\n  React.useEffect(() => {\r\n    setState({ ...state, contacts: contacts });\r\n    //eslint-disable-next-line\r\n  }, [contacts]);\r\n\r\n  React.useEffect(() => {\r\n    if (shouldMinimize) _shouldMinimize();\r\n    //eslint-disable-next-line\r\n  }, [shouldMinimize]);\r\n\r\n  // React.useEffect( () => {\r\n  // \tif(onMinimize) _shouldMinimize()\r\n  // \t//eslint-disable-next-line\r\n  // }, [onMinimize])\r\n\r\n  const _maximize = () => {\r\n    setState({ ...state, maximized: true });\r\n  };\r\n\r\n  const _shouldMinimize = () => {\r\n    setState({ ...state, shouldMinimize: true });\r\n  };\r\n\r\n  const _minimized = () => {\r\n    // setState({...state, shouldMinimize: false, maximized: false})\r\n    state.shouldMinimize = false;\r\n    state.maximized = false;\r\n    if (typeof onMinimize === \"function\") onMinimize();\r\n  };\r\n\r\n  // const _addContato = () => {\r\n  // \tif(onAddContact) onAddContact(newContact)\r\n  // \telse throw new Error(\"Using phone without callback: onAddContact\")\r\n  // \tsetNewContact({name: '', job: '', country: ''})\r\n  // }\r\n\r\n  const _terminou = () => {\r\n    if (typeof onFinish === \"function\") onFinish();\r\n    else console.log(\"onFinish not set or is not a function\");\r\n  };\r\n\r\n  const _contatoTemplate = (contact, key) => {\r\n    return (\r\n      <div className=\"contato\" key={key}>\r\n        <div className=\"contact-profile-pic\">\r\n          <div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n          <span>{key + 1}</span>\r\n        </div>\r\n        {contact.showName ? (\r\n          <div className=\"Nome\">\r\n            <p>Nome</p>\r\n            <div className=\"phone-text-field\">{contact.name}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.job === contactsTemplate?.find( template => template?.id === contact.id).job? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) =>\r\n              modifyContact({ ...contact, name: e.target.value })\r\n            }\r\n            label={\"Nome\"}\r\n            value={contact.name}\r\n            optionList={names}\r\n          />\r\n        )}\r\n\r\n        {contact.showJob ? (\r\n          <div className=\"Profissão\">\r\n            <p>Profissão</p>\r\n            <div className=\"phone-text-field\">{contact.job}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.job === contactsTemplate?.find( template => template?.id === contact.id).job? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) => modifyContact({ ...contact, job: e.target.value })}\r\n            label={\"Profissão\"}\r\n            value={contact.job}\r\n            optionList={jobs}\r\n          />\r\n        )}\r\n\r\n        {contact.showCountry ? (\r\n          <div className=\"País\">\r\n            <p>País</p>\r\n            <div className=\"phone-text-field\">{contact.country}</div>\r\n          </div>\r\n        ) : (\r\n          <Dropdown\r\n            // style={ contact.country === contactsTemplate?.find( template => template?.id === contact.id).country? {backgroundColor: '#cceecc'} : {}}\r\n            onChange={(e) =>\r\n              modifyContact({ ...contact, country: e.target.value })\r\n            }\r\n            label={\"País\"}\r\n            value={contact.country}\r\n            optionList={countries}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"phone\">\r\n      <div\r\n        id=\"small-phone-wrapper\"\r\n        className={state.maximized ? \"maximized\" : null}\r\n      >\r\n        <div id=\"small-phone-inner-wrapper\">\r\n          <div id=\"small-phone-content\" onClick={_maximize}>\r\n            <div id=\"small-phone-floating-text\">\r\n              <span lang=\"pt-br\">Adicione um novo contato</span>\r\n              <span lang=\"default\">Add a new contact</span>\r\n            </div>\r\n            <img src={smallPhone} alt=\"phone-small\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {state.maximized && (\r\n        <FullscreenOverlay\r\n          bgRGBA={{ r: 249, g: 175, b: 161, a: 0.69 }}\r\n          closeHoverRGB={{ r: 255, g: 255, b: 255 }}\r\n          onClickClose={_shouldMinimize}\r\n          shouldExit={state.shouldMinimize}\r\n          onReadyToExit={_minimized}\r\n        >\r\n          <div\r\n            id=\"big-phone-wrapper\"\r\n            className={state.shouldMinimize ? \"minimizing\" : null}\r\n          >\r\n            <div id=\"big-phone-imgs\">\r\n              <img src={palma} alt=\"\" />\r\n              <img src={bigPhone} alt=\"\" />\r\n              <img src={dedao} alt=\"\" />\r\n            </div>\r\n            <div id=\"big-phone-screen-wrapper\">\r\n              <div id=\"big-phone-screen-content\">\r\n                <p>Lista de contatos</p>\r\n                <div id=\"lista-contatos\">\r\n                  {contacts?.map((contact, index) => {\r\n                    return _contatoTemplate(contact, index);\r\n                  })}\r\n                  {/* <div id=\"add-contato\" className=\"contato\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"contact-profile-pic\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span><strong>+</strong></span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"Nome\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>Nome</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"nome\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nome do contato\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={newContact.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>setNewContact({...newContact, name: event.target.value})}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={\"Profissão\"}\r\n\t\t\t\t\t\t\t\t\t\t\toptionList={jobs}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={newContact.job}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>setNewContact({...newContact, job: event.target.value})}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={\"País\"}\r\n\t\t\t\t\t\t\t\t\t\t\toptionList={countries}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={newContact.country}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>setNewContact({...newContact, country: event.target.value})}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"btn-add-contato\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={!(newContact.name && newContact.job && newContact.country) ? \"disabled\" : \"enabled\"}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={addContato}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tAdicionar contato\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div id=\"btn-terminei\" onClick={() => setState({...state, changeRoomPopUp: true})}> */}\r\n            <div id=\"btn-terminei-wrapper\">\r\n              <div\r\n                id=\"btn-terminei\"\r\n                onClick={_terminou}\r\n                style={{\r\n                  display:\r\n                    contacts.filter(\r\n                      (contact) =>\r\n                        contact.job === \"\" ||\r\n                        contact.country === \"\" ||\r\n                        contact.name === \"\"\r\n                    ).length > 0\r\n                      ? \"none\"\r\n                      : \"block\",\r\n                }}\r\n              >\r\n                Terminei!\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </FullscreenOverlay>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Phone;\r\n","import React from 'react'\r\n\r\nconst Menu = ({ buttonList, onButtonClick }) => {\r\n  return (\r\n    <div id='Menu'>\r\n      <div id=\"menu-options\">\r\n        <span style={{\r\n          color: \"#FFF\",\r\n          backgroundColor: \"transparent !important\",\r\n          fontSize: \"3rem\"\r\n        }}></span>\r\n        {buttonList.map((button, index) =>\r\n          <button key={index} onClick={() => { onButtonClick(button) }} disabled={button.hasOwnProperty('active') ? !button.active : false}><span>{button.question}</span></button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\n\r\nconst DialogCharacter = ({character, feeling}) => {\r\n  let characterImg = \"\"\r\n\r\n  if( !(character == null) ) {\r\n    if( character.characterAssets.length > 0 ) {\r\n      characterImg = character.characterAssets\r\n        .find(asset => asset.bodyPart === 'upperBody' && asset.type === feeling)\r\n        .image.url\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id='CharacterPortrait'>\r\n      {<img src={characterImg} alt=\"Character Portrait\" />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogCharacter\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst DialogHistory = ({dialogHistory}) => {\r\n\treturn(\r\n\t\t<div id='dialog-history-wrapper'>\r\n\t\t\t<div id='dialog-history-content'>\r\n\t\t\t\t{dialogHistory.map((dialog, index)=>\r\n\t\t\t\t\t<div className={\"mensagem\" + (dialog.speaker==='player'? 0 : 1) } key={index}>{dialog.text}</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogHistory\r\n","import React from 'react'\r\n/**\r\n * Componente para escrita de texto caracter a caracter\r\n * \r\n * @param  {Object} props\r\n * @param  {string} props.text\t\t\t\tTexto a ser escrito caracter por caracter\r\n * @param  {number} props.characterTime\t\tDelay, em milissegundos, entre cada caracter\r\n * @param  {() => void} props.onWritten\t\tCallback para quando terminou de escrever\r\n * @param  {number} props.afterWrittenTime\tDelay, em milissegundos, antes de avisar que terminou de escrever\r\n */\r\nconst Writer = ({text, characterTime, onWritten, afterWrittenTime}) => {\r\n\tconst [state, setState] = React.useState({text: text, index: 0})\r\n\r\n\tReact.useEffect( () => {\r\n\tif( text !== state.text )\r\n\t\tsetState( () => ({text: text, index: 0}))\r\n\t}, [text, state.text] )\r\n\r\n\tReact.useEffect( () => {\r\n\t\tlet timeoutID\r\n\t\tif( state.index < state.text.length ) {\r\n\t\t\ttimeoutID = setTimeout( () => { setState({...state, index: state.index + 1}) }, characterTime)\r\n\t\t} else {\r\n\t\t\ttimeoutID = setTimeout( onWritten, afterWrittenTime )\r\n\t\t}\r\n\t\treturn () => {clearTimeout(timeoutID)}\r\n\t})\r\n\r\n\treturn(\r\n\t\t<div id=\"Writer\">\r\n\t\t\t{ state.text.substring(0, state.index) }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Writer\r\n","import Menu from '../Menu'\r\nimport React from 'react'\r\nimport DialogCharacter from '../DialogCharacter'\r\nimport DialogHistory from '../DialogHistory'\r\nimport FullscreenOverlay from '../FullscreenOverlay'\r\nimport Writer from '../Writer'\r\n\r\nimport './index.scss'\r\n\r\n/**\r\n * Elemento para renderização de uma conversa com algum NPC, estilo graphic novel.\r\n * \r\n * @param  {Object} props\r\n * @param  {Object | Object[]} [props.children]\r\n *\t\t\tElementos extras a serem renderizados no mesmo contexto\r\n * @param  {boolean} [props.shouldExit]\r\n *\t\t\tDevo fechar? Se verdadeiro, inicia animação de fechamento\r\n * @param  {boolean} [props.showDialogHistory]\r\n *\t\t\tO histórico da conversa deve ser mostrado?\r\n * @param  {(dialogHistory)=>void} [props.onClearDialogHistory]\r\n *\t\t\tEnquanto este campo não for null, limparei meu histórico e chamarei esse callback a cada limpeza\r\n * @param  {boolean} [props.callAfterWritterForEveryMsg]\r\n *\t\t\tSe verdadeiro, chamarei a callback afterWritter ao final de cada mensagem, mesmo no caso de múltiplas mensagens consecutivas\r\n * @param  {number} [props.msPerCharacter]\r\n *\t\t\tDelay, em milissegundos, entre cada caracter da exibição da resposta\r\n * @param  {number} [props.waitAfterWritten]\r\n *\t\t\tDelay, em milissegundos, ao final de cada mensagem escrita\r\n * @param  { {text:string, speaker?: string}[]} [props.prevDialogHistory]\r\n *\t\t\tHistórico inicial da conversa\r\n * @param  {string | string[]} [props.charPreSpeech]\r\n *\t\t\tLista de falas a serem apresentadas antes de se dar a opção de escolha ao jogador\r\n * @param  {{question:string, answers:string[]}[]} props.convOptions\r\n *\t\t\tLista de opções para o jogador escolher (com suas respostas)\r\n * @param  {Object} [props.currentChar]\r\n *\t\t\tInfo do personagem a ser renderizado\r\n * @param  {Object} [props.charFeeling]\r\n *\t\t\tInfo de qual emoção o personagem deve ter\r\n * @param  {() => void} [props.afterWriter]\r\n *\t\t\tCallback para quando as mensagems terminarem de ser enviadas\r\n * @param  {(dialogHistory:{text:string, speaker?:string}[]) => void} [props.onExited]\r\n *\t\t\tCallback para quando se sair do diálogo. Envia todo o histórico de mensagens enviadas até o momento\r\n * @param  {(convoChoosen) => void} [props.onConvoChoiceMade]\r\n *\t\t\tCallback sobre qual alternativa foi escolhida. Envia a convOption escolhida\r\n */\r\nconst Conversa = ({\r\n\t\tchildren,\r\n\t\tshouldExit = false,\r\n\t\tshowDialogHistory = true,\r\n\t\tonClearDialogHistory = null,\r\n\t\tcallAfterWritterForEveryMsg = false,\r\n\t\tmsPerCharacter = 50,\r\n\t\twaitAfterWritten = 2000,\r\n\t\tprevDialogHistory = [],\r\n\t\tcharPreSpeech = null,\r\n\t\tconvOptions = [],\r\n\t\tcurrentChar = null,\r\n\t\tcharFeeling = null,\r\n\t\tafterWriter = () => {},\r\n\t\tonExited = (dialogHistory) => {},\r\n\t\tonConvoChoiceMade = (convoChoosen) => {},\r\n\t}) => {\r\n\r\n\tconst [state, setState] = React.useState({\r\n\t\tquerFechar: shouldExit,\r\n\t\tanswers: null,\r\n\t\tdialogHistory: prevDialogHistory\r\n\t});\r\n\r\n\t// if( charPreSpeech !== null && charPreSpeech.length > 0 ) {\r\n\t// \tstate.currentAnswer = 0\r\n\t// \tstate.answers = typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t// \tcharPreSpeech = null\r\n\t// }\r\n\r\n\t// * UNDEFINED BEHAVIOR caso alguém mude o charPreSpeech desse componente enquanto o writer faz algo\r\n\tReact.useEffect( () => {\r\n\t\tif( charPreSpeech !== null && charPreSpeech.length > 0 ) {\r\n\t\t\t// state.currentAnswer = 0\r\n\t\t\t// state.answers = typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t\t\t// console.log('effect', state.answers)\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentAnswer: 0,\r\n\t\t\t\tanswers: typeof(charPreSpeech) === \"string\" ? [charPreSpeech] : charPreSpeech\r\n\t\t\t})\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [charPreSpeech])\r\n\t\r\n\t// * UNDEFINED BEHAVIOR caso alguém mande limpar enquanto o writer faz algo\r\n\tReact.useEffect(() => {\r\n\t\tif( onClearDialogHistory ) {\r\n\t\t\tonClearDialogHistory(state.dialogHistory)\r\n\t\t\tstate.dialogHistory = []\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [onClearDialogHistory])\r\n\t\r\n\tReact.useEffect( () => {\r\n\t\tsetState({...state, querFechar: shouldExit})\r\n\t\t// eslint-disable-next-line\r\n\t}, [shouldExit])\r\n\r\n\tconst _querFechar = () => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tquerFechar: true\r\n\t\t})\r\n\t}\r\n\r\n\tconst _podeFechar = () => {\r\n\t\tonExited(state.dialogHistory)\r\n\t}\r\n\r\n\tconst _afterWriter = () => {\r\n\t\tlet updateState = {}\r\n\t\tif( state.currentAnswer < state.answers.length - 1 ) {\r\n\t\t\tupdateState = {\r\n\t\t\t\tcurrentAnswer: state.currentAnswer + 1\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tupdateState = {\r\n\t\t\t\tcurrentAnswer: null,\r\n\t\t\t\tanswers: null\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t...updateState,\r\n\t\t\tdialogHistory: [\r\n\t\t\t\t...state.dialogHistory,\r\n\t\t\t\t{text: state.answers[state.currentAnswer]}\r\n\t\t\t],\r\n\t\t})\r\n\r\n\t\tif( callAfterWritterForEveryMsg || state.currentAnswer >= state.answers.length - 1 )\r\n\t\t\tafterWriter()\r\n\t}\r\n\r\n\tconst _convoChoiceClick = (convoChoosen) => {\r\n\r\n\t\tif( typeof(convoChoosen.answers) === \"string\" ) convoChoosen.answers = [convoChoosen.answers]\r\n\t\tsetState( {\r\n\t\t\t...state,\r\n\t\t\tdialogHistory: [\r\n\t\t\t\t...state.dialogHistory,\r\n\t\t\t\t{text: convoChoosen.question, speaker: 'player'}\r\n\t\t\t],\r\n\t\t\tanswers: convoChoosen.answers,\r\n\t\t\tcurrentAnswer: 0\r\n\t\t})\r\n\r\n\t\tonConvoChoiceMade(convoChoosen)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FullscreenOverlay shouldExit={state.querFechar} onClickClose={_querFechar} onReadyToExit={_podeFechar}>\r\n\t\t\t<div id=\"dialog-interact\" className={state.querFechar ? \"ExitAnim\" : null}>\r\n\t\t\t\t<div id=\"dialogos\">\r\n\t\t\t\t\t{showDialogHistory ? <DialogHistory dialogHistory={state.dialogHistory}/> : <div style={{flexGrow: '1'}} />}\r\n\t\t\t\t\t<div id='dialog-box' className={state.answers ? \"alternative\" : \"\"}>\r\n\t\t\t\t\t\t{state.answers ?\r\n\t\t\t\t\t\t\t<Writer text={state.answers[state.currentAnswer]}\r\n\t\t\t\t\t\t\t\tonWritten={_afterWriter}\r\n\t\t\t\t\t\t\t\tafterWrittenTime={waitAfterWritten}\r\n\t\t\t\t\t\t\t\tcharacterTime={msPerCharacter}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<Menu buttonList={convOptions}\r\n\t\t\t\t\t\t\t\tonButtonClick={_convoChoiceClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<DialogCharacter character={currentChar} feeling={charFeeling}/>\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</FullscreenOverlay>\r\n\t)\r\n}\r\n\r\nexport default Conversa\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Result from \"../Game2/components/Result\";\r\nimport RoomSelect from \"../../_components/RoomSelect\";\r\nimport Sala from \"../../_components/Sala\";\r\nimport Character from \"../../_components/Character\";\r\nimport initialState from \"./initialState.js\";\r\nimport initialDialog from \"./initialDialog.js\";\r\nimport stub from \"./stub.js\";\r\nimport Phone from \"../../_components/Phone\";\r\nimport Conversa from \"../../_components/Conversa\";\r\nimport FullscreenOverlay from \"../../_components/FullscreenOverlay\";\r\nimport { headerConstants } from \"../../_constants\";\r\nimport { bigPhone, dedao, palma, blobLowScore, blobLaranja } from \"../../img\";\r\n\r\nimport \"./index.scss\";\r\nimport \"./feedback-screen.scss\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Game1 = (props) => {\r\n  const [state, setState] = React.useState(initialState());\r\n\r\n  const { play_sessionsActions } = apiActions;\r\n  const id = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useSelector((state) => state.missions.loading);\r\n  let error = useSelector((state) => state.missions.error);\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  const missionData = mission ? mission.missionData : null;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[state.play_sessions.items.length - 1] : {}\r\n  );\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  // React.useEffect(()=>{\r\n  // \tif(mission && Object.keys(actions).length !== 0 && !missionData){\r\n  // \t\tdispatch(actions['missionData'].find({mission: mission.id}))\r\n  // \t}\r\n  // })\r\n\r\n  React.useEffect(() => {\r\n    if (mission) dispatch(musicActions.set(mission.backgroundAudio.url));\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //Track playerActions\r\n  React.useEffect(() => {\r\n    if ((mission && !mission.trackPlayerInput) || !currentPlaySession) return;\r\n\r\n    const getClickedObject = (e) => {\r\n      dispatch(\r\n        play_sessionsActions.update(\r\n          { id: currentPlaySession.id,\r\n            data: {\r\n              actions:\r\n              [...currentPlaySession.data.actions,\r\n                {\r\n                  tag: e.target.nodeName,\r\n                  src: e.target.src,\r\n                  alt: e.target.alt,\r\n                  className: e.target.className,\r\n                  class: e.target.class,\r\n                  id: e.target.id,\r\n                  innerHTML: e.target.innerHTML.includes(\"<div\")\r\n                    ? null\r\n                    : e.target.innerHTML,\r\n                  clickTime: new Date(),\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        )\r\n      );\r\n    };\r\n    document.addEventListener(\"mousedown\", getClickedObject);\r\n\r\n    setState((s) => {\r\n      return { ...s, currentPlaySession, getClickedObject };\r\n    });\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", getClickedObject);\r\n    };\r\n  }, [dispatch, currentPlaySession, play_sessionsActions, state.tracking]);\r\n\r\n  React.useEffect(() => {\r\n    if (id && !missionData)\r\n      dispatch(gameActions.getById(\"missions\", props.match.params.id));\r\n    if (missionData) {\r\n      let data = {};\r\n\r\n      //distribute characters in locations\r\n      if (state.locations.length === 0) {\r\n        // data.locations = [...mission.locations]\r\n        data.locations = missionData.locations;\r\n      }\r\n\r\n      //list of all available jobs\r\n      if (state.jobs.length === 0) {\r\n        data.jobs = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.job))\r\n                      acc.push(missionCharacter.character.job);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      //list of all available countries\r\n      if (state.countries.length === 0) {\r\n        data.countries = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.country))\r\n                      acc.push(missionCharacter.character.country);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      if (state.names.length === 0) {\r\n        data.names = [\r\n          ...new Set(\r\n            missionData.locations\r\n              .map((location) => {\r\n                return location.missionCharacters.reduce(\r\n                  (acc, missionCharacter) => {\r\n                    if (!acc.includes(missionCharacter.character.name))\r\n                      acc.push(missionCharacter.character.name);\r\n                    return acc;\r\n                  },\r\n                  []\r\n                );\r\n              })\r\n              .flat()\r\n              .sort()\r\n          ),\r\n        ];\r\n      }\r\n\r\n      //resume characters as contacts\r\n      if (state.contactsTemplate.length === 0) {\r\n        //create full contact template\r\n        data.contactsTemplate = missionData.locations\r\n          .map((location) => {\r\n            return location.missionCharacters.map((missionCharacter) => {\r\n              return {\r\n                id: missionCharacter.character.id,\r\n                name: missionCharacter.character.name,\r\n                country: missionCharacter.character.country,\r\n                job: missionCharacter.character.job,\r\n                //looks for mission configuration\r\n                showJob: missionCharacter.showJob,\r\n                showCountry: missionCharacter.showCountry,\r\n                showName: missionCharacter.showName,\r\n                hasEmptyField: !(\r\n                  missionCharacter.showJob &&\r\n                  missionCharacter.showCountry &&\r\n                  missionCharacter.showName\r\n                ),\r\n              };\r\n            });\r\n          })\r\n          .flat();\r\n\r\n        data.totalFields = 0;\r\n        //create contact state shown to/ manipulated by to player\r\n        data.contactsAtSession = data.contactsTemplate.map((contact) => {\r\n          data.totalFields +=\r\n            (!contact.showJob ? 1 : 0) +\r\n            (!contact.showCountry ? 1 : 0) +\r\n            (!contact.showName ? 1 : 0);\r\n\r\n          return {\r\n            ...contact,\r\n            name: contact.showName ? contact.name : \"\",\r\n            job: contact.showJob ? contact.job : \"\",\r\n            country: contact.showCountry ? contact.country : \"\",\r\n          };\r\n        });\r\n      }\r\n\r\n      if (Object.keys(data).length > 0)\r\n        setState((state) => {\r\n          return { ...state, ...data };\r\n        });\r\n    }\r\n  }, [\r\n    dispatch,\r\n    id,\r\n    mission,\r\n    props.match.params.id,\r\n    state.locations.length,\r\n    state.contactsTemplate.length,\r\n    state.countries.length,\r\n    state.jobs.length,\r\n    state.names.length,\r\n    missionData,\r\n  ]);\r\n\r\n  if (error) {\r\n    error = null;\r\n    mission = stub;\r\n  }\r\n\r\n  const onStartGame = (e) => {\r\n    if (state.tracking) {\r\n      dispatch(\r\n        play_sessionsActions.create({\r\n          user: userId,\r\n          mission: mission.id,\r\n          data: {actions:[]}\r\n        })\r\n      );\r\n    }\r\n    setState({ ...state, scene: \"ROOM\" });\r\n  };\r\n\r\n  const setCurrentChar = (character) => () => {\r\n    // if (convOptions.length === 0) console.log(\"Couldn't find any questions to ask currentChar\")\r\n\r\n    if (!state.dialogs.hasOwnProperty(character.character.name)) {\r\n      let convOptions = character.answers.reduce((acc, convOption) => {\r\n        let option = {\r\n          ...convOption,\r\n          ...convOption.question,\r\n          answers: convOption.answer,\r\n          active: true,\r\n        };\r\n        delete option.answer;\r\n        return [...acc, option];\r\n      }, []);\r\n\r\n      setState({\r\n        ...state,\r\n        currentChar: character.character,\r\n        convOptions: convOptions,\r\n        dialogs: {\r\n          ...state.dialogs,\r\n          [character.character.name]: [],\r\n        },\r\n      });\r\n    } else {\r\n      let convOptions = [];\r\n      if (\r\n        state.questionsAsked <\r\n        state.locations[state.currentLocationIndex].maxQuestions\r\n      ) {\r\n        convOptions = character.answers.reduce((acc, convOption) => {\r\n          let option = {\r\n            ...convOption,\r\n            ...convOption.question,\r\n            answers: convOption.answer,\r\n            active: state.dialogs[character.character.name].find(\r\n              (dialog) => dialog.text === convOption.question.question\r\n            )\r\n              ? false\r\n              : true,\r\n          };\r\n          delete option.answer;\r\n          return [...acc, option];\r\n        }, []);\r\n      } else {\r\n        convOptions = character.answers.reduce((acc, convOption) => {\r\n          let option = {\r\n            ...convOption,\r\n            ...convOption.question,\r\n            answers: convOption.answer,\r\n            active: false,\r\n          };\r\n          delete option.answer;\r\n          return [...acc, option];\r\n        }, []);\r\n      }\r\n\r\n      setState({\r\n        ...state,\r\n        currentChar: character.character,\r\n        convOptions: convOptions,\r\n      });\r\n    }\r\n  };\r\n\r\n  const afterWriter = () => {\r\n    let updatedState = {};\r\n    if (\r\n      state.questionsAsked ===\r\n        state.locations[state.currentLocationIndex].maxQuestions &&\r\n      state.preSpeech.length === 0\r\n    ) {\r\n      updatedState.preSpeech = [\r\n        \"Espero que isso tenha sido tudo. Tenho que ir agora...\",\r\n      ];\r\n      updatedState.convOptions = [\r\n        { question: \"Ah tá. Tchau!\", answers: \"Tchau!\", close: true },\r\n      ];\r\n    } else if (\r\n      state.questionsAsked >\r\n      state.locations[state.currentLocationIndex].maxQuestions\r\n    ) {\r\n      updatedState.convOptions = state.convOptions.map((convOption) => {\r\n        return { ...convOption, active: false };\r\n      }, []);\r\n    }\r\n    if (state.close) {\r\n      updatedState.shouldCloseConvo = true;\r\n      updatedState.close = false;\r\n    }\r\n\r\n    setState({ ...state, ...updatedState });\r\n  };\r\n\r\n  const onMenuButtonClick = (answer) => {\r\n    //\r\n    //\tAplicar lógica adicional de click nos botões do menu\r\n    //\r\n    let updatedState = {};\r\n\r\n    if (state.dialogs[state.currentChar.name].length) {\r\n      updatedState.questionsAsked = state.questionsAsked + 1;\r\n\r\n      if (\r\n        updatedState.questionsAsked <\r\n        state.locations[state.currentLocationIndex].maxQuestions\r\n      ) {\r\n        updatedState.convOptions = state.convOptions.map((convOption) => {\r\n          if (convOption.question === answer.question)\r\n            return { ...convOption, active: false };\r\n\r\n          return convOption;\r\n        }, []);\r\n      } else {\r\n        updatedState.preSpeech = [];\r\n        updatedState.convOptions = [];\r\n      }\r\n    }\r\n\r\n    if (answer.close) updatedState.close = true;\r\n\r\n    setState({\r\n      ...state,\r\n      ...updatedState,\r\n      dialogs: {\r\n        ...state.dialogs,\r\n        [state.currentChar.name]: [\r\n          ...state.dialogs[state.currentChar.name],\r\n          {\r\n            speaker: \"player\",\r\n            text: answer.question,\r\n          },\r\n          {\r\n            text: answer.answers[0],\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n\r\n  const modifyContact = (contact) => {\r\n    let index = state.contactsAtSession.indexOf(\r\n      state.contactsAtSession.find((c) => c.id === contact.id)\r\n    );\r\n    // console.log('changing:', contact)\r\n    setState({\r\n      ...state,\r\n      contactsAtSession: [\r\n        ...state.contactsAtSession.slice(0, index),\r\n        contact,\r\n        ...state.contactsAtSession.slice(index + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setState({ ...state, currentChar: null, shouldCloseConvo: false });\r\n  };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(), hasPlayed: true });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const onPhoneFinish = () => {\r\n    let wrongContacts = 0;\r\n    state.locations[state.currentLocationIndex].missionCharacters.forEach(\r\n      (missionContact, index) => {\r\n        let answer = state.contactsAtSession.find(\r\n          (contactAtSession) =>\r\n            contactAtSession.id === missionContact.character.id\r\n        );\r\n        let gabarito = state.contactsTemplate.find(\r\n          (contactTemplate) =>\r\n            contactTemplate.id === missionContact.character.id\r\n        );\r\n        if (\r\n          answer.job !== gabarito.job ||\r\n          answer.country !== gabarito.country ||\r\n          answer.name !== gabarito.name\r\n        )\r\n          wrongContacts++;\r\n      }\r\n    );\r\n    setState({ ...state, changeRoomPopUp: true, wrongContacts: wrongContacts });\r\n  };\r\n\r\n  const onGoNextRoom = () => {\r\n    if (state.currentLocationIndex + 1 < state.locations.length)\r\n      setState({\r\n        ...state,\r\n        shouldCloseDialog: true,\r\n        currentLocationIndex: state.currentLocationIndex + 1,\r\n        shouldMinimize: true,\r\n        questionsAsked: 0,\r\n        dialogs: {},\r\n      });\r\n    else {\r\n      // CALCULATE RESULT WITH WRONG ITEM AND FIND THE MATRIC THE USER MISSED THE MOST\r\n      let result = 0;\r\n      let mainError = missionData.metrics.map((metric) => {\r\n        return {\r\n          metric: metric.name,\r\n          metricTranslate: metric.nameTranslate.find(\r\n            (translate) => translate.language.id === lang\r\n          ),\r\n          count: 0,\r\n        };\r\n      });\r\n      state.contactsAtSession.forEach((contact) => {\r\n        let gabarito = state.contactsTemplate.find((t) => t.id === contact.id);\r\n\r\n        if (gabarito.hasEmptyField) {\r\n          result +=\r\n            (contact.job === gabarito.job && !gabarito.showJob ? 1 : 0) +\r\n            (contact.country === gabarito.country && !gabarito.showCountry\r\n              ? 1\r\n              : 0) +\r\n            (contact.name === gabarito.name && !gabarito.showName ? 1 : 0);\r\n\r\n          mainError.forEach((metric) => {\r\n            if (metric.name === \"Profissão\") {\r\n              metric.count +=\r\n                contact.job !== gabarito.job && !gabarito.showJob ? 1 : 0;\r\n            } else if (metric.name === \"País\") {\r\n              metric.count +=\r\n                contact.country !== gabarito.country && !gabarito.showCountry\r\n                  ? 1\r\n                  : 0;\r\n            } else if (metric.name === \"Nome\") {\r\n              metric.count +=\r\n                contact.name !== gabarito.name && !gabarito.showName ? 1 : 0;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      const score = (result / state.totalFields).toFixed(2) * 100;\r\n\r\n      setState({\r\n        ...state,\r\n        scene: \"ENDGAME\",\r\n        result,\r\n        score,\r\n        mainError: mainError.reduce((max, obj) =>\r\n          max.count > obj.count ? max : obj\r\n        ),\r\n        feedback: missionData.feedbacks.find(\r\n          (feedback) => feedback.minScore <= score && score <= feedback.maxScore\r\n        ),\r\n      });\r\n\r\n      dispatch(\r\n        gameActions.create(\"results\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n          score: score,\r\n          won: score > 80,\r\n        })\r\n      );\r\n\r\n      dispatch(\r\n        headerActions.setAll(\r\n          mission.name,\r\n          mission.nameTranslate.find((name) => {\r\n            return name.language.id === lang;\r\n          }).name\r\n        )\r\n      );\r\n\r\n      dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"game1-wrapper\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        mission && (\r\n          <div id=\"game1-content\">\r\n            {/* <div id=\"input-tracker\">\r\n              TrackInput:{\" \"}\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={(e) => {\r\n                  setState({ ...state, tracking: e.target.checked });\r\n                }}\r\n              />\r\n            </div> */}\r\n            {(function renderScene() {\r\n              switch (state.scene) {\r\n                case \"INIT\":\r\n                  return (\r\n                    <Init\r\n                      icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                      name={mission.name}\r\n                      description={mission.description}\r\n                      nameTranslate={\r\n                        mission.nameTranslate.find((name) => {\r\n                          return name.language.id === lang;\r\n                        }).name\r\n                      }\r\n                      descriptionTranslate={\r\n                        mission.descriptionTranslate.find((description) => {\r\n                          return description.language.id === lang;\r\n                        }).description\r\n                      }\r\n                      onStart={onStartGame}\r\n                      onBack={() => setState({ ...state, back: true })}\r\n                      ready={state.locations.length > 0 ? true : false}\r\n                    />\r\n                  );\r\n                case \"ROOM\":\r\n                  return (\r\n                    <div id=\"room-itself\">\r\n                      <RoomSelect\r\n                        value={state.currentLocationIndex}\r\n                        buttonList={state.locations.map(\r\n                          (location) => location.location.name\r\n                        )}\r\n                        showInBtnFormat={false}\r\n                      />\r\n                      <Sala\r\n                        roomData={\r\n                          state.locations[state.currentLocationIndex].location\r\n                        }\r\n                        key={state.currentLocationIndex}\r\n                      >\r\n                        {state.locations[\r\n                          state.currentLocationIndex\r\n                        ].missionCharacters.map((character, index) => (\r\n                          <Character\r\n                            key={index}\r\n                            zDepth={character.zDepth}\r\n                            character={character.character}\r\n                            onClick={setCurrentChar(character)}\r\n                          />\r\n                        ))}\r\n                      </Sala>\r\n                      <Phone\r\n                        contacts={state.contactsAtSession.filter((contact) =>\r\n                          state.locations[\r\n                            state.currentLocationIndex\r\n                          ].missionCharacters.find(\r\n                            (character) => character.character.id === contact.id\r\n                          )\r\n                        )}\r\n                        modifyContact={modifyContact}\r\n                        contactsTemplate={state.contactsTemplate}\r\n                        names={state.names}\r\n                        jobs={state.jobs}\r\n                        countries={state.countries}\r\n                        onFinish={onPhoneFinish}\r\n                        onMinimize={() =>\r\n                          setState({ ...state, shouldMinimize: false })\r\n                        }\r\n                        shouldMinimize={state.shouldMinimize}\r\n                      />\r\n                      {state.currentChar && (\r\n                        <Conversa\r\n                          shouldExit={state.shouldCloseConvo}\r\n                          prevDialogHistory={\r\n                            state.dialogs[state.currentChar.name]\r\n                          }\r\n                          onClearDialogHistory={state.refreshDialog}\r\n                          charPreSpeech={state.preSpeech}\r\n                          convOptions={\r\n                            state.dialogs[state.currentChar.name].length\r\n                              ? state.convOptions\r\n                              : initialDialog\r\n                          }\r\n                          currentChar={state.currentChar}\r\n                          charFeeling={state.characterFeeling}\r\n                          afterWriter={afterWriter}\r\n                          onExited={closeDialog}\r\n                          onConvoChoiceMade={onMenuButtonClick}\r\n                        ></Conversa>\r\n                      )}\r\n                      {state.changeRoomPopUp && (\r\n                        <FullscreenOverlay\r\n                          showCloseBtn={false}\r\n                          shouldExit={state.shouldCloseDialog}\r\n                          onReadyToExit={() => {\r\n                            setState({\r\n                              ...state,\r\n                              shouldCloseDialog: false,\r\n                              changeRoomPopUp: false,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <div className=\"popup-wrapper\">\r\n                            <div className=\"popup-content\">\r\n                              <span>Are you sure?</span>\r\n                              <div>\r\n                                {state.wrongContacts > 0 ? (\r\n                                  <div className=\"next-room-text\">\r\n                                    <span lang=\"pt-br\">\r\n                                      {`${state.wrongContacts}` +\r\n                                        missionData.nextRoomTextWrong}\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      {`${state.wrongContacts}` +\r\n                                        missionData.nextRoomTextWrongTranslate.find(\r\n                                          (translation) => {\r\n                                            return (\r\n                                              translation.language.id === lang\r\n                                            );\r\n                                          }\r\n                                        ).text}\r\n                                    </span>\r\n                                  </div>\r\n                                ) : (\r\n                                  <div className=\"next-room-text\">\r\n                                    <span lang=\"pt-br\">\r\n                                      {missionData.nextRoomTextRight}\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      {\r\n                                        missionData.nextRoomTextRightTranslate.find(\r\n                                          (translation) => {\r\n                                            return (\r\n                                              translation.language.id === lang\r\n                                            );\r\n                                          }\r\n                                        ).text\r\n                                      }\r\n                                    </span>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              <div id=\"popup-btns\">\r\n                                <button\r\n                                  id=\"no-go\"\r\n                                  onClick={() =>\r\n                                    setState({\r\n                                      ...state,\r\n                                      shouldCloseDialog: true,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {state.wrongContacts > 0\r\n                                    ? \"Keep trying\"\r\n                                    : \"Not yet\"}\r\n                                </button>\r\n                                <button id=\"go\" onClick={onGoNextRoom}>\r\n                                  {state.wrongContacts > 0\r\n                                    ? \"Continue anyway\"\r\n                                    : \"Let's go\"}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </FullscreenOverlay>\r\n                      )}\r\n                      <div\r\n                        id=\"question-counter\"\r\n                        className={\r\n                          state.questionsAsked >=\r\n                          state.locations[state.currentLocationIndex]\r\n                            .maxQuestions\r\n                            ? \"max\"\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <div id=\"question-counter-info\">\r\n                          <div>Você já fez</div>\r\n                          <div className=\"numbers\">\r\n                            <span>\r\n                              {Math.min(\r\n                                state.questionsAsked,\r\n                                state.locations[state.currentLocationIndex]\r\n                                  .maxQuestions\r\n                              )}\r\n                            </span>\r\n                            /\r\n                            {\r\n                              state.locations[state.currentLocationIndex]\r\n                                .maxQuestions\r\n                            }\r\n                          </div>\r\n                          <div>perguntas</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                case \"ENDGAME\":\r\n                  return (\r\n                    <div id=\"feedback-endGame-screen\">\r\n                      {state.score > 30 ? (\r\n                        <div id=\"feedback-end-panels\">\r\n                          <div id=\"feedback-painel-icon\">\r\n                            <img src={state.feedback.topAsset.url} alt=\"\" />\r\n                          </div>\r\n                          <div id=\"feedback-endgame-messages\">\r\n                            <div\r\n                              className=\"feedback-painel\"\r\n                              id=\"feedback-painel-1-win\"\r\n                            >\r\n                              <div className=\"feedback-painel-1-wrapper\">\r\n                                <div className=\"feedback-painel-1-content\">\r\n                                  <span lang=\"pt-br\">\r\n                                    {\" \"}\r\n                                    {state.feedback.text.replace(\r\n                                      \"xxxx\",\r\n                                      state.score\r\n                                    )}\r\n                                  </span>\r\n                                  <span lang=\"en\">\r\n                                    {state.feedback.textTranslate\r\n                                      .find((text) => text.language.id === lang)\r\n                                      .text.replace(\"xxxx\", state.score)}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                              {state.score < 100 && (\r\n                                <a\r\n                                  href=\"#feedback-painel-2\"\r\n                                  className=\"next-btn\"\r\n                                >\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              )}\r\n                            </div>\r\n                            {state.score < 100 && (\r\n                              <div\r\n                                className=\"feedback-painel\"\r\n                                id=\"feedback-painel-2\"\r\n                              >\r\n                                <div className=\"feedback-painel-2-wrapper\">\r\n                                  <div\r\n                                    className=\"feedback-painel-2-content\"\r\n                                    style={{\r\n                                      backgroundImage:\r\n                                        \"url(\" + blobLaranja + \")\",\r\n                                    }}\r\n                                  >\r\n                                    <div>\r\n                                      <span>{state.result}</span>/\r\n                                      <span>{state.totalFields}</span>\r\n                                    </div>\r\n                                    <div>correct items</div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"feedback-painel-2-wrapper\">\r\n                                  <div className=\"feedback-painel-2-content\">\r\n                                    <div>\r\n                                      <p>\r\n                                        You've had a hard time remembering your\r\n                                        friend's{\" \"}\r\n                                        {state.mainError.metricTranslate.text.toLowerCase()}\r\n                                        . I hope they don't mind.\r\n                                      </p>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <a\r\n                                  href=\"#feedback-painel-1-win\"\r\n                                  className=\"prev-btn\"\r\n                                >\r\n                                  {\"❮\"}\r\n                                </a>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div id=\"feedback-endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div id=\"feedback-endGame-wrong-wrapper\">\r\n                          <div>\r\n                            <div\r\n                              className=\"feedback-painel feedback-panel-1-defeat\"\r\n                              id=\"feedback-painel-1\"\r\n                            >\r\n                              <div id=\"feedback-painel-icon-derrota\">\r\n                                <img src={state.feedback.topAsset.url} alt=\"\" />\r\n                              </div>\r\n                              <span lang=\"pt-br\">\r\n                                {state.feedback.text.replace(\r\n                                  \"xxxx\",\r\n                                  state.score\r\n                                )}\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                {state.feedback.textTranslate\r\n                                  .find((text) => text.language.id === lang)\r\n                                  .text.replace(\"xxxx\", state.score)}\r\n                              </span>\r\n                            </div>\r\n                            <div\r\n                              className=\"feedback-painel\"\r\n                              id=\"feedback-painel-3\"\r\n                              style={{\r\n                                backgroundImage: \"url(\" + blobLowScore + \")\",\r\n                              }}\r\n                            >\r\n                              <div className=\"feedback-painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"feedback-painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.result}</span>/\r\n                                    <span>{state.totalFields}</span>\r\n                                  </div>\r\n                                  <div>correct</div>\r\n                                  <div>items</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"feedback-painel-2-wrapper\">\r\n                                <div className=\"feedback-painel-2-content\">\r\n                                  <div>\r\n                                    <p lang=\"pt-br\">\r\n                                      Lembrar o(a){\" \"}\r\n                                      {state.mainError.metric.toLowerCase()} dos\r\n                                      seus amigos foi o mais difícil pra você.\r\n                                      Espero que eles não se importem.\r\n                                    </p>\r\n                                    <p lang=\"en\">\r\n                                      You've had a hard time remembering your\r\n                                      friend's{\" \"}\r\n                                      {state.mainError.metricTranslate.text.toLowerCase()}\r\n                                      . I hope they don't mind.\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"feedback-endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {state.feedback.mobileBackground && (\r\n                        <div id=\"feedback-phone-div\">\r\n                          <div id=\"feedback-phone\">\r\n                            <img src={palma} alt=\"\" />\r\n                            <img src={bigPhone} alt=\"\" />\r\n                            <img\r\n                              src={state.feedback.mobileBackground.url}\r\n                              alt=\"\"\r\n                            />\r\n                            <img src={dedao} alt=\"\" />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                default:\r\n                  return <div>Error</div>;\r\n              }\r\n            })()}\r\n            {state.endGame && <Result gameEndState={state.gameEndState} />}\r\n            {state.tries > 0 && (\r\n              <div>\r\n                {state.tries} tentativa{state.tries > 1 ? \"s\" : \"\"}!\r\n              </div>\r\n            )}\r\n            {state.back && <Redirect to=\"/userspace\" />}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1;\r\n","import React from \"react\";\r\nimport { lamp_apagada, lamp_acesa } from \"../../img\";\r\nimport \"./index.scss\";\r\n\r\nconst AcusationLamp = ({ onClick }) => {\r\n  return (\r\n    <div id=\"acusar\" onClick={onClick}>\r\n      <span>É você!</span>\r\n      <img id=\"lamp-apagada\" src={lamp_apagada} alt=\"\"></img>\r\n      <img id=\"lamp-acesa\" src={lamp_acesa} alt=\"\"></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AcusationLamp;\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nconst initialState = (hasPlayed = false) => ({\r\n//GAME STATE\r\n  scene: \"INIT\",\r\n  currentRoom: 0,\r\n  isOnDialog: false,\r\n  endGame: false,\r\n  found: false,\r\n  locations:[],\r\n  tips: ['O engenheiro sabe'],\r\n  acusation: false,\r\n  closeAcusation: false,\r\n  tries: 0,\r\n  validQuestions: [],\r\n  tutorialStep: 0,\r\n  seeTutorial: true,\r\n  hasPlayed: hasPlayed,\r\n  checkedPlayed: hasPlayed,\r\n  tipsCount: 0,\r\n//DIALOG\r\n  dialogHistory: [],\r\n  dialogStep: 0,\r\n  characterFeeling: 'init',\r\n  totalDialogSteps: 2,\r\n  questionsByStep: 2,\r\n  currentChar: null,\r\n  showConvo: false,\r\n  questions: [],\r\n  targetName: 'Leila',\r\n  correct: 0,\r\n  ncorrect: 0,\r\n  correctMinimum: 2,\r\n  gameEndState: null,\r\n  score: 0,\r\n  startedTimestamp: new Date(Date.now()),\r\n  elapsedTime: null,\r\n  back: false,\r\n  spokenCharacters: [],\r\n})\r\n\r\nexport default initialState\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport RoomSelect from \"../../_components/RoomSelect\";\r\nimport Sala from \"../../_components/Sala\";\r\nimport Character from \"../../_components/Character\";\r\nimport AcusationLamp from \"../../_components/AcusationLamp\";\r\nimport Conversa from \"../../_components/Conversa\";\r\nimport DialogCharacter from \"../../_components/DialogCharacter\";\r\nimport FullscreenOverlay from \"../../_components/FullscreenOverlay\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport initialState from \"./initialState\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {\r\n  iconVitoriaPers,\r\n  iconVitoriaPrim,\r\n  iconDerrota,\r\n  iconDicas,\r\n  blobAzul,\r\n  blobLaranja,\r\n  blobVerde,\r\n  dedao,\r\n  palma,\r\n  bloco,\r\n  blocoButton,\r\n} from \"../../img\";\r\n\r\nimport \"./index.scss\";\r\nimport \"./tela-acusacao.scss\";\r\nimport \"./tela-fim-jogo.scss\";\r\nimport \"./tela-tutorial.scss\";\r\n\r\nconst Game2 = (props) => {\r\n  const [state, setState] = React.useState(initialState());\r\n\r\n  const id = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n  let error = useSelector((state) => state.missions.error);\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  const missionData = mission ? mission.missionData : null;\r\n  const loading = useSelector((state) => state.missions.loading);\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const hasPlayed = useSelector((state) =>\r\n    state.game.items.resultsCount ? state.game.items.resultsCount > 0 : false\r\n  );\r\n  const dialogInitialState = {\r\n    dialogHistory: [],\r\n    dialogStep: 0,\r\n    correct: 0,\r\n    characterFeeling: \"init\",\r\n    preSpeech: null,\r\n    convOptions: [],\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (mission) dispatch(musicActions.set(mission.backgroundAudio.url));\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  // check if user already played the game\r\n  React.useEffect(() => {\r\n    let updatedState = {};\r\n    if (mission && !state.checkedPlayed) {\r\n      dispatch(\r\n        gameActions.find(\"results/count\", {\r\n          user: userId,\r\n          mission: mission.id,\r\n        })\r\n      );\r\n      updatedState.checkedPlayed = true;\r\n    }\r\n\r\n    if (hasPlayed) setState({ ...state, ...updatedState, hasPlayed });\r\n\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, hasPlayed]);\r\n\r\n  //track player actions\r\n  React.useEffect(() => {\r\n    if ((mission && !mission.trackPlayerInput) || !currentPlaySession) return;\r\n\r\n    const getClickedObject = (e) => {\r\n      dispatch(\r\n        play_sessionsActions.update(\r\n          { id: currentPlaySession.id,\r\n            data: {\r\n              actions:\r\n              [...currentPlaySession.data.actions,\r\n                {\r\n                  tag: e.target.nodeName,\r\n                  src: e.target.src,\r\n                  alt: e.target.alt,\r\n                  className: e.target.className,\r\n                  class: e.target.class,\r\n                  id: e.target.id,\r\n                  innerHTML: e.target.innerHTML.includes(\"<div\")\r\n                    ? null\r\n                    : e.target.innerHTML,\r\n                  clickTime: new Date(),\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        )\r\n      );\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", getClickedObject);\r\n\r\n    setState((s) => {\r\n      return { ...s, currentPlaySession, getClickedObject };\r\n    });\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", getClickedObject);\r\n    };\r\n  }, [dispatch, play_sessionsActions, state.tracking, currentPlaySession]);\r\n  /*//Testing tool\r\n\tif(error){\r\n\t\terror = null\r\n\t\tmission = stub\r\n\t}\r\n\t*/\r\n\r\n  //Randomizar personagens para aparecer nas salas\r\n  //\tEnquanto houver personagens na lista de personagens disponíveis\r\n  //\t\tEscolhe um local ao acaso\r\n  //\t\tEscolhe um personagem dentre a lista de personagens disponíveis ao acaso\r\n  //\t\tAdiciona personagem ao local\r\n  //\t\tRetira personagem da lista de personagens disponíveis\r\n\r\n  React.useEffect(() => {\r\n    if (missionData && state.locations.length === 0) {\r\n      // safe copies\r\n      let availableCharacters = missionData.missionCharacters.slice(0);\r\n      let locations = missionData.locations.map((location) => {\r\n        delete location.characters;\r\n        return { location: location, missionCharacters: [] };\r\n      });\r\n\r\n      let tutorialRoom = missionData.tutorial;\r\n\r\n      //distribute on locations\r\n      while (availableCharacters.length > 0) {\r\n        // sorteia sala aleatoriamente com pesos que diminuem dependendo de quantos personagens já se tem\r\n        let totalWeight = 0;\r\n        let crowdestRoomPop = 0;\r\n        let emptiestRoomPop = 999;\r\n        const minPerRoom = 1;\r\n        const maxPerRoom = 5;\r\n        locations.forEach((location) => {\r\n          crowdestRoomPop = Math.max(\r\n            location.missionCharacters.length,\r\n            crowdestRoomPop\r\n          );\r\n          emptiestRoomPop = Math.min(\r\n            location.missionCharacters.length,\r\n            emptiestRoomPop\r\n          );\r\n        });\r\n\r\n        const maxWeight = (() => {\r\n          if (emptiestRoomPop < minPerRoom) return minPerRoom;\r\n          else if (emptiestRoomPop < maxPerRoom) return maxPerRoom;\r\n          else return crowdestRoomPop + 1;\r\n        })();\r\n\r\n        totalWeight = 0;\r\n        const weights = locations.map((location) => {\r\n          let weight = maxWeight - location.missionCharacters.length;\r\n          totalWeight += weight;\r\n          return weight;\r\n        });\r\n\r\n        let rand = Math.floor(Math.random() * totalWeight);\r\n        let i = 0;\r\n        while (rand >= 0) rand -= weights[i++];\r\n        const locationIndex = i - 1;\r\n\r\n        //each character has some good and bad questions that can be asked\r\n        let availableAnswers = [...availableCharacters[0].answers];\r\n        let correct = availableAnswers.filter(\r\n          (answer) => answer.question.correct\r\n        );\r\n        let ncorrect = availableAnswers.filter(\r\n          (answer) => !answer.question.correct\r\n        );\r\n\r\n        let selectedQuestions = [];\r\n        // ? E se correct/ncorrect não tiveram a quantidade necessária de perguntas?\r\n        while (selectedQuestions.length < 6) {\r\n          let source = selectedQuestions.length % 2 === 0 ? correct : ncorrect;\r\n          let index = Math.floor(Math.random(0, source.length));\r\n          selectedQuestions.push(source[index]);\r\n          source.splice(index, 1);\r\n        }\r\n\r\n        // Aleatorizando para que nem sempre venham as perguntas na ordem certo->errado\r\n        if (Math.floor(Math.random(0, 1) < 0.5)) {\r\n          let temp = selectedQuestions[0];\r\n          selectedQuestions[0] = selectedQuestions[1];\r\n          selectedQuestions[1] = temp;\r\n        }\r\n        if (Math.floor(Math.random(0, 1) > 0.5)) {\r\n          let temp = selectedQuestions[2];\r\n          selectedQuestions[2] = selectedQuestions[3];\r\n          selectedQuestions[3] = temp;\r\n        }\r\n\r\n        locations[locationIndex].missionCharacters = [\r\n          ...locations[locationIndex].missionCharacters,\r\n          {\r\n            ...availableCharacters[0],\r\n            selectedQuestions,\r\n            zDepth: Math.random(),\r\n          },\r\n        ];\r\n\r\n        availableCharacters.splice(0, 1);\r\n      }\r\n\r\n      // Aleatorizando ordem dos personagens em cada sala\r\n      for (let i = 0; i < locations.length; i++) {\r\n        let amountChars = locations[i].missionCharacters.length;\r\n        if (amountChars <= 1) continue;\r\n        for (let j = 0; j < amountChars - 1; j++) {\r\n          let exchangeWith = Math.floor(Math.random() * (amountChars - j)) + j;\r\n          if (j === exchangeWith) continue; // Não precisa trocar se for consigo mesmo\r\n          //swap\r\n          let aux = locations[i].missionCharacters[j];\r\n          locations[i].missionCharacters[j] =\r\n            locations[i].missionCharacters[exchangeWith];\r\n          locations[i].missionCharacters[exchangeWith] = aux;\r\n        }\r\n      }\r\n      const tipsCount =\r\n        missionData.missionCharacters.filter((missionCharacter) => {\r\n          return missionCharacter.tip;\r\n        }).length + 1;\r\n      setState((state) => {\r\n        return { ...state, locations, tutorialRoom, tipsCount };\r\n      });\r\n    }\r\n  }, [missionData, state.locations]);\r\n\r\n  const onStartGame = (e) => {\r\n    if (mission.trackPlayerInput) {\r\n      dispatch(\r\n        play_sessionsActions.create({\r\n          user: userId,\r\n          mission: mission.id,\r\n          data:{actions:[]}\r\n        })\r\n      );\r\n    }\r\n    //check if should start or skip tutorial\r\n    setState({ ...state, scene: \"TUTORIAL\" });\r\n  };\r\n\r\n  const endTutorial = () => {\r\n    let updateState = {\r\n      showConvo: false,\r\n      currentChar: null,\r\n      scene: \"ROOM\",\r\n      ...dialogInitialState,\r\n    };\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const setTutorialCharacter = (tutorialCharacter) => () => {\r\n    setState({\r\n      ...state,\r\n      tutorialStep: state.tutorialStep + 1,\r\n      showConvo: true,\r\n      currentChar: tutorialCharacter.character,\r\n      convOptions: tutorialCharacter.answers.map((answer) => {\r\n        return {\r\n          ...answer,\r\n          answer: answer.answer.split(\";\"),\r\n        };\r\n      }),\r\n    });\r\n  };\r\n\r\n  //shows only selected questions\r\n  const setCurrentCharacter = (character) => () => {\r\n    setState({\r\n      ...state,\r\n      showConvo: true,\r\n      currentChar: character,\r\n      dialogStep: 0,\r\n      convOptions: state.locations[state.currentRoom].missionCharacters\r\n        .find((c) => c.character.id === character.character.id)\r\n        .selectedQuestions.slice(0, state.questionsByStep),\r\n    });\r\n  };\r\n\r\n  const closeDialog = (dialogHistory) => {\r\n    setState({\r\n      ...state,\r\n      ...dialogInitialState,\r\n      showConvo: false,\r\n      shouldCloseConvo: false,\r\n      currentChar: null,\r\n    });\r\n  };\r\n\r\n  const afterWriter = () => {\r\n    if (state.scene === \"TUTORIAL\") {\r\n      setTimeout(() => {\r\n        setState({\r\n          ...state,\r\n          tutorialStep: state.tutorialStep + 1,\r\n        });\r\n      }, 1500);\r\n    } else {\r\n      let updateState = {};\r\n      if (state.dialogStep < state.totalDialogSteps) {\r\n        updateState.convOptions = state.locations[\r\n          state.currentRoom\r\n        ].missionCharacters\r\n          .find((mc) => mc.character.id === state.currentChar.character.id)\r\n          .selectedQuestions.slice(\r\n            state.questionsByStep * state.dialogStep,\r\n            state.questionsByStep * (state.dialogStep + 1)\r\n          );\r\n      } else if (state.dialogStep === state.totalDialogSteps) {\r\n        if (state.correct < state.correctMinimum) {\r\n          updateState.preSpeech = state.currentChar.wrongEndAnswer;\r\n          updateState.convOptions = [\r\n            { refresh: true, question: { question: \"Sim\" } },\r\n            {\r\n              close: true,\r\n              question: { question: \"Não\" },\r\n              answer: state.currentChar.endDialog,\r\n            },\r\n          ];\r\n        } else {\r\n          updateState.convOptions = [\r\n            {\r\n              tip: state.currentChar.tip,\r\n              question: {\r\n                question: \"Estou procurando alguém. Você pode me ajudar?\",\r\n              },\r\n              answer: state.currentChar.rightEndAnswer,\r\n              correct: true,\r\n            },\r\n          ];\r\n        }\r\n      } else {\r\n        const tchaus = [\r\n          \"Ah tá, tchau!\",\r\n          \"Ok. Valeu!\",\r\n          \"Tchau!\",\r\n          \"Até mais!\",\r\n          \"Entendi... Muito obrigado!\",\r\n          \"Até logo!\",\r\n          \"Até a próxima!\",\r\n        ];\r\n        const rIdx = Math.floor(Math.random() * tchaus.length);\r\n        updateState.convOptions = [\r\n          {\r\n            close: true,\r\n            question: { question: tchaus[rIdx], correct: true },\r\n            answer: state.currentChar.endDialog,\r\n          },\r\n        ];\r\n      }\r\n      if (state.closeAfterWritter) {\r\n        delete state.closeAfterWritter;\r\n        updateState.convOptions = [];\r\n        updateState.shouldCloseConvo = true;\r\n      }\r\n      setState({ ...state, ...updateState });\r\n    }\r\n  };\r\n\r\n  const onRefreshDialog = () => {\r\n    setState({\r\n      ...state,\r\n      ...dialogInitialState,\r\n      refreshDialog: null,\r\n      convOptions: state.locations[state.currentRoom].missionCharacters\r\n        .find((c) => c.character.id === state.currentChar.character.id)\r\n        .selectedQuestions.slice(0, state.questionsByStep),\r\n    });\r\n  };\r\n\r\n  const onMenuButtonClick = (answer) => {\r\n    let updateState = {};\r\n\r\n    if (answer.tip && state.tips.indexOf(answer.tip) === -1)\r\n      updateState = { ...updateState, tips: [...state.tips, answer.tip] };\r\n\r\n    if (answer.refresh)\r\n      updateState = { ...updateState, refreshDialog: onRefreshDialog };\r\n    else if (answer.close)\r\n      updateState = { ...updateState, closeAfterWritter: true };\r\n    else {\r\n      if (state.scene === \"TUTORIAL\") {\r\n        updateState = {\r\n          ...updateState,\r\n          characterFeeling: \"wrongQuestion\",\r\n          convOptions: [],\r\n        };\r\n      } else {\r\n        updateState = {\r\n          ...updateState,\r\n          spokenCharacters: state.spokenCharacters,\r\n          validQuestions: state.validQuestions,\r\n          characterFeeling: null,\r\n        };\r\n        if (\r\n          updateState.spokenCharacters.indexOf(\r\n            state.currentChar.character.name\r\n          ) === -1\r\n        )\r\n          updateState.spokenCharacters.push(state.currentChar.character.name);\r\n\r\n        //change character face\r\n        if (answer.correct) {\r\n          if (updateState.validQuestions.hasOwnProperty(answer.question)) {\r\n            updateState.validQuestions[answer.question]++;\r\n          } else {\r\n            updateState.validQuestions[answer.question] = 0;\r\n          }\r\n          updateState.characterFeeling = \"rightQuestion\";\r\n        } else {\r\n          updateState.characterFeeling = \"wrongQuestion\";\r\n        }\r\n      }\r\n\r\n      updateState = {\r\n        ...updateState,\r\n        dialogStep: state.dialogStep + 1,\r\n        correct: state.correct + (answer.correct ? 1 : 0),\r\n      };\r\n    }\r\n\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const checkEnd = () => {\r\n    setState({\r\n      ...state,\r\n      acusation: false,\r\n      scene: \"ENDGAME\",\r\n      gameEndState: state.currentChar.character.name === state.targetName,\r\n      characterFeeling:\r\n        state.currentChar.character.name === state.targetName\r\n          ? \"rightAccusation\"\r\n          : \"wrongAccusation\",\r\n      currentChar: null,\r\n    });\r\n\r\n    //aqui\r\n    dispatch(\r\n      gameActions.create(\"results\", {\r\n        user: userId,\r\n        mission: mission.id,\r\n        score: state.score,\r\n        tipsCount: state.tips.length,\r\n        spokenCharactersCount: state.spokenCharacters.length,\r\n        won: state.gameEndState,\r\n        validQuestionsCount: Object.keys(state.validQuestions).length,\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n  };\r\n\r\n  const tutorialScreen = (id) => {\r\n    return (\r\n      <div id=\"room-itself\" className=\"tutorial\">\r\n        <Sala roomData={state.tutorialRoom.location} key={-1}>\r\n          <Character\r\n            character={state.tutorialRoom.character}\r\n            onClick={setTutorialCharacter(state.tutorialRoom)}\r\n          />\r\n          <div className=\"abs-fix\">\r\n            <div id=\"tutorial-popup-1\">\r\n              <span lang=\"pt-br\">\r\n                Selecione alguém para conversar e te ajudar a encontrar o seu\r\n                guia.\r\n              </span>\r\n              <span lang=\"en\">\r\n                Select someone to talk and help you find your guide.\r\n              </span>\r\n              {hasPlayed ? (\r\n                <button\r\n                  className=\"btn btn-center\"\r\n                  id=\"btn-tutorial\"\r\n                  onClick={() => {\r\n                    setState({ ...state, scene: \"ROOM\" });\r\n                  }}\r\n                >\r\n                  Skip tutorial\r\n                </button>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </Sala>\r\n        {state.showConvo && (\r\n          <Conversa\r\n            onExited={() => {\r\n              setState({\r\n                ...state,\r\n                showConvo: false,\r\n                tutorialStep: state.tutorialStep - 1,\r\n              });\r\n            }}\r\n            convOptions={state.convOptions.reduce((acc, convOption) => {\r\n              let option = {\r\n                ...convOption,\r\n                answers: convOption.answer,\r\n                question: convOption.question.question,\r\n              };\r\n              delete option.answer;\r\n              return [...acc, option];\r\n            }, [])}\r\n            currentChar={state.currentChar}\r\n            charFeeling={state.characterFeeling}\r\n            afterWriter={afterWriter}\r\n            onConvoChoiceMade={onMenuButtonClick}\r\n          />\r\n        )}\r\n        {id === 2 && (\r\n          <div id=\"tutorial-popup-2-wrapper\">\r\n            <div id=\"tutorial-popup-2-content\">\r\n              <span lang=\"pt-br\">\r\n                <strong>Lembre-se:</strong> As pessoas estão ocupadas em seus\r\n                ambientes de trabalho, então tenha certeza de não gastar o tempo\r\n                delas com perguntas fora de contexto!\r\n              </span>\r\n              <span lang=\"en\">\r\n                <strong>Remember:</strong> People are busy in their workplaces,\r\n                so be sure not to waste their times with question that are out\r\n                of yout context!\r\n              </span>\r\n              <button\r\n                className=\"btn btn-center\"\r\n                id=\"btn-end-tutorial\"\r\n                onClick={endTutorial}\r\n              >\r\n                Continuar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(true, true) });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  return (\r\n    <div id=\"game2-wrapper\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        mission && (\r\n          <div id=\"game2-content\">\r\n            {/*<div id=\"input-tracker\">TrackInput: <input type=\"checkbox\" onChange={(e) => { setState({ ...state, tracking: e.target.checked }) }} /></div>*/}\r\n            {(function renderScene() {\r\n              // eslint-disable-next-line default-case\r\n              switch (state.scene) {\r\n                case \"INIT\":\r\n                  return (\r\n                    <Init\r\n                      icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                      name={mission.name}\r\n                      description={mission.description}\r\n                      nameTranslate={\r\n                        mission.nameTranslate.find((name) => {\r\n                          return name.language.id === lang;\r\n                        }).name\r\n                      }\r\n                      descriptionTranslate={\r\n                        mission.descriptionTranslate.find((description) => {\r\n                          return description.language.id === lang;\r\n                        }).description\r\n                      }\r\n                      onStart={onStartGame}\r\n                      onBack={() => setState({ ...state, back: true })}\r\n                      ready={state.tutorialRoom ? true : false}\r\n                    />\r\n                  );\r\n                case \"TUTORIAL\":\r\n                  return tutorialScreen(state.tutorialStep);\r\n                case \"ROOM\":\r\n                  return (\r\n                    <div id=\"room-itself\">\r\n                      <RoomSelect\r\n                        buttonList={state.locations.map(\r\n                          (location, index) => index\r\n                        )}\r\n                        onChange={(num) => {\r\n                          setState({ ...state, currentRoom: num });\r\n                        }}\r\n                      />\r\n                      {/* //? Pq sala recebe a location inteira? Se ela só precisa saber a imagem de fundo,\r\n\t\t\t\t\t\t\t\t\t\t//? pq passar tudo ao invés de só passar a string? Que aí poderia ser local ou na rede... */}\r\n                      {state.showTips ? (\r\n                        <FullscreenOverlay\r\n                          style={{ zIndex: 100 }}\r\n                          onClickClose={() =>\r\n                            setState({ ...state, showTips: false })\r\n                          }\r\n                        >\r\n                          <div>\r\n                            <div id=\"big-phone-wrapper\">\r\n                              <div id=\"big-phone-imgs\">\r\n                                <img src={palma} alt=\"hand\" />\r\n                                <img\r\n                                  style={{ marginLeft: \"22.5%\" }}\r\n                                  src={bloco}\r\n                                  alt=\"note\"\r\n                                />\r\n                                <img src={dedao} alt=\"thumb\" />\r\n                              </div>\r\n                              <div id=\"big-phone-screen-wrapper\">\r\n                                <div\r\n                                  id=\"big-phone-screen-content\"\r\n                                  className=\"section-title\"\r\n                                >\r\n                                  <span lang=\"pt-br\">Dicas:</span>\r\n                                  <div>\r\n                                    {state.tips.map((tip, index) => (\r\n                                      <div\r\n                                        key={index}\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          padding: \"10%\",\r\n                                          width: \"100%\",\r\n                                        }}\r\n                                      >\r\n                                        <div>{tip}</div>\r\n                                        <hr />\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </FullscreenOverlay>\r\n                      ) : (\r\n                        <Button\r\n                          style={{ position: \"absolute\" }}\r\n                          onClick={() => setState({ ...state, showTips: true })}\r\n                        >\r\n                          <img\r\n                            style={{ width: 90 }}\r\n                            src={blocoButton}\r\n                            alt=\"tips\"\r\n                          />\r\n                        </Button>\r\n                      )}\r\n                      <Sala\r\n                        roomData={state.locations[state.currentRoom].location}\r\n                        key={state.currentRoom}\r\n                      >\r\n                        {state.locations[\r\n                          state.currentRoom\r\n                        ].missionCharacters.map((missionCharacter, index) => (\r\n                          <Character\r\n                            key={index}\r\n                            zDepth={missionCharacter.zDepth}\r\n                            character={missionCharacter.character}\r\n                            onClick={setCurrentCharacter(missionCharacter)}\r\n                            // showNameOnHover={true} descomentar linha se quiser que os nomes dos personagens apareça sob hover do mouse\r\n                          />\r\n                        ))}\r\n                      </Sala>\r\n                      {state.showConvo && (\r\n                        <Conversa\r\n                          shouldExit={state.shouldCloseConvo}\r\n                          prevDialogHistory={[]}\r\n                          onClearDialogHistory={state.refreshDialog}\r\n                          charPreSpeech={state.preSpeech}\r\n                          convOptions={state.convOptions.reduce(\r\n                            (acc, convOption) => {\r\n                              let option = {\r\n                                ...convOption,\r\n                                ...convOption.question,\r\n                                answers: convOption.answer,\r\n                              };\r\n                              delete option.answer;\r\n                              return [...acc, option];\r\n                            },\r\n                            []\r\n                          )}\r\n                          currentChar={state.currentChar.character}\r\n                          charFeeling={state.characterFeeling}\r\n                          afterWriter={afterWriter}\r\n                          onExited={closeDialog}\r\n                          onConvoChoiceMade={onMenuButtonClick}\r\n                        >\r\n                          <AcusationLamp\r\n                            onClick={() =>\r\n                              setState({ ...state, acusation: true })\r\n                            }\r\n                          />\r\n                        </Conversa>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                case \"ENDGAME\":\r\n                  return (\r\n                    <div id=\"endGame-screen\">\r\n                      {state.gameEndState ? (\r\n                        <div id=\"end-panels\">\r\n                          <div id=\"painel-icon\">\r\n                            <img\r\n                              src={\r\n                                state.tries === 0\r\n                                  ? iconVitoriaPrim\r\n                                  : iconVitoriaPers\r\n                              }\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div id=\"endgame-messages\">\r\n                            {state.tries === 0 ? (\r\n                              <div className=\"painel\" id=\"painel-1\">\r\n                                <div className=\"painel-1-wrapper\">\r\n                                  <div className=\"painel-1-content\">\r\n                                    <span lang=\"pt-br\">\r\n                                      Muito bem! Você encontrou a pessoa na\r\n                                      primeira tentativa. Vai arrasar na sua\r\n                                      nova carreira!\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      Well done! You have found the right person\r\n                                      on your first try. You're going to rock on\r\n                                      your new career!\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                                <a href=\"#painel-2\" className=\"next-btn\">\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"painel\" id=\"painel-1\">\r\n                                <div className=\"painel-1-wrapper\">\r\n                                  <div className=\"painel-1-content\">\r\n                                    <span lang=\"pt-br\">\r\n                                      Você encontrou a pessoa certa! Parabéns!\r\n                                    </span>\r\n                                    <span lang=\"en\">\r\n                                      You have found the right person! Congrats!\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                                <a href=\"#painel-2\" className=\"next-btn\">\r\n                                  {\"❯\"}\r\n                                </a>\r\n                              </div>\r\n                            )}\r\n                            <div className=\"painel\" id=\"painel-2\">\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage:\r\n                                      \"url(\" +\r\n                                      (state.tips.length === state.tipsCount\r\n                                        ? blobAzul\r\n                                        : blobVerde) +\r\n                                      \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.tips.length ?? 0}</span>/\r\n                                    <span>{state.tipsCount}</span>\r\n                                  </div>\r\n                                  <div>clues</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div className=\"painel-2-content\">\r\n                                  <div>\r\n                                    <p>\r\n                                      After talking to{\" \"}\r\n                                      {state.spokenCharacters.length} people,\r\n                                      you found {state.tips.length} of the{\" \"}\r\n                                      {state.tipsCount} existing clues.\r\n                                    </p>\r\n                                    <p>\r\n                                      Regarding the questions you asked,{\" \"}\r\n                                      {Object.keys(state.validQuestions).length}{\" \"}\r\n                                      of them were useful.\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <a href=\"#painel-1\" className=\"prev-btn\">\r\n                                {\"❮\"}\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div id=\"endGame-wrong-wrapper\">\r\n                          <div>\r\n                            <div className=\"painel\" id=\"painel-1\">\r\n                              <div id=\"painel-icon-derrota\">\r\n                                <img src={iconDerrota} alt=\"\" />\r\n                              </div>\r\n                              <span lang=\"pt-br\">\r\n                                Você ainda não encontrou a pessoa certa. Como\r\n                                você vai entender o que deve ser feito em seu\r\n                                novo trabalho? Você ainda precisa descobrir\r\n                                algumas dicas.\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                You still haven't found the right person. How\r\n                                will you understand what has to be done in your\r\n                                new job? There are clues yet to be found.\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"painel\" id=\"painel-3\">\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div\r\n                                  className=\"painel-2-content\"\r\n                                  style={{\r\n                                    backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                                  }}\r\n                                >\r\n                                  <div>\r\n                                    <span>{state.tips.length ?? 0}</span>/\r\n                                    <span>{state.tipsCount}</span>\r\n                                  </div>\r\n                                  <div>clues</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"painel-2-wrapper\">\r\n                                <div className=\"painel-2-content\">\r\n                                  <div>\r\n                                    <p>\r\n                                      After talking to{\" \"}\r\n                                      {state.spokenCharacters.length} people,\r\n                                      you found {state.tips.length} of the{\" \"}\r\n                                      {state.tipsCount} existing clues.\r\n                                    </p>\r\n                                    <p>\r\n                                      Regarding the questions you asked,{\" \"}\r\n                                      {Object.keys(state.validQuestions).length}{\" \"}\r\n                                      of them were useful. Try asking more\r\n                                      relevant questions!\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div id=\"endGame-action-btns\">\r\n                            <Button onClick={restart}>Tentar novamente</Button>\r\n                            <Button\r\n                              onClick={() => setState({ ...state, back: true })}\r\n                            >\r\n                              Sair do jogo\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {state.gameEndState && (\r\n                        <DialogCharacter\r\n                          character={\r\n                            missionData.missionCharacters.find((mc) => {\r\n                              return mc.character.name === state.targetName;\r\n                            }).character\r\n                          }\r\n                          feeling={\"win\"}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  );\r\n              }\r\n            })()}\r\n            {state.acusation && (\r\n              <FullscreenOverlay\r\n                showCloseBtn={false}\r\n                shouldExit={state.closeAcusation}\r\n                onReadyToExit={() => {\r\n                  setState({\r\n                    ...state,\r\n                    closeAcusation: false,\r\n                    acusation: false,\r\n                  });\r\n                }}\r\n              >\r\n                <div id=\"dialog-accusation-wrapper\">\r\n                  <div id=\"dialog-accusation\">\r\n                    <div id=\"accusation-infos\">\r\n                      <div>\r\n                        <span lang=\"pt-br\">Tem certeza?</span>\r\n                        <span lang=\"en\">\r\n                          Are you sure it's them?\r\n                          <br />\r\n                          Check your tips.\r\n                        </span>\r\n                      </div>\r\n                      <div id=\"tips-received\">\r\n                        <div id=\"accusation-icon\">\r\n                          <img src={iconDicas} alt=\"\" />\r\n                        </div>\r\n                        {state.tips.length > 0 ? (\r\n                          state.tips.map((tip, index) => (\r\n                            <div key={index}>{tip}</div>\r\n                          ))\r\n                        ) : (\r\n                          <div>Nenhuma dica recebida.</div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div id=\"accusation-btns\">\r\n                      <Button\r\n                        onClick={() =>\r\n                          setState({ ...state, closeAcusation: true })\r\n                        }\r\n                      >\r\n                        Não\r\n                      </Button>\r\n                      <Button onClick={checkEnd}>Sim</Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </FullscreenOverlay>\r\n            )}\r\n          </div>\r\n        )\r\n      )}\r\n      {state.back && <Redirect to=\"/userspace\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game2;\r\n","const initialState = (checkedPlayed) => {\r\n  return {\r\n    scene: \"INIT\",\r\n    cart: [],\r\n    tutorialRoom: {},\r\n    recipe: {},\r\n    ingredientsList: [],\r\n    aisles: [],\r\n    currentAisle: 0,\r\n    checkout: false,\r\n    onPayment: false,\r\n    payment: [],\r\n    win: false,\r\n    change: null,\r\n    runTimer: true,\r\n    reaminingTime: 0,\r\n    checkedPlayed: checkedPlayed,\r\n    moneySelection: false,\r\n  };\r\n};\r\n\r\nexport default initialState;\r\n","import React from \"react\";\r\nimport { zeroFill } from \"../../_helpers\";\r\n\r\nconst Timer = ({ seconds, onEnd, onStop, run = true }) => {\r\n  const [state, setState] = React.useState({\r\n    seconds: seconds,\r\n    timeout: null,\r\n    sentRemaning: false,\r\n  });\r\n  const previousRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (state === previousRef.current && state.seconds !== seconds) {\r\n      //console.log('external side effect update')***\r\n      return;\r\n    }\r\n\r\n    if (!run && !state.sentRemaning) {\r\n      onStop(state.seconds);\r\n      setState({ ...state, sentRemaning: true });\r\n    } else if (run && state.sentRemaning)\r\n      setState({ ...state, sentRemaning: false });\r\n\r\n    if (!run) {\r\n      return state.timeout ? () => clearTimeout(state.timeout) : null;\r\n    }\r\n\r\n    if (state.seconds === 0) {\r\n      if (onEnd) onEnd(state.seconds);\r\n    } else if (state.seconds > 0) {\r\n      previousRef.current = state;\r\n      let timeout = setTimeout(() => {\r\n        setState({ seconds: state.seconds - 1, timeout: timeout });\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(state.timeout);\r\n    }\r\n  }, [state, onEnd, onStop, run, seconds]);\r\n\r\n  return (\r\n    <div>\r\n      {zeroFill(Math.floor(state.seconds / 60).toString(), 2)}:\r\n      {zeroFill((state.seconds % 60).toString(), 2)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n\r\n/***\r\n    Internal setState causes Timer component to update.\r\n    onSecondPassed may cause an external setState, leading to an update which could reupdate Timer component.\r\n\r\n    To prevent useEffect of entering the if statement responsable for setTimeout call, which leads to double that frame setTimeout callback,\r\n    previous state is compared to the new state.\r\n\r\n    In the first run, new state is in fact equal to current state.\r\n    In this case, the entering seconds value is verified.\r\n*/\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nimport { shelf } from \"../../img\";\r\n\r\nconst Aisle = ({ products, addProduct, toPreviousAisle, toNextAisle }) => {\r\n  // const [state, setState] = React.useState({ seconds: seconds, timeout: null });\r\n\r\n  return (\r\n    <div className=\"aisle-div\">\r\n      <img\r\n        src={shelf}\r\n        alt=\"\"\r\n        style={{ position: \"absolute\", zIndex: -1, width: \"60vw\" }}\r\n      />\r\n      <div id=\"shelves\">\r\n        {products.map((product) => (\r\n          <div className=\"products\">\r\n            {[...Array(10)].map(() => (\r\n              <div\r\n                onClick={addProduct(product.name)}\r\n                className=\"tooltip\"\r\n                style={{\r\n                  backgroundImage: \"url(\" + product.image + \")\",\r\n                  backgroundSize: \"cover\",\r\n                  height: 60,\r\n                  width: 60,\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  backgroundPosition: \"center\",\r\n                  overflow: \"show\",\r\n                }}\r\n              >\r\n                <span className=\"tooltiptext\">{product.tooltip}</span>\r\n              </div>\r\n            ))}\r\n\r\n            <span>{product.tag}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"Voltar\" onClick={toPreviousAisle}>\r\n        {\"<\"}\r\n      </button>\r\n\r\n      <button className=\"Avançar\" onClick={toNextAisle}>\r\n        {\">\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Aisle;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nimport DialogCharacter from \"../../../../_components/DialogCharacter\";\r\n\r\nimport { ingredientsListRotated, kitchen } from \"../../../../img\";\r\n\r\nconst Intro = ({ chef, recipe, ingredientsList, goToTutorial }) => {\r\n  const [state, setState] = React.useState({ screen: 0 });\r\n\r\n  return (\r\n    <div id=\"room-itself\" className=\"intro\">\r\n      {state.screen === 0 && (\r\n        <div\r\n          id=\"dialog-interact\"\r\n          style={{\r\n            backgroundImage: \"url(\" + { kitchen } + \")\",\r\n          }}\r\n        >\r\n          <div id=\"dialogos\">\r\n            <div id=\"dialog-box\">\r\n              <span lang=\"pt-br\">\r\n                Faça as compras da lista antes do tempo acabar! No episódio de\r\n                hoje, vamos ter o desafio de preparar {recipe.name}!!\r\n              </span>\r\n              <span lang=\"en\">\r\n                Shop for the items in the list before the time is up! In today's\r\n                episode, we'll face the challenge of preparing{\" \"}\r\n                {recipe.nameTranslate}!!\r\n              </span>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-center\"\r\n              id=\"btn-end-tutorial\"\r\n              onClick={() => setState({ screen: 1 })}\r\n            >\r\n              Continuar\r\n            </button>\r\n          </div>\r\n          <DialogCharacter character={chef} feeling=\"init\" />\r\n        </div>\r\n      )}\r\n\r\n      {state.screen === 1 && (\r\n        <div id=\"dialog-interact\">\r\n          <img src={recipe.image} alt=\"\" />\r\n          <div id=\"dialogos\">\r\n            <div id=\"dialog-box\">\r\n              <span lang=\"pt-br\">{recipe.description}</span>\r\n              <span lang=\"en\">{recipe.descriptionTranslate}</span>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-center\"\r\n              id=\"btn-end-tutorial\"\r\n              onClick={() => setState({ screen: 2 })}\r\n            >\r\n              Continuar\r\n            </button>\r\n          </div>\r\n          <DialogCharacter character={chef} feeling=\"init\" />\r\n        </div>\r\n      )}\r\n\r\n      {state.screen === 2 && (\r\n        <div className=\"intro-recipe\">\r\n          <div>\r\n            <img src={recipe.image} alt=\"\" />\r\n            <span>{recipe.name}</span>\r\n            <button\r\n              className=\"btn btn-center\"\r\n              id=\"btn-end-tutorial\"\r\n              onClick={goToTutorial}\r\n            >\r\n              Continuar\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"ingredients-list\">\r\n            <img src={ingredientsListRotated} alt=\"\" />\r\n            <div className=\"rotated ingredients\">\r\n              {ingredientsList.map((ingredient, index) => (\r\n                <div className=\"ingredient\">\r\n                  <img src={ingredient.image} alt=\"\" />\r\n                  <span>{ingredient.description}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport DialogCharacter from \"../../../../_components/DialogCharacter\";\r\nimport Aisle from \"../../../../_components/Aisle\";\r\n\r\nimport {\r\n  hourglassFull,\r\n  cart,\r\n  checkout,\r\n  ingredientsListBg,\r\n  listCheck,\r\n  listIcon,\r\n} from \"../../../../img\";\r\nimport { zeroFill } from \"../../../../_helpers\";\r\n\r\nconst Tutorial = ({\r\n  chef,\r\n  aisle,\r\n  seconds,\r\n  shoppingCart,\r\n  ingredientsList,\r\n  hasPlayed,\r\n  addProduct,\r\n  removeProduct,\r\n  toPreviousAisle,\r\n  toNextAisle,\r\n  goToMarket,\r\n}) => {\r\n  const [state, setState] = React.useState({\r\n    step: 0,\r\n    tutorialLine: 0,\r\n    shopList: false,\r\n  });\r\n\r\n  const addProductNextLine = (product) => () => {\r\n    if (state.tutorialLine === 0) {\r\n      addProduct(product)();\r\n      setState({\r\n        ...state,\r\n        tutorialLine: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeProductNextLine = (index) => () => {\r\n    if (state.tutorialLine === 1) {\r\n      removeProduct(index)();\r\n      setState({ ...state, tutorialLine: 2 });\r\n    }\r\n  };\r\n\r\n  const toPreviousAisleNextLine = () => {\r\n    if (state.tutorialLine === 2) {\r\n      toPreviousAisle();\r\n      setState({ ...state, tutorialLine: 3 });\r\n    }\r\n  };\r\n\r\n  const toNextAisleNextLine = () => {\r\n    if (state.tutorialLine === 2) {\r\n      toNextAisle();\r\n      setState({ ...state, tutorialLine: 3 });\r\n    }\r\n  };\r\n\r\n  const shopListNextLine = () => {\r\n    console.log(state.shopList);\r\n    if (state.tutorialLine === 3 && !state.shopList)\r\n      setState({ ...state, shopList: !state.shopList });\r\n    else if (state.tutorialLine === 3 && state.shopList)\r\n      setState({ ...state, tutorialLine: 4, shopList: !state.shopList });\r\n  };\r\n\r\n  return (\r\n    <div id=\"room-itself\" className=\"tutorial\">\r\n      {state.step === 0 && (\r\n        <div>\r\n          <div\r\n            className={\r\n              \"tutorial-blob \" +\r\n              (state.tutorialLine === 2 || state.tutorialLine === 3\r\n                ? \"blob-right\"\r\n                : \"blob-left\")\r\n            }\r\n          >\r\n            {state.tutorialLine === 0 && (\r\n              <div className=\"blob-left\">\r\n                <span lang=\"pt-br\">\r\n                  Clique em qualquer item para adicioná-lo ao carrinho.\r\n                </span>\r\n                <span lang=\"en\">Click on any item to add it to your cart.</span>\r\n              </div>\r\n            )}\r\n            {state.tutorialLine === 1 && (\r\n              <div className=\"blob-left\">\r\n                <span lang=\"pt-br\">\r\n                  Clique em qualquer item do seu carrinho para retirá-lo.\r\n                </span>\r\n                <span lang=\"en\">\r\n                  Click on any item from your cart to remove it.\r\n                </span>\r\n              </div>\r\n            )}\r\n            {state.tutorialLine === 2 && (\r\n              <div className=\"blob-right\">\r\n                <span lang=\"pt-br\">\r\n                  Use as setas para navegar pelas prateleiras.\r\n                </span>\r\n                <span lang=\"en\">Use the arrows to move through shelves.</span>\r\n              </div>\r\n            )}\r\n            {state.tutorialLine === 3 && (\r\n              <div className=\"blob-right\">\r\n                <span lang=\"pt-br\">\r\n                  Passe o mouse sobre o bloco de notas para ver a lista de\r\n                  compras.\r\n                </span>\r\n                <span lang=\"en\">\r\n                  Hover the mouse over the notepad to see the shopping list.\r\n                </span>\r\n              </div>\r\n            )}\r\n            {state.tutorialLine === 4 && (\r\n              <div className=\"blob-left\">\r\n                <span lang=\"pt-br\">\r\n                  Clique no icone de dinheiro para finalizar sua compra.\r\n                </span>\r\n                <span lang=\"en\">Click on the cash icon to checkout.</span>\r\n              </div>\r\n            )}\r\n            {hasPlayed && (\r\n              <button\r\n                className=\"btn btn-center\"\r\n                id=\"btn-end-tutorial\"\r\n                onClick={goToMarket}\r\n              >\r\n                Skip tutorial\r\n              </button>\r\n            )}\r\n          </div>\r\n          <Aisle\r\n            products={aisle}\r\n            addProduct={addProductNextLine}\r\n            toPreviousAisle={toPreviousAisleNextLine}\r\n            toNextAisle={toNextAisleNextLine}\r\n          />\r\n          <div className=\"cart\">\r\n            <div className=\"cart-items\">\r\n              {shoppingCart.map((product, index) => (\r\n                <div className=\"cart-item\">\r\n                  <img\r\n                    src={\r\n                      ingredientsList.find(\r\n                        (ingredient) => ingredient.name === product.name\r\n                      ).image\r\n                    }\r\n                    alt=\"\"\r\n                    onClick={removeProductNextLine(index)}\r\n                    className=\"cart-item-img\"\r\n                  />\r\n                  <span>{product.count}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <img\r\n              src={cart}\r\n              alt=\"\"\r\n              style={{ marginTop: -50, position: \"relative\" }}\r\n            />\r\n          </div>\r\n\r\n          {state.tutorialLine > 2 && (\r\n            <img\r\n              onClick={shopListNextLine}\r\n              src={listIcon}\r\n              alt=\"\"\r\n              className=\"list-icon\"\r\n            />\r\n          )}\r\n          {state.tutorialLine === 4 && (\r\n            <img\r\n              onClick={() =>\r\n                setState({\r\n                  ...state,\r\n                  step: 1,\r\n                })\r\n              }\r\n              src={checkout}\r\n              alt=\"\"\r\n            />\r\n          )}\r\n\r\n          {state.shopList && (\r\n            <div\r\n              className=\"shop-list\"\r\n              style={{\r\n                backgroundImage: \"url(\" + ingredientsListBg + \")\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundSize: \"contain\",\r\n              }}\r\n            >\r\n              {ingredientsList.map((ingredient, index) => (\r\n                <div>\r\n                  <img\r\n                    src={listCheck}\r\n                    alt=\"\"\r\n                    className=\"shop-list-item-check\"\r\n                  />\r\n\r\n                  <img\r\n                    src={ingredient.image}\r\n                    alt=\"\"\r\n                    className=\"shop-list-item-img\"\r\n                  />\r\n                  {ingredient.description}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {state.step === 1 && (\r\n        <div id=\"dialog-interact\">\r\n          <div id=\"dialogos\">\r\n            <div id=\"dialog-box\">\r\n              <span lang=\"pt-br\">\r\n                Agora você está pronto para começar as compras! Coloque tudo que\r\n                está na lista no carrinho antes que o tempo acabe!\r\n              </span>\r\n              <span lang=\"en\">\r\n                Now you're ready to start shopping! Put everything on the list\r\n                in the cart before time runs out!\r\n              </span>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-center\"\r\n              id=\"btn-end-tutorial\"\r\n              onClick={() => setState({ step: 2 })}\r\n            >\r\n              Continuar\r\n            </button>\r\n          </div>\r\n          <DialogCharacter character={chef} feeling=\"init\" />\r\n        </div>\r\n      )}\r\n\r\n      {state.step === 2 && (\r\n        <div>\r\n          <img src={hourglassFull} alt=\"\" />\r\n          <span>Você tem</span>\r\n          <span>\r\n            {zeroFill(Math.floor(seconds / 60).toString(), 2)}:\r\n            {zeroFill((seconds % 60).toString(), 2)}\r\n          </span>\r\n          <span>minutos</span>\r\n          <button\r\n            className=\"btn btn-center\"\r\n            id=\"btn-end-tutorial\"\r\n            onClick={goToMarket}\r\n          >\r\n            Estou pronto!\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./index.scss\";\r\n\r\nimport {\r\n  goRound,\r\n  splitArrayIntoChunksOfLen,\r\n  zeroFill,\r\n  numberToMoney,\r\n  shuffle,\r\n} from \"../../_helpers\";\r\n\r\nimport {\r\n  apiActions,\r\n  gameActions,\r\n  headerActions,\r\n  musicActions,\r\n} from \"../../_actions\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport initialState from \"./initialState\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Timer from \"../../_components/Timer\";\r\nimport Aisle from \"../../_components/Aisle\";\r\nimport Intro from \"./components/Intro\";\r\nimport Tutorial from \"./components/Tutorial\";\r\nimport DialogCharacter from \"../../_components/DialogCharacter\";\r\n\r\nimport {\r\n  cart,\r\n  ingredientsListBg,\r\n  recipeBg,\r\n  listCheck,\r\n  listIcon,\r\n  checkout,\r\n  wallet,\r\n  blobLaranja,\r\n  hourglassFull,\r\n  hourglassEmpty,\r\n  cashierTable,\r\n  cashierBg,\r\n} from \"../../img\";\r\n\r\nconst Game3 = (props) => {\r\n  const [state, setState] = React.useState({ ...initialState() });\r\n  const dispatch = useDispatch();\r\n  const id = props.match.params.id;\r\n  const userId = useSelector((state) => state.authentication.user.user.id);\r\n  const lang = useSelector(\r\n    (state) => state.authentication.user.user.language.id\r\n  );\r\n\r\n  let mission = useSelector((state) =>\r\n    state.game.items.missions\r\n      ? state.game.items.missions.find(\r\n          (mission) => mission.id === props.match.params.id\r\n        )\r\n      : null\r\n  );\r\n  let missionData = mission ? mission.missionData : null;\r\n\r\n  let currentPlaySession = useSelector((state) =>\r\n    state.play_sessions ? state.play_sessions.items[0] : {}\r\n  );\r\n  const { play_sessionsActions } = apiActions;\r\n  // const { missionsActions, play_sessionsActions, player_actionsActions, user_game_resultsActions } = apiActions\r\n  const timesPlayed = useSelector((state) => state.game.items.resultsCount);\r\n\r\n  const onStartGame = () => {\r\n    setState({ ...state, scene: \"INTRO\" });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (mission) dispatch(musicActions.set(mission.backgroundAudio.url));\r\n    return () => dispatch(musicActions.set(\"\"));\r\n  }, [dispatch, mission]);\r\n\r\n  //fetch mission if doesn't already have\r\n  React.useEffect(() => {\r\n    if (!mission || !missionData) dispatch(gameActions.getById(\"missions\", id));\r\n  }, [id, mission, dispatch, missionData]);\r\n\r\n  React.useEffect(() => {\r\n    if (mission) {\r\n      if (!state.checkedPlayed) {\r\n        dispatch(\r\n          gameActions.find(\"results/count\", {\r\n            user: userId,\r\n            mission: mission.id,\r\n          })\r\n        );\r\n        setState({ ...state, checkedPlayed: true });\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [userId, mission, dispatch, state.checkedPlayed]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      missionData &&\r\n      state.ingredientsList.length === 0 &&\r\n      state.checkedPlayed\r\n    ) {\r\n      missionData.seconds =\r\n        missionData.seconds - 30 * (timesPlayed > 2 ? 2 : timesPlayed);\r\n      // safe copies\r\n      let tutorialRoom = missionData.tutorial;\r\n\r\n      let recipe =\r\n        missionData.recipes[\r\n          Math.floor(Math.random() * missionData.recipes.length)\r\n        ];\r\n\r\n      let resumeRecipe = {\r\n        id: recipe.id,\r\n        name: recipe.name,\r\n        nameTranslate: recipe.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).text,\r\n        description: recipe.description,\r\n        descriptionTranslate: recipe.descriptionTranslate.find(\r\n          (description) => {\r\n            return description.language.id === lang;\r\n          }\r\n        ).text,\r\n        image: recipe.image ? recipe.image.url : \"\",\r\n      };\r\n\r\n      let aisles;\r\n      let ingredientsList = recipe.ingredients.map((ingredient) => {\r\n        return {\r\n          name: ingredient.asset.name,\r\n          description: ingredient.description,\r\n          type: ingredient.type,\r\n          image: ingredient.asset.image ? ingredient.asset.image.url : \"\",\r\n          tag:\r\n            ingredient.measure === \"unidade\"\r\n              ? `R$ ${ingredient.price.toFixed(2)}`\r\n              : `R$ ${(\r\n                  ingredient.price *\r\n                  (100 / ingredient.unityValue)\r\n                ).toFixed(2)}/100${ingredient.measure}`,\r\n          tooltip:\r\n            ingredient.measure === \"unidade\"\r\n              ? 1\r\n              : `${ingredient.unityValue}${ingredient.measure}`,\r\n          unityValue:\r\n            ingredient.measure === \"unidade\" ? 1 : ingredient.unityValue,\r\n          quantity: ingredient.quantity,\r\n          price: ingredient.price,\r\n          shelfCount: 10,\r\n        };\r\n      });\r\n\r\n      if (missionData.separation === \"aislesCount\") {\r\n        aisles = splitArrayIntoChunksOfLen(\r\n          shuffle(ingredientsList),\r\n          missionData.aisles\r\n        );\r\n      } else {\r\n        aisles = ingredientsList.reduce((acc, ingredient) => {\r\n          acc[ingredient.type] = [...(acc[ingredient.type] || []), ingredient];\r\n          return acc;\r\n        }, {});\r\n\r\n        aisles = Object.keys(aisles).reduce((acc, aisle) => {\r\n          return [...acc, aisles[aisle]];\r\n        }, []);\r\n      }\r\n\r\n      setState((state) => {\r\n        return {\r\n          ...state,\r\n          recipe: resumeRecipe,\r\n          tutorialRoom,\r\n          aisles,\r\n          ingredientsList,\r\n        };\r\n      });\r\n    }\r\n  }, [\r\n    missionData,\r\n    state.ingredientsList,\r\n    state.checkedPlayed,\r\n    timesPlayed,\r\n    lang,\r\n  ]);\r\n\r\n  const addProduct = (product) => () => {\r\n    const index = state.cart.findIndex(\r\n      (ingredient) => ingredient.name === product\r\n    );\r\n    let cartUpdate = [...state.cart];\r\n\r\n    if (index >= 0) cartUpdate[index].count += 1;\r\n    else cartUpdate.push({ name: product, count: 1 });\r\n\r\n    setState({\r\n      ...state,\r\n      cart: cartUpdate,\r\n    });\r\n  };\r\n  const removeProduct = (index) => () => {\r\n    let cartUpdate = [...state.cart];\r\n\r\n    if (cartUpdate[index].count > 1) cartUpdate[index].count -= 1;\r\n    else\r\n      cartUpdate = [\r\n        ...state.cart.slice(0, index),\r\n        ...state.cart.slice(index + 1),\r\n      ];\r\n\r\n    setState({\r\n      ...state,\r\n      cart: cartUpdate,\r\n    });\r\n  };\r\n\r\n  const toPreviousAisle = () => {\r\n    setState({\r\n      ...state,\r\n      currentAisle: goRound(state.currentAisle - 1, state.aisles.length),\r\n    });\r\n  };\r\n\r\n  const toNextAisle = () => {\r\n    setState({\r\n      ...state,\r\n      currentAisle: goRound(state.currentAisle + 1, state.aisles.length),\r\n    });\r\n  };\r\n\r\n  const checkShoppingList = (ingredient) => {\r\n    let cartIngredient = state.cart.find(\r\n      (cartItem) => cartItem.name === ingredient.name\r\n    );\r\n    if (!cartIngredient) return false;\r\n    if (cartIngredient.count * ingredient.unityValue !== ingredient.quantity)\r\n      return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  const haveAll = () => {\r\n    for (let i = 0; i < state.ingredientsList.length; i++) {\r\n      if (!checkShoppingList(state.ingredientsList[i])) return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const moveToCheckout = () => {\r\n    setState({\r\n      ...state,\r\n      checkout: true,\r\n      checkoutConfirm: false,\r\n      price: state.cart\r\n        .reduce((acc, product) => {\r\n          return (\r\n            acc +\r\n            state.ingredientsList.find(\r\n              (ingredient) => ingredient.name === product.name\r\n            ).price *\r\n              product.count\r\n          );\r\n        }, 0)\r\n        .toFixed(2),\r\n    });\r\n  };\r\n\r\n  const addToPayment = (money) => () => {\r\n    const index = state.payment.findIndex(\r\n      (moneyObj) => moneyObj.value === money\r\n    );\r\n    let paymentUpdate = [...state.payment];\r\n\r\n    if (index >= 0) paymentUpdate[index].count += 1;\r\n    else paymentUpdate.push({ value: money, count: 1 });\r\n    setState({\r\n      ...state,\r\n      payment: paymentUpdate,\r\n    });\r\n  };\r\n\r\n  const removeFromPayment = (index) => () => {\r\n    let paymentUpdate = [...state.payment];\r\n\r\n    if (paymentUpdate[index].count > 1) paymentUpdate[index].count -= 1;\r\n    else\r\n      paymentUpdate = [\r\n        ...state.payment.slice(0, index),\r\n        ...state.payment.slice(index + 1),\r\n      ];\r\n    setState({\r\n      ...state,\r\n      payment: paymentUpdate,\r\n    });\r\n  };\r\n\r\n  const moveToPayment = () => {\r\n    setState({\r\n      ...state,\r\n      scene: \"CASHIER\",\r\n      runTimer: true,\r\n      moneySelection: true,\r\n    });\r\n  };\r\n\r\n  const doPayment = () => {\r\n    setState({\r\n      ...state,\r\n      change:\r\n        state.payment\r\n          .reduce((acc, money) => {\r\n            return acc + money.value * money.count;\r\n          }, 0)\r\n          .toFixed(2) - state.price,\r\n      moneySelection: false,\r\n      runTimer: false,\r\n    });\r\n  };\r\n\r\n  const getWrongItemsInCart = () =>\r\n    state.ingredientsList\r\n      .filter((ingredient) => {\r\n        return !checkShoppingList(ingredient);\r\n      })\r\n      .map((ingredient) => ({\r\n        ingredient: ingredient.name,\r\n        rightQuantity: ingredient.quantity,\r\n        userQuantity: state.cart.hasOwnProperty(ingredient.name)\r\n          ? state.cart[ingredient.name] * ingredient.unityValue\r\n          : 0,\r\n      }));\r\n\r\n  const restart = () => {\r\n    setState({ ...initialState(false) });\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n  };\r\n\r\n  const endGame = (timeUp) => {\r\n    setState({\r\n      ...state,\r\n      scene: \"END_GAME\",\r\n      timeUp: timeUp,\r\n    });\r\n\r\n    dispatch(\r\n      headerActions.setAll(\r\n        mission.name,\r\n        mission.nameTranslate.find((name) => {\r\n          return name.language.id === lang;\r\n        }).name\r\n      )\r\n    );\r\n    dispatch(headerActions.setState(headerConstants.STATES.OVERLAY));\r\n\r\n    let wrongIngredients = getWrongItemsInCart();\r\n\r\n    dispatch(\r\n      gameActions.create(\"results\", {\r\n        user: userId,\r\n        mission: mission.id,\r\n        secondsTaken: timeUp\r\n          ? missionData.seconds + 1\r\n          : missionData.seconds - state.remainingTime,\r\n        recipe: state.recipe.id,\r\n        rightPayment: state.change === 0,\r\n        won: state.change === 0 && !timeUp && wrongIngredients.length === 0,\r\n        wrongIngredients:\r\n          wrongIngredients.length > 0 ? JSON.stringify(wrongIngredients) : null,\r\n      })\r\n    );\r\n  };\r\n\r\n  //const { mission } = state\r\n  //console.log('mission:', mission)\r\n  return (\r\n    <div id=\"game2-wrapper\">\r\n      {mission ? (\r\n        //verificar se é possível generalizar esses gameX-wrapper\r\n        <div id=\"game2-content\">\r\n          {(function renderScene() {\r\n            switch (state.scene) {\r\n              case \"INIT\":\r\n                return (\r\n                  <Init\r\n                    icon={mission.initIcon ? mission.initIcon.url : \"\"}\r\n                    name={mission.name}\r\n                    description={mission.description}\r\n                    nameTranslate={\r\n                      mission.nameTranslate.find((name) => {\r\n                        return name.language.id === lang;\r\n                      }).name\r\n                    }\r\n                    descriptionTranslate={\r\n                      mission.descriptionTranslate.find((description) => {\r\n                        return description.language.id === lang;\r\n                      }).description\r\n                    }\r\n                    onStart={onStartGame}\r\n                    onBack={() => setState({ ...state, back: true })}\r\n                    ready={state.ingredientsList.length > 0}\r\n                  />\r\n                );\r\n              case \"INTRO\":\r\n                return (\r\n                  <Intro\r\n                    recipe={state.recipe}\r\n                    chef={missionData.character}\r\n                    ingredientsList={state.ingredientsList}\r\n                    goToTutorial={() =>\r\n                      setState({ ...state, scene: \"TUTORIAL\" })\r\n                    }\r\n                  />\r\n                );\r\n              case \"TUTORIAL\":\r\n                return (\r\n                  <Tutorial\r\n                    chef={missionData.character}\r\n                    seconds={missionData.seconds}\r\n                    hasPlayed={timesPlayed > 0}\r\n                    aisle={state.aisles[state.currentAisle]}\r\n                    shoppingCart={state.cart}\r\n                    ingredientsList={state.ingredientsList}\r\n                    addProduct={addProduct}\r\n                    removeProduct={removeProduct}\r\n                    toPreviousAisle={toPreviousAisle}\r\n                    toNextAisle={toNextAisle}\r\n                    goToMarket={() =>\r\n                      setState({\r\n                        ...state,\r\n                        scene: \"MARKET\",\r\n                        currentAisle: 0,\r\n                        cart: [],\r\n                      })\r\n                    }\r\n                  />\r\n                );\r\n              case \"MARKET\":\r\n                return (\r\n                  <div>\r\n                    <Timer\r\n                      run={state.runTimer}\r\n                      seconds={missionData.seconds}\r\n                      onStop={(remaining) => {\r\n                        setState({\r\n                          ...state,\r\n                          remainingTime: remaining,\r\n                        });\r\n                      }}\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n                    {!state.checkout && !state.checkoutConfirm && (\r\n                      <div>\r\n                        <img\r\n                          onClick={() =>\r\n                            setState({ ...state, shopList: !state.shopList })\r\n                          }\r\n                          src={listIcon}\r\n                          alt=\"\"\r\n                          className=\"list-icon\"\r\n                        />\r\n\r\n                        <Aisle\r\n                          products={state.aisles[state.currentAisle]}\r\n                          addProduct={addProduct}\r\n                          toPreviousAisle={toPreviousAisle}\r\n                          toNextAisle={toNextAisle}\r\n                        />\r\n\r\n                        <img\r\n                          onClick={() =>\r\n                            setState({\r\n                              ...state,\r\n                              checkoutConfirm: true,\r\n                              runTimer: false,\r\n                              shopList: false,\r\n                            })\r\n                          }\r\n                          src={checkout}\r\n                          alt=\"\"\r\n                        />\r\n                        <div className=\"cart\">\r\n                          <div className=\"cart-items\">\r\n                            {state.cart.map((product, index) => (\r\n                              <div className=\"cart-item\">\r\n                                <img\r\n                                  src={\r\n                                    state.ingredientsList.find(\r\n                                      (ingredient) =>\r\n                                        ingredient.name === product.name\r\n                                    ).image\r\n                                  }\r\n                                  alt=\"\"\r\n                                  onClick={removeProduct(index)}\r\n                                  className=\"cart-item-img\"\r\n                                />\r\n                                <span>{product.count}</span>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                          <img\r\n                            src={cart}\r\n                            alt=\"\"\r\n                            style={{ marginTop: -50, position: \"relative\" }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.checkoutConfirm && (\r\n                      <div>\r\n                        <div className=\"confirm-blob\">\r\n                          <p lang=\"pt-br\">Tem certeza que isso é tudo?</p>\r\n                          <p lang=\"en\">Are you sure that's all?</p>\r\n                          <button\r\n                            className=\"btn btn-center\"\r\n                            id=\"btn-cancel-checkout\"\r\n                            onClick={() =>\r\n                              setState({\r\n                                ...state,\r\n                                checkoutConfirm: false,\r\n                                runTimer: true,\r\n                              })\r\n                            }\r\n                          >\r\n                            Voltar\r\n                          </button>\r\n\r\n                          <button\r\n                            className=\"btn btn-center\"\r\n                            id=\"btn-go-to-checkout\"\r\n                            onClick={moveToCheckout}\r\n                          >\r\n                            Continuar\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"cart-items\">\r\n                          {state.cart.map((product, index) => (\r\n                            <div className=\"cart-item\">\r\n                              <img\r\n                                src={\r\n                                  state.ingredientsList.find(\r\n                                    (ingredient) =>\r\n                                      ingredient.name === product.name\r\n                                  ).image\r\n                                }\r\n                                alt=\"\"\r\n                                onClick={removeProduct(index)}\r\n                                className=\"cart-item-img\"\r\n                              />\r\n                              <span>{product.count}</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <img\r\n                          src={cart}\r\n                          alt=\"\"\r\n                          style={{ marginTop: -90, position: \"relative\" }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.checkout && (\r\n                      <div>\r\n                        <div id=\"dialog-interact\">\r\n                          {haveAll() ? (\r\n                            <div id=\"dialogos\">\r\n                              <div id=\"dialog-box\">\r\n                                <span lang=\"pt-br\">\r\n                                  Maravilha! Sua compra deu{\" \"}\r\n                                  {numberToMoney(state.price)}. Agora você só\r\n                                  precisa selecionar a quatidade correta de\r\n                                  dinheiro. Fique atento ap limite de tempo.\r\n                                </span>\r\n                                <span lang=\"en\">\r\n                                  Wonderful! That's {numberToMoney(state.price)}\r\n                                  . Now all you have to do is select the right\r\n                                  amount of money. Mind the time limit.\r\n                                </span>\r\n                              </div>{\" \"}\r\n                              <button\r\n                                className=\"btn btn-center\"\r\n                                id=\"btn-move-to-payment\"\r\n                                onClick={moveToPayment}\r\n                              >\r\n                                Continuar\r\n                              </button>\r\n                            </div>\r\n                          ) : (\r\n                            <div id=\"dialogos\">\r\n                              <div id=\"dialog-box\">\r\n                                <span lang=\"pt-br\">\r\n                                  Você selecionou {getWrongItemsInCart().length}{\" \"}\r\n                                  ingrediente(s) incorretamente!\r\n                                </span>\r\n                                <span lang=\"en\">\r\n                                  You selected {getWrongItemsInCart().length}{\" \"}\r\n                                  ingredient(s) incorrectly!\r\n                                </span>\r\n                              </div>\r\n                              <button\r\n                                className=\"btn btn-center\"\r\n                                id=\"btn-back-to-market\"\r\n                                onClick={() =>\r\n                                  setState({\r\n                                    ...state,\r\n                                    checkout: false,\r\n                                    runTimer: true,\r\n                                  })\r\n                                }\r\n                              >\r\n                                Continuar\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <DialogCharacter\r\n                            character={missionData.character}\r\n                            feeling=\"default\"\r\n                          />\r\n                          <img src={cashierTable} alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {state.shopList && (\r\n                      <div\r\n                        className=\"shop-list\"\r\n                        style={{\r\n                          backgroundImage: \"url(\" + ingredientsListBg + \")\",\r\n                          backgroundRepeat: \"no-repeat\",\r\n                          backgroundSize: \"contain\",\r\n                        }}\r\n                      >\r\n                        {state.ingredientsList.map((ingredient, index) => (\r\n                          <div>\r\n                            {checkShoppingList(ingredient) ? (\r\n                              <img\r\n                                src={listCheck}\r\n                                alt=\"\"\r\n                                className=\"shop-list-item-check\"\r\n                              />\r\n                            ) : (\r\n                              <div\r\n                                style={{\r\n                                  width: 20,\r\n                                  height: 20,\r\n                                  display: \"inline-block\",\r\n                                }}\r\n                              ></div>\r\n                            )}{\" \"}\r\n                            <img\r\n                              src={ingredient.image}\r\n                              alt=\"\"\r\n                              className=\"shop-list-item-img\"\r\n                            />\r\n                            {ingredient.description}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              case \"CASHIER\":\r\n                return (\r\n                  <div>\r\n                    <Timer\r\n                      run={state.runTimer}\r\n                      seconds={state.remainingTime}\r\n                      onStop={(remaining) => {\r\n                        setState({\r\n                          ...state,\r\n                          remainingTime: remaining,\r\n                        });\r\n                      }}\r\n                      onEnd={() => endGame(true)}\r\n                    />\r\n                    {state.moneySelection && (\r\n                      <div>\r\n                        <div className=\"selected-money\">\r\n                          {state.payment.map((money, index) => (\r\n                            <div className=\"payment-money\">\r\n                              <img\r\n                                src={\r\n                                  missionData.money.find((moneyObj) => {\r\n                                    return moneyObj.value === money.value;\r\n                                  }).image.url\r\n                                }\r\n                                alt=\"\"\r\n                                onClick={removeFromPayment(index)}\r\n                                className=\"payment-money-img\"\r\n                              />\r\n                              <span>{money.count}</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n\r\n                        <div>\r\n                          <div>\r\n                            {missionData.money.map((money, index) => (\r\n                              <Button onClick={addToPayment(money.value)}>\r\n                                <img\r\n                                  style={{ width: 50 }}\r\n                                  src={money.image.url}\r\n                                  alt=\"money\"\r\n                                />\r\n                              </Button>\r\n                            ))}\r\n                          </div>\r\n                          <img src={wallet} alt=\"\" />\r\n                          <button\r\n                            className=\"btn btn-center\"\r\n                            id=\"btn-do-payment\"\r\n                            onClick={doPayment}\r\n                          >\r\n                            Continuar\r\n                          </button>\r\n                        </div>\r\n                        <div>\r\n                          <DialogCharacter\r\n                            character={missionData.character}\r\n                            feeling=\"default\"\r\n                          />\r\n                          <img src={cashierTable} alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {!state.moneySelection && (\r\n                      <div id=\"dialog-interact\">\r\n                        <div id=\"dialogos\">\r\n                          {state.change < 0 && (\r\n                            <div id=\"dialog-box\">\r\n                              <span lang=\"pt-br\">\r\n                                Nossos patrocinadores vão ter que me pagar um\r\n                                extra para completar sua compra.\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                Our sponsors will need to give me an extra to\r\n                                pay for the rest of your purchase.\r\n                              </span>\r\n                            </div>\r\n                          )}\r\n                          {state.change > 0 && (\r\n                            <div id=\"dialog-box\">\r\n                              <span lang=\"pt-br\">\r\n                                Bem... Obirgada pela gorgeta!\r\n                              </span>\r\n                              <span lang=\"en\">Well... Thanks for the tip!</span>\r\n                            </div>\r\n                          )}\r\n                          {state.change === 0 && (\r\n                            <div id=\"dialog-box\">\r\n                              <span lang=\"pt-br\">\r\n                                Você pagou exatamente o que devia para o caixa\r\n                                do supermercado! Mexer com dinheiro é contigo\r\n                                mesmo!\r\n                              </span>\r\n                              <span lang=\"en\">\r\n                                You gave the exact amout to the supermarket's\r\n                                cashier! Dealing with money is clearly not a\r\n                                problem for you!\r\n                              </span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <button\r\n                          className=\"btn btn-center\"\r\n                          id=\"btn-end-game\"\r\n                          onClick={() => endGame(false)}\r\n                        >\r\n                          Continuar\r\n                        </button>\r\n\r\n                        <div>\r\n                          <DialogCharacter\r\n                            character={missionData.character}\r\n                            feeling={\r\n                              state.change < 0 ? \"wrongPayment\" : \"default\"\r\n                            }\r\n                          />\r\n                          <img src={cashierTable} alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              case \"END_GAME\":\r\n                return (\r\n                  <div>\r\n                    {state.timeUp ? (\r\n                      <div>\r\n                        <img src={hourglassEmpty} alt=\"\" />\r\n                        <span>O tempo acabou!</span>\r\n                        <p lang=\"pt-br\">\r\n                          Fazer compras pode ser mais complicado do que parece.\r\n                        </p>\r\n                        <p lang=\"en\">\r\n                          Time is up! Doing the groceries might be harder than\r\n                          it looks.\r\n                        </p>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <img src={hourglassFull} alt=\"\" />\r\n                        <p lang=\"pt-br\">Você finalizou em:</p>\r\n                        <p lang=\"en\">Finished in:</p>\r\n                      </div>\r\n                    )}\r\n                    <div\r\n                      className=\"feedback-painel-2-content\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + blobLaranja + \")\",\r\n                      }}\r\n                    >\r\n                      {state.timeUp ? (\r\n                        <div> 0:00</div>\r\n                      ) : (\r\n                        <div>\r\n                          {zeroFill(\r\n                            Math.floor(\r\n                              (missionData.seconds - state.remainingTime) / 60\r\n                            ).toString(),\r\n                            2\r\n                          )}\r\n                          :\r\n                          {zeroFill(\r\n                            (\r\n                              (missionData.seconds - state.remainingTime) %\r\n                              60\r\n                            ).toString(),\r\n                            2\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <button onClick={restart}>Tentar novamente</button>\r\n                    <Link to={\"/userspace\"}>Sair do jogo</Link>\r\n                  </div>\r\n                );\r\n              default:\r\n                return <div>Erro</div>;\r\n            }\r\n          })()}\r\n          {state.back && <Redirect to={\"/userspace\"} />}\r\n        </div>\r\n      ) : (\r\n        <div>Loading..</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game3;\r\n","import React from 'react'\r\n\r\nconst Recipe = ({recipe, closeText, onClose}) => {\r\n  return(\r\n    <div>\r\n      Receita\r\n      <div>\r\n        {recipe.map( (ingredient, index) =>\r\n          <div key={index}>\r\n            {ingredient.name}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button onClick={onClose? onClose : () =>{}}>\r\n        {closeText? closeText : \"Fechar\"}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recipe\r\n","const stub = {\r\n  name: 'Missão 4 mutcho louca',\r\n  description: 'Prepare-se pra uma missão do barulho com essa galerinha que vai agitar a sua tarde',\r\n  seconds: 180,\r\n  recipe: [\r\n    {name: 'tomate'},\r\n    {name: 'queijo'},\r\n    {name: 'pão'},\r\n    {name: 'presunto'},\r\n    {name: 'ovo'}\r\n  ],\r\n  ingredients:[\r\n    {name: 'tomate'},\r\n    {name: 'alho'},\r\n    {name: 'queijo'},\r\n    {name: 'pimentão'},\r\n    {name: 'requeijão'},\r\n    {name: 'pão'},\r\n    {name: 'feijão'},\r\n    {name: 'presunto'},\r\n    {name: 'ovo'},\r\n    {name: 'macarrão'}\r\n  ],\r\n  dishes:[\r\n    {name: 'garfo', img:'garfoImagem'},\r\n    {name: 'faca', img:'facaImagem'},\r\n    {name: 'prato', img:'pratoImagem'},\r\n    {name: 'furadeira', img:'furadeiraImagem'},\r\n    {name: 'tigela', img:'tigelaImagem'},\r\n    {name: 'copo', img:'copoImagem'},\r\n    {name: 'britadeira', img:'britadeiraImagem'}\r\n  ],\r\n  rightDishes:[\r\n    {name: 'garfo', img:'garfoImagem'},\r\n    {name: 'faca', img:'facaImagem'},\r\n    {name: 'prato', img:'pratoImagem'}\r\n  ]\r\n}\r\n\r\nexport default stub\r\n","const initialState = (runTimer = true) => {\r\n  return {\r\n    scene: 'INIT',\r\n    runTimer: runTimer,\r\n    remainingTime: 0,\r\n    timeUp: false,\r\n    showRecipe: false,\r\n\r\n    selectItem: true,\r\n    selected: null,\r\n\r\n    cookPhase: true,\r\n    shuffled: [],\r\n    orderedLetters: [],\r\n    result: '',\r\n    prepared: [],\r\n\r\n    servePhase: false,\r\n    shuffledDishes: [],\r\n    shuffledDishesNames: [],\r\n    dishImageSelected: '',\r\n    dishNameSelected: '',\r\n    pairCheck: false,\r\n    tableDish: [],\r\n    allDishes: false\r\n  }\r\n}\r\n\r\nexport default initialState\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Init from \"../../_components/Init\";\r\nimport Timer from \"../../_components/Timer\";\r\nimport Recipe from \"../../_components/Recipe\";\r\n\r\nimport stub from \"./stub\";\r\nimport initialState from \"./initialState\";\r\n\r\nimport { shuffle } from \"../../_helpers\";\r\n\r\nconst Game4 = () => {\r\n  const [state, setState] = React.useState(initialState());\r\n  const mission = stub;\r\n  const onStartGame = () => setState({ ...state, scene: \"TUTORIAL\" });\r\n  const onSecondPassed = (remaining) =>\r\n    setState((state) => {\r\n      return { ...state, remainingTime: remaining };\r\n    });\r\n  const onTimeEnd = () =>\r\n    setState({ ...state, scene: \"END_GAME\", timeUp: true });\r\n\r\n  const next = () => {\r\n    setState({\r\n      ...state,\r\n      servePhase: state.allPrepared,\r\n      cookPhase: !state.allPrepared,\r\n\r\n      selectItem: true,\r\n      selected: null,\r\n      orderedLetters: [],\r\n    });\r\n  };\r\n\r\n  const onLetterClick = (letter, index) => () => {\r\n    let updateState = {};\r\n    updateState.orderedLetters = [...state.orderedLetters, letter];\r\n    updateState.shuffled = [\r\n      ...state.shuffled.slice(0, index),\r\n      ...state.shuffled.slice(index + 1),\r\n    ];\r\n\r\n    if (updateState.shuffled.length === 0) {\r\n      updateState.prepared = [...state.prepared, state.selected.name];\r\n      for (let i = 0; i < mission.recipe.length; i++) {\r\n        updateState.allPrepared = updateState.prepared.includes(\r\n          mission.recipe[i].name\r\n        );\r\n\r\n        if (!updateState.allPrepared) break;\r\n      }\r\n    }\r\n    setState({ ...state, ...updateState });\r\n  };\r\n\r\n  const onNameSelected = (item) => () => {\r\n    let updateState = {};\r\n    let dish = mission.dishes.find((d) => d.img === state.dishImageSelected);\r\n    updateState.pairCheck = item === dish.name;\r\n    if (updateState.pairCheck) {\r\n      updateState.tableDish = [...state.tableDish, { ...dish }];\r\n      let index = state.shuffledDishes.findIndex((d) => d === dish.img);\r\n      updateState.shuffledDishes = [\r\n        ...state.shuffledDishes.slice(0, index),\r\n        ...state.shuffledDishes.slice(index + 1),\r\n      ];\r\n      index = state.shuffledDishesNames.findIndex((d) => d === dish.name);\r\n      updateState.shuffledDishesNames = [\r\n        ...state.shuffledDishesNames.slice(0, index),\r\n        ...state.shuffledDishesNames.slice(index + 1),\r\n      ];\r\n\r\n      for (let i = 0; i < mission.rightDishes.length; i++) {\r\n        updateState.allDishes =\r\n          updateState.tableDish.findIndex(\r\n            (d) => d.name === mission.rightDishes[i].name\r\n          ) !== -1;\r\n\r\n        if (!updateState.allDishes) break;\r\n      }\r\n      if (updateState.allDishes) {\r\n        updateState.servePhase = false;\r\n        updateState.win = true;\r\n        updateState.scene = \"END_GAME\";\r\n        updateState.runTimer = false;\r\n      }\r\n    }\r\n    setState({\r\n      ...state,\r\n      selectItem: !state.selectItem,\r\n      dishImageSelected: \"\",\r\n      ...updateState,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {(function renderScene() {\r\n        switch (state.scene) {\r\n          case \"INIT\":\r\n            return (\r\n              <Init\r\n                name={mission.name}\r\n                description={mission.description}\r\n                onStart={onStartGame}\r\n                onBack={() => setState({ ...state, back: true })}\r\n                onSeeTutorial={\r\n                  state.hasPlayed\r\n                    ? () => {\r\n                        setState({ ...state, seeTutorial: true });\r\n                        onStartGame();\r\n                      }\r\n                    : null\r\n                }\r\n              />\r\n            );\r\n          case \"TUTORIAL\":\r\n            return (\r\n              <div>\r\n                Tutorial\r\n                <div>Apresentador</div>\r\n                <div>\r\n                  Fala\r\n                  <Recipe\r\n                    recipe={mission.recipe}\r\n                    closeText={\"Estou pronto\"}\r\n                    onClose={() => setState({ ...state, scene: \"GAME\" })}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          case \"GAME\":\r\n            return (\r\n              <div>\r\n                <Timer\r\n                  run={state.runTimer}\r\n                  seconds={mission.seconds}\r\n                  onSecondPassed={onSecondPassed}\r\n                  onEnd={onTimeEnd}\r\n                />\r\n                <button\r\n                  onClick={(e) => setState({ ...state, showRecipe: true })}\r\n                >\r\n                  Ver receita\r\n                </button>\r\n                {state.showRecipe && (\r\n                  <Recipe\r\n                    recipe={mission.recipe}\r\n                    closeText={\"Fechar\"}\r\n                    onClose={(e) => setState({ ...state, showRecipe: false })}\r\n                  />\r\n                )}\r\n                <button\r\n                  onClick={() =>\r\n                    setState({\r\n                      ...state,\r\n                      cookPhase: false,\r\n                      servePhase: true,\r\n                      shuffledDishesNames: shuffle(\r\n                        mission.dishes.map((item) => item.name)\r\n                      ),\r\n                      shuffledDishes: shuffle(\r\n                        mission.dishes.map((item) => item.img)\r\n                      ),\r\n                    })\r\n                  }\r\n                >\r\n                  Pular pra servir\r\n                </button>\r\n                {state.cookPhase &&\r\n                  (state.selectItem ? (\r\n                    <div>\r\n                      {mission.ingredients.map((item, index) => (\r\n                        <button\r\n                          key={index}\r\n                          onClick={(e) =>\r\n                            setState({ ...state, selected: { ...item } })\r\n                          }\r\n                        >\r\n                          {item.name}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <div>\r\n                        {state.shuffled.map((letter, index) => (\r\n                          <button\r\n                            key={index}\r\n                            onClick={onLetterClick(letter, index)}\r\n                          >\r\n                            {letter}\r\n                          </button>\r\n                        ))}\r\n                      </div>\r\n                      <div>\r\n                        {state.shuffled.length === 0 &&\r\n                          (state.orderedLetters.reduce(\r\n                            (acc, letter) => acc + letter,\r\n                            \"\"\r\n                          ) === state.selected.name ? (\r\n                            <div>\r\n                              <div>Acertou!</div>\r\n                              <Recipe\r\n                                recipe={mission.recipe}\r\n                                closeText={\r\n                                  state.allPrepared\r\n                                    ? \"Servir!\"\r\n                                    : \"Preparar próximo\"\r\n                                }\r\n                                onClose={next}\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            <div>Errou!</div>\r\n                          ))}\r\n                        <button\r\n                          onClick={() =>\r\n                            setState({\r\n                              ...state,\r\n                              orderedLetters: [],\r\n                              shuffled: shuffle(state.selected.name.split(\"\")),\r\n                            })\r\n                          }\r\n                        >\r\n                          Clear\r\n                        </button>\r\n                        {state.orderedLetters.map((letter, index) => (\r\n                          <span key={index}>-{letter}-</span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                {state.servePhase && (\r\n                  <div>\r\n                    Selecione um utensilio\r\n                    <div>\r\n                      {state.shuffledDishes.map((item, index) => (\r\n                        <button\r\n                          key={index}\r\n                          disabled={!state.selectItem}\r\n                          onClick={() =>\r\n                            setState({\r\n                              ...state,\r\n                              selectItem: !state.selectItem,\r\n                              dishImageSelected: item,\r\n                            })\r\n                          }\r\n                        >\r\n                          {item}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                    Nomes dos utensilios\r\n                    <div>\r\n                      {state.shuffledDishesNames.map((item, index) => (\r\n                        <button\r\n                          key={index}\r\n                          disabled={state.selectItem}\r\n                          onClick={onNameSelected(item)}\r\n                        >\r\n                          {item}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                    {state.pairCheck ? <div>Acertou!</div> : <div>Errou!</div>}\r\n                  </div>\r\n                )}\r\n                <div>\r\n                  Mesa\r\n                  <div>\r\n                    {state.selected &&\r\n                      (function showTable() {\r\n                        let item = mission.recipe.find(\r\n                          (item) => item.name === state.selected.name\r\n                        );\r\n                        if (item)\r\n                          return (\r\n                            <div>\r\n                              {state.selected.name}\r\n                              {!state.cook && (\r\n                                <button\r\n                                  onClick={() =>\r\n                                    setState({\r\n                                      ...state,\r\n                                      selectItem: false,\r\n                                      shuffled: shuffle(\r\n                                        state.selected.name.split(\"\")\r\n                                      ),\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Preparar\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        else\r\n                          return (\r\n                            <div>\r\n                              {state.selected.name}\r\n                              <div>Não faz parte da receita! :(</div>\r\n                              <button\r\n                                onClick={() =>\r\n                                  setState({ ...state, selected: null })\r\n                                }\r\n                              >\r\n                                Remover\r\n                              </button>\r\n                            </div>\r\n                          );\r\n                      })()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          case \"END_GAME\":\r\n            return (\r\n              <div>\r\n                {state.win ? (\r\n                  <div>Aaeaeaeee ganhou!</div>\r\n                ) : (\r\n                  <div>\r\n                    <div>Acabou o tempo!</div>\r\n                  </div>\r\n                )}\r\n                <button onClick={() => setState(initialState())}>\r\n                  Jogar de novo\r\n                </button>\r\n                <Link to={\"/userspace\"}>Sair do jogo</Link>\r\n              </div>\r\n            );\r\n          default:\r\n            return <div>Error</div>;\r\n        }\r\n      })()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game4;\r\n","import React from 'react'\r\n\r\nconst DressingCharacter = ({clothesTypes, clothes, onRemoveClick}) => {\r\n  return(\r\n    <div>\r\n      <img src=\"\" alt=\"character\"/>\r\n      <div>\r\n        {clothesTypes.map((item, index) =>\r\n          <div key={index}>{item}: {clothes[index]? clothes[index].name : \"none\"}\r\n            {onRemoveClick && clothes[index] &&\r\n\r\n              <button onClick={onRemoveClick(index)}>Remove</button>\r\n            }\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DressingCharacter\r\n","import React from 'react'\r\n\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Wardrobe = ({clothes, onClothesClick}) => {\r\n  const [state, setState] = React.useState(0)\r\n  return(\r\n    <div>\r\n      <Tabs value={state} onChange={(e, value) => setState(value)}>\r\n        <Tab label=\"Head\"></Tab>\r\n        <Tab label=\"Top\"></Tab>\r\n        <Tab label=\"Bottom\"></Tab>\r\n        <Tab label=\"Shoes\"></Tab>\r\n      </Tabs>\r\n      <div>\r\n        {clothes.filter( item => item.type === state)\r\n        .map((item, index) =>\r\n            <Button key={index} onClick={onClothesClick(item)}>{item.name}</Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wardrobe\r\n","const initialState = () => ({\r\n  clothesTypes: [\"HEAD\", \"TOP\", \"BOTTOM\", \"SHOES\"],\r\n  scene: 'INIT',\r\n  chooseCharacterScreen: true,\r\n  choosenCharacter: null,\r\n  showInvitation: false,\r\n  proceedToDressingConfirmation: false,\r\n  dressingContext: false,\r\n  dressingTabIndex: 0,\r\n  clothes: [null, null, null, null],\r\n  readyAlert: false\r\n})\r\n\r\nexport default initialState\r\n","const stub = {\r\n  id:'0',\r\n  name: 'Missão do jogo 5 yay',\r\n  nameTranslate: 'Titulo só que em inglês',\r\n  description: 'O jogo 5 é de vestir roupinha. Simbora.',\r\n  descriptionTranslate: 'Descrição em inglês',\r\n  invitation:{\r\n    text: \"Você foi convidado para um rolê!\",\r\n    date: \"01/04\",\r\n    time: \"16h\",\r\n    season: \"Verão\",\r\n  },\r\n  clothes:[\r\n    {\r\n      type: 0,\r\n      name: \"chapeu de couro\"\r\n    },\r\n    {\r\n      type: 0,\r\n      name: \"chapeu do kiko\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa normal\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa de frio\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"bermuda\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"calça jeans\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"tenis\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"chinelo\"\r\n    },\r\n  ]\r\n}\r\n\r\nexport default stub\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Init from '../../_components/Init'\r\nimport DressingCharacter from '../../_components/DressingCharacter'\r\nimport Wardrobe from '../../_components/Wardrobe'\r\n\r\n\r\n\r\nimport initialState from './initialState'\r\n\r\nimport stub from './stub'\r\n\r\nconst Game5 = () => {\r\n  const [state, setState] = React.useState(initialState())\r\n  const mission = stub\r\n\r\n  const onStartGame = () => setState({...state, scene: 'GAME'})\r\n\r\n  return(\r\n    <div>\r\n      {(function scene(){\r\n        switch(state.scene){\r\n          case 'INIT':\r\n          return (\r\n            <Init\r\n              name={mission.name}\r\n              description={mission.description}\r\n              nameTranslate={ mission.nameTranslate\r\n                //mission.nameTranslate.find((name) => {\r\n                //  return name.language.id === lang;\r\n                //}).name\r\n              }\r\n              descriptionTranslate={ mission.descriptionTranslate\r\n                //mission.descriptionTranslate.find((description) => {\r\n                //  return description.language.id === lang;\r\n                //}).description\r\n              }\r\n              onStart={onStartGame}\r\n              onBack={() => setState({ ...state, back: true })}\r\n              ready={mission.id}\r\n            />\r\n          )\r\n\r\n          case 'GAME':\r\n            return(\r\n              <div>\r\n                {state.chooseCharacterScreen &&\r\n                  <div>\r\n                    Escolha quem vestir\r\n                    <div>\r\n                      <button onClick={()=> setState({...state, choosenCharacter: 1, showInvitation: true, chooseCharacterScreen: false})}>Personagem 1</button>\r\n                      <button onClick={()=> setState({...state, choosenCharacter: 2, showInvitation: true, chooseCharacterScreen: false})}>Personagem 2</button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                {state.showInvitation &&\r\n                  <div>\r\n                    <div>{mission.invitation.text}</div>\r\n                    <div>{mission.invitation.season}</div>\r\n                    <div>{mission.invitation.date}</div>\r\n                    <div>{mission.invitation.time}</div>\r\n                    <div>\r\n                      <button onClick={()=>setState({...state, proceedToDressingConfirmation: true, showInvitation: false})}>Estou pronto!</button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                {state.proceedToDressingConfirmation &&\r\n                  <div>\r\n                    <div>Tem certeza?</div>\r\n                    <div>ocê terá apenas uma (1) chance de rever cada informação do convite</div>\r\n                    <div>Deseja continuar?</div>\r\n                    <button onClick={()=>setState({...state, proceedToDressingConfirmation: false, showInvitation: true})}>Ver o convite novamente</button>\r\n                    <button onClick={()=>setState({...state, proceedToDressingConfirmation: false, dressingContext: true})}>Estou pronto(a)!</button>\r\n                  </div>\r\n                }\r\n                {state.dressingContext &&\r\n                  <div>\r\n                    <DressingCharacter clothesTypes={state.clothesTypes} clothes={state.clothes}\r\n                      onRemoveClick={ index => () => {\r\n                        let clothes = [...state.clothes]\r\n                        clothes[index] = null\r\n                        setState({...state, clothes:clothes})\r\n                      }}\r\n                    />\r\n                    <Wardrobe clothes={mission.clothes}\r\n                      onClothesClick={ item => () =>\r\n                        {\r\n                          var clothes = [...state.clothes]\r\n                          clothes[item.type] = item\r\n                          setState({...state, clothes: clothes})\r\n                        }\r\n                      }\r\n                    />\r\n                    <button onClick={() =>{\r\n                        let clotheCount = state.clothes.reduce((acc, item)=> (item === null ? acc: acc + 1), 0)\r\n                        setState({...state, ready: clotheCount >= 2, readyAlert: clotheCount < 2})\r\n                      }}\r\n                    >\r\n                      Estou pronto!\r\n                    </button>\r\n                    {state.readyAlert &&\r\n                      <div>\r\n                        Não pode sair vestido tão pouco!\r\n                        <button onClick={()=>setState({...state, readyAlert: false})}>Voltar a vestir</button>\r\n                      </div>\r\n                    }\r\n                    {state.ready &&\r\n                      <div>\r\n                        Esse é seu look ideal?\r\n                        <button onClick={()=>setState({...state, ready: false, scene: \"END\"})}>Sim</button>\r\n                        <button onClick={()=>setState({...state, ready: false})}>Não</button>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                }\r\n              </div>\r\n            )\r\n          case \"END\":\r\n            return(\r\n              <div>\r\n                Fim de jogo! altos feedbacks.\r\n                <button onClick={() => setState(initialState())}>Jogar novamente</button>\r\n                <button onClick={() => setState({...state, back: true})}>Sair</button>\r\n              </div>\r\n            )\r\n          default:\r\n            return(<div>Error</div>)\r\n        }\r\n      })()}\r\n\r\n      {state.back && <Redirect to='/userspace' />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game5\r\n","const initialState = () => ({\r\n  scene: 'INIT',\r\n  back: false,\r\n  clothesTypes: [\"HEAD\", \"TOP\", \"BOTTOM\", \"SHOES\"],\r\n  dressingTabIndex: 0,\r\n  chooseCharacterScreen: true,\r\n  choosenCharacter: null,\r\n  cellPhoneStart: false,\r\n  showCellphone: false,\r\n  dressingContext: false,\r\n  clothes: [null, null, null, null],\r\n  dialog: [],\r\n  namingClothesContext: false,\r\n  selectedClothesName: null,\r\n  selectedColor: null\r\n\r\n})\r\n\r\nexport default initialState\r\n","const stub = {\r\n  id: '0',\r\n  name: 'Jogo6',\r\n  description: 'Descrição do jogo 6',\r\n  nameTranslate: 'Game6',\r\n  descriptionTranslate: 'Game 6 description',\r\n  clothes:[\r\n    {\r\n      type: 0,\r\n      name: \"chapeu de couro\",\r\n      color: \"marrom\"\r\n    },\r\n    {\r\n      type: 0,\r\n      name: \"chapeu do kiko\",\r\n      color: \"blue\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa normal\",\r\n      color: \"branco\"\r\n    },\r\n    {\r\n      type: 1,\r\n      name: \"blusa de frio\",\r\n      color: \"preto\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"bermuda\",\r\n      color: \"amarelo\"\r\n    },\r\n    {\r\n      type: 2,\r\n      name: \"calça jeans\",\r\n      color: \"azul\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"tenis\",\r\n      color: \"verde\"\r\n    },\r\n    {\r\n      type: 3,\r\n      name: \"chinelo\",\r\n      color: \"laranja\"\r\n    },\r\n  ],\r\n  day: \"Dia tal\",\r\n  where: \"tal lugal\",\r\n  when: \"I don't know\"\r\n}\r\n\r\nexport default stub\r\n","import React from 'react'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nimport initialState from './initialState'\r\nimport stub from './stub'\r\nimport Init from '../../_components/Init'\r\nimport FullscreenOverlay from '../../_components/FullscreenOverlay'\r\nimport DressingCharacter from '../../_components/DressingCharacter'\r\nimport Wardrobe from '../../_components/Wardrobe'\r\n\r\nconst Game6 = () => {\r\n  const [state, setState] = React.useState(initialState())\r\n  const mission = stub\r\n  const onStartGame = () => setState({...state, scene: 'GAME'})\r\n  return(\r\n    <div>\r\n      {(function scene(){\r\n        switch(state.scene){\r\n          case 'INIT':\r\n            return(\r\n              <Init\r\n              name={mission.name}\r\n              description={mission.description}\r\n              nameTranslate={ mission.nameTranslate\r\n                //mission.nameTranslate.find((name) => {\r\n                //  return name.language.id === lang;\r\n                //}).name\r\n              }\r\n              descriptionTranslate={ mission.descriptionTranslate\r\n                //mission.descriptionTranslate.find((description) => {\r\n                //  return description.language.id === lang;\r\n                //}).description\r\n              }\r\n              onStart={onStartGame}\r\n              onBack={() => setState({ ...state, back: true })}\r\n              ready={mission.id}\r\n              />\r\n            )\r\n          case 'GAME':\r\n            return(\r\n              <div>\r\n              {state.chooseCharacterScreen &&\r\n                <div>\r\n                  Escolha quem vestir\r\n                  <div>\r\n                    <button onClick={()=> setState({...state, choosenCharacter: 1, cellPhoneStart: true, chooseCharacterScreen: false})}>Personagem 1</button>\r\n                    <button onClick={()=> setState({...state, choosenCharacter: 2, cellPhoneStart: true, chooseCharacterScreen: false})}>Personagem 2</button>\r\n                  </div>\r\n                </div>\r\n              }\r\n              {state.cellPhoneStart &&\r\n                <div>\r\n                  <button onClick={()=>setState({...state, cellPhoneStart: false, dressingContext: true})}>Estou pronto!</button>\r\n                </div>\r\n              }\r\n              {state.dressingContext &&\r\n                <div>\r\n                  {state.showCellphone ?\r\n                    <FullscreenOverlay onClickClose={() => setState({...state, showCellphone: false})}>\r\n                      <div>Umas paradas do celular aqui</div>\r\n                      <button onClick={() => setState({...state, dialog: [...state.dialog, mission.day]})}>Que dia?</button>\r\n                      <button>Onde?</button>\r\n                      <button>Quando?</button>\r\n                    </FullscreenOverlay>\r\n                    :\r\n                    <div>\r\n                      <button onClick={()=>setState({...state, showCellphone: true, dressingContext: true})}>Celular</button>\r\n                    </div>\r\n                  }\r\n                  <DressingCharacter clothesTypes={state.clothesTypes}\r\n                    clothes={state.clothes}\r\n                    showRemove\r\n                    onRemoveClick={ index => () => {\r\n                      let clothes = [...state.clothes]\r\n                      clothes[index] = null\r\n                      setState({...state, clothes:clothes})\r\n                    }}\r\n                  />\r\n                  <Wardrobe clothes={mission.clothes}\r\n                    onClothesClick={ item => () =>\r\n                      {\r\n                        var clothes = [...state.clothes]\r\n                        clothes[item.type] = item\r\n                        setState({...state, clothes: clothes})\r\n                      }\r\n                    }\r\n                  />\r\n                  <button onClick={() =>{\r\n                      let clotheCount = state.clothes.reduce((acc, item)=> (item === null ? acc: acc + 1), 0)\r\n                      setState({...state, ready: clotheCount >= 2, readyAlert: clotheCount < 2})\r\n                    }}\r\n                  >\r\n                    Estou pronto!\r\n                  </button>\r\n                  {state.readyAlert &&\r\n                    <div>\r\n                      Não pode sair vestido tão pouco!\r\n                      <button onClick={()=>setState({...state, readyAlert: false})}>Voltar a vestir</button>\r\n                    </div>\r\n                  }\r\n                  {state.ready &&\r\n                    <div>\r\n                      Esse é seu look ideal?\r\n                      <button onClick={()=>setState({...state, ready: false, dressingContext:false, namingClothesContext: true})}>Sim</button>\r\n                      <button onClick={()=>setState({...state, ready: false})}>Não</button>\r\n                    </div>\r\n                  }\r\n                </div>\r\n              }\r\n              {state.namingClothesContext &&\r\n                <div>\r\n                  <DressingCharacter clothesTypes={state.clothesTypes}\r\n                    clothes={state.clothes}\r\n                  />\r\n\r\n                  <div>\r\n\r\n                    {!state.selectedClothesName &&\r\n                      mission.clothes.map((item, index) =>\r\n                      <button key={index} onClick={()=> setState({...state, selectedClothesName: item.name})}>\r\n                        {item.name}\r\n                      </button>\r\n                    )}\r\n                    {!state.selectedColor &&\r\n                      mission.clothes.map((item, index) =>\r\n                      <button key={index} onClick={()=> setState({...state, selectedColor: item.color})}>\r\n                        {item.color}\r\n                      </button>\r\n                    )}\r\n                    <div>\r\n                      {state.selectedClothesName}\r\n                    </div>\r\n                    <div>\r\n                      {state.selectedColor}\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n              }\r\n              </div>\r\n            )\r\n          default:\r\n            return(<div>Error</div>)\r\n        }\r\n      }())}\r\n      {state.back && <Redirect to='/userspace'/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game6\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nfunction PrivateRoute ({component: Component, roles, render, ...rest}){\r\n    return (\r\n        <Route {...rest}\r\n          render={ props => localStorage.getItem('user') ?\r\n                    Component ? <Component {...props} />\r\n                  : render && render(props)\r\n                  : <Redirect to={{ pathname: '/login', state: {from:props.location} }} />\r\n          }\r\n        />\r\n    )\r\n}\r\n\r\nexport { PrivateRoute }\r\n","import './index.scss'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport { login } from '../../_actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://source.unsplash.com/random)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    }\r\n  }));\r\n\r\nconst Login = () => {\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [submitted, setSubmitted ] = useState(false)\r\n    const { email, password } = inputs\r\n    const loggingIn = useSelector(state => state.authentication.loggingIn)\r\n    const user = useSelector(state => state.authentication.user)\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const alert = useAlert()\r\n\r\n    function handleChange(e) { \r\n        const {name, value} = e.target\r\n        setInputs(inputs => ({...inputs, [name]: value}))\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        setSubmitted(true)\r\n\r\n        if(email && password){\r\n            dispatch(login(email, password))\r\n              .catch(() => {\r\n                alert.error('Email and/or password invalid! Please, check your inputs and try again!')\r\n              })\r\n\r\n        } else {\r\n          alert.error('Email and/or password missing! Please, check your inputs and try again!')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          {user ? user.user ? <Redirect to='/userspace' /> : null : null}\r\n          <CssBaseline />\r\n          <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n          <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"E-mail\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  className={'form-control' + (submitted && !email ? ' is-invalid' : '')}\r\n                  onChange={handleChange}\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Senha\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  className={'form-control' + (submitted && !password ? ' is-invalid' : '')}\r\n                  onChange={handleChange}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                {loggingIn && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                  Sign in\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link to=\"/register\" variant=\"body2\">\r\n                    Don't have an account yet? Sign up!\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n\r\n\r\n}\r\n\r\nexport default Login \r\n","import './index.scss'\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { gameActions } from '../../_actions'\r\n\r\nconst UserSpace = () => {\r\n\r\n  const user = useSelector(state => state.authentication.user.user)\r\n  const game = useSelector( state => state.game)\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(gameActions.getAll('missions'))\r\n  }, [dispatch])\r\n\r\n  // React.useEffect(()=>{\r\n  //   dispatch(game_1_missionsActions.getAll())\r\n  // }, [dispatch, game_1_missionsActions])\r\n\r\n  // React.useEffect(()=>{\r\n  //   dispatch(game_3_missionsActions.getAll())\r\n  // }, [dispatch, game_3_missionsActions])\r\n\r\n  return(\r\n    <div id=\"userspace\">\r\n      {!user.id ?\r\n        <div>Loading...</div>\r\n        :\r\n        <div>\r\n          <p>Oi {user.username}!</p>\r\n\r\n          {/* user.role.type === \"professor\"  && <div id=\"area-criacao\">\r\n            Área de criação\r\n            <div>\r\n              <Link to='/missions'>Ver Missões</Link>\r\n            </div>\r\n\r\n            <div>\r\n              <Link to='/characters'>Personagens</Link>\r\n            </div>\r\n\r\n            <div>\r\n              <Link to='/questions'>Perguntas</Link>\r\n            </div>\r\n          </div>\r\n        */}\r\n\r\n          <div className=\"jogos\">\r\n            <p>Jogos:</p>\r\n            <div id=\"missoes\">\r\n              {game.loading ? <div>Loading...</div> :\r\n                game.items.missions && game.items.missions.map( (mission, index) =>\r\n                <div key={index} className=\"missao\">\r\n                  <Link to={`/game${mission.gameType.game}/${mission.id}`}>\r\n                    <div id=\"imagem\"></div>\r\n                    <div id=\"card-text-wrapper\">\r\n                      <div id=\"nome-missao\">{mission.name}</div>\r\n                      <div id=\"descricao\">{mission.description}</div>\r\n                      <div id=\"recompensas\">Recompensas</div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {process.env.NODE_ENV === 'development' &&\r\n            <div>\r\n              Development\r\n              <div>\r\n                <Link to='/game4/0'>Game4 Stub</Link><br/>\r\n                <Link to='/game5/0'>Game5 Stub</Link><br/>\r\n                <Link to='/game6/0'>Game6 Stub</Link><br/>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserSpace\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { apiActions, register } from '../../_actions'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { useAlert } from 'react-alert'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { MenuItem } from '@material-ui/core'\r\n\r\nimport { login } from '../../_actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\n\r\nconst Register = () => {\r\n  const classes = useStyles()\r\n  const alert = useAlert()\r\n\r\n  const { languagesActions } = apiActions\r\n\r\n  const [inputs, setInputs] = useState({\r\n      email: '',\r\n      password: '',\r\n      username: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      language: ''\r\n  })\r\n  const languages = useSelector(state => state.languages.items)\r\n  const [submitted, setSubmitted ] = useState(false)\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [blocked, setBlocked] = useState(false)\r\n  const registering = useSelector(state => state.authentication.registering)\r\n  const user = useSelector(state => state.authentication.user)\r\n  const dispatch = useDispatch()\r\n\r\n  function handleChange(e) {\r\n      const {name, value} = e.target\r\n      setInputs(inputs => ({...inputs, [name]: value}))\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n\t\tdispatch(languagesActions.getAll())\r\n\t}, [dispatch, languagesActions])\r\n\r\n  // É para executar somente no primeiro render\r\n  // Como um ComponentDidMount\r\n  React.useEffect(() => {\r\n    if( user?.user ) setRedirect(true)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  function handleSubmit(e) {\r\n      e.preventDefault()\r\n      setSubmitted(true)\r\n      setBlocked(true)\r\n      alert.info(\"Creating your account. Hold tight!\")\r\n\r\n      if(inputs.email && inputs.password && inputs.username && inputs.language){\r\n          dispatch(register(inputs))\r\n            .then(() => {\r\n              alert.success('Account succesfully created! Logging you in...')\r\n              dispatch(login(inputs.email, inputs.password))\r\n              setTimeout(()=>{\r\n                setRedirect(true)\r\n              }, 3000)\r\n            })\r\n            .catch(error => {\r\n              alert.error(error)\r\n              setBlocked(false)\r\n            })\r\n      } else {\r\n        alert.error('Required fields missing! Please, check your inputs and try again!')\r\n        setBlocked(false)\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n    {/*<Container maxWidthXs=\"xs\">*/}\r\n      {(redirect && user?.user) && <Redirect to={'/userspace'} />}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                className={submitted && !inputs.username ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                className={submitted && !inputs.email ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                className={submitted && !inputs.password ? 'danger' : ''}\r\n                onChange={handleChange}\r\n                disabled={blocked}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"language\"\r\n                  label=\"Language\"\r\n                  type=\"language\"\r\n                  id=\"language\"\r\n                  className={submitted && !inputs.language ? 'danger' : ''}\r\n                  onChange={handleChange}\r\n                  select\r\n                  disabled={blocked}\r\n                >\r\n                  {languages.map((language, index) =>\r\n                    <MenuItem value={language.id} key={index}>{language.name}</MenuItem>\r\n                  )}\r\n              </TextField>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={blocked}\r\n          >\r\n          {registering && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n           Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n              Already have an account? Sign in!\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\n\r\nconst UserInfo = ({user}) => {\r\n  return(\r\n    <div>\r\n      Username: {user.username}\r\n      Email: {user.email}\r\n      Provider: {user.provider}\r\n      Confirmed: <input type='checkbox' checked={user.confirmed} />\r\n      Blocked: <input type='checkbox' checked={user.blocked} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInfo\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { userActions } from '../../_actions'\r\nimport Register from '../Register'\r\nimport UserInfo from '../../_components/UserInfo'\r\n\r\nconst UsersCRUD = () => {\r\n  const dispatch = useDispatch()\r\n  const users = useSelector( state => state.users )\r\n\r\n  React.useEffect(()=>{\r\n    dispatch(userActions.getAll())\r\n  }, [dispatch])\r\n\r\n  console.log('users:', users)\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Create User:\r\n        <Register />\r\n      </div>\r\n      <div>\r\n        All Users:\r\n        {users && users.items ? users.items.map( (user, index) =>\r\n          <div key={index}>\r\n            <UserInfo user={user} />\r\n            <button onClick={()=>{}}>\r\n              UPDATE USER\r\n            </button>\r\n            <button onClick={()=>dispatch(userActions.delete(user.id))}>\r\n              DELETE USER\r\n            </button>\r\n          </div>\r\n        ): null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersCRUD\r\n","import React from 'react'\r\n\r\nconst Mission = ({mission}) => {\r\n\r\n  return(\r\n    <div>\r\n      <div>Nome: {mission.name}</div>\r\n      <div>\r\n        <div>Descrição:</div>\r\n        <div>{mission.description}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mission\r\n","import React from 'react'\r\n\r\nconst Character = ({character}) => {\r\n  const getAnswer = (qId) => {\r\n    let a = character.answers.find( answer => answer.question && answer.question.id === qId)\r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div style={{borderStyle: 'groove', borderRadius: 5}}>\r\n      <div style={{borderStyle: 'groove', borderRadius: 5}}>\r\n        <div>Name: {character.name}</div>\r\n        <div style={{display: 'flex'}}>\r\n          {character.characterAssets && character.characterAssets.length > 0 ?\r\n            character.characterAssets.map((characterAsset, index) =>\r\n              <div key={index}>\r\n                <img style={{width: 50}} src={`${character.characterAssets[index].image[0].url}`} alt={characterAsset.name}/>\r\n              </div>\r\n            ):'nenhum'\r\n          }\r\n        </div>\r\n        {character.characterAssets && <div>Layers: {character.characterAssets.length}</div>}\r\n        <div>Job: {character.job}</div>\r\n        <div>Country: {character.country}</div>\r\n        <div>Civil state: {character.civilState}</div>\r\n      </div>\r\n      <div>\r\n        <div> JOGO 1 - Missões que participa: </div>\r\n        {character.game_1_missions && character.game_1_missions.map((mission, index)=>\r\n          <div key={index}>\r\n            <div>{index+1}: {mission.name}</div>\r\n            {mission.questions.map((question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>Pergunta: {question.question}</div>\r\n                <div>Resposta: {getAnswer(question.id)}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <div> JOGO 2 - Missões que participa: </div>\r\n        {character.missions && character.missions.map((mission, index)=>\r\n          <div key={index}>\r\n            <div>{index+1}: {mission.name}</div>\r\n            {mission.questions.map((question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>Pergunta: {question.question}</div>\r\n                <div>Resposta: {getAnswer(question.id)}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div>Errou alguma: {character.wrongAnswer}</div>\r\n        <div>Acertou o suficiente: {character.rightAnswer}</div>\r\n        <div>Dica: {character.tip}</div>\r\n        <div>Resposta à acusação: {character.acusationAnswer}</div>\r\n        <div>Despedida: {character.endDialog}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Character\r\n","import React from 'react'\r\n\r\nconst Question = ({question}) => {\r\n  return(\r\n    <div style={{display: 'flex', flexDirection: 'row'}}>\r\n      <span>{question.question}</span> <span>{question.correct? 'true' : 'false'}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question\r\n","import React from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nimport Character from '../Character'\r\nimport Question from '../Question'\r\n\r\nconst EditMission = ({mission, onDone}) => {\r\n  const [state, setState] = React.useState(mission)\r\n\r\n  const [charList, setCharList] = React.useState(mission.missionCharacters)\r\n  const [locationList, setLocationList] = React.useState(mission.locations)\r\n  const [questionList, setQuestionList] = React.useState(mission.questions)\r\n  const characters = useSelector(state => state.characters)\r\n  const locations = useSelector(state => state.locations)\r\n  const questions = useSelector(state => state.questions)\r\n\r\n  const addToMission = (character) => () => {\r\n    setCharList([...charList, character])\r\n  }\r\n\r\n  const removeFromMission = (character) => () => {\r\n    setCharList(charList.filter( c => c.id !== character.id) )\r\n  }\r\n\r\n  const addLocationToMission = (location) => () => {\r\n    setLocationList([...locationList, location])\r\n  }\r\n\r\n  const removeLocationFromMission = (location) => () => {\r\n    setLocationList(locationList.filter( l => l.id !== location.id) )\r\n  }\r\n\r\n  const addQuestionToMission = (question) => () => {\r\n    setQuestionList([...questionList, question])\r\n  }\r\n\r\n  const removeQuestionFromMission = (question) => () => {\r\n    setQuestionList(questionList.filter(c => c.id !== question.id))\r\n  }\r\n\r\n  const onClick = () => {\r\n    let newState = {\r\n      id: state.id,\r\n      name: state.name,\r\n      description: state.description\r\n    }\r\n    newState.characters = charList.reduce((acc, character) => [...acc, character.id], [] )\r\n    newState.locations = locationList.reduce((acc, location) => [...acc, location.id], [] )\r\n    newState.questions = questionList.reduce((acc, question) => [...acc, question.id], [] )\r\n    onDone(newState)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Nome: <input value={state.name} onChange={ e => setState({...state, name: e.target.value})} />\r\n      </div>\r\n      <div>\r\n        Descrição: <input value={state.description} onChange={ e => setState({...state, description: e.target.value})} />\r\n      </div>\r\n\r\n      <div>\r\n        <div>Personagens na missão:</div>\r\n        {charList.map((character, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeFromMission(character)}><RemoveIcon /></Button>\r\n            <Character character={character}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Personagens disponíveis</div>\r\n        {characters.items && characters.items.length > 0 && characters.items\r\n          .filter( character => !charList.find( c => c.id === character.id ) )\r\n          .map( (character, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addToMission(character)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <Character character={character}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Locais na missão:</div>\r\n        {locationList.map((location, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeLocationFromMission(location)}><RemoveIcon /></Button>\r\n            <div>{location.name}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Locais disponíveis</div>\r\n        {locations.items && locations.items.length > 0 && locations.items\r\n          .filter( location => !locationList.find( l => l.id === location.id ) )\r\n          .map( (location, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addLocationToMission(location)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <div>{location.name}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Questions:</div>\r\n        {questionList.map( ( question, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={removeQuestionFromMission(question)}><RemoveIcon /></Button>\r\n            <Question question={question}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <div>Preset questions</div>\r\n        {questions.items && questions.items.length > 0 && questions.items\r\n          .filter( question => !questionList.find( c => c.id === question.id) )\r\n          .map( (question, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            <Button onClick={addQuestionToMission(question)}>\r\n              <AddIcon />\r\n            </Button>\r\n            <Question question={question}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Button onClick={onClick}><DoneIcon/></Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditMission\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n\r\nimport Mission from '../Mission'\r\nimport EditMission from '../EditMission'\r\n\r\nconst Missions = () => {\r\n  const { missionsActions, game_1_missionsActions } = apiActions\r\n  const dispatch = useDispatch()\r\n  const missions = useSelector( state => state.missions)\r\n  const game1missions = useSelector( state => state.game_1_missions)\r\n  const [ createMission, setCreateMission ] = React.useState(false)\r\n  const [ edit, setEdit ] = React.useState(-1)\r\n\r\n  React.useEffect(()=> {\r\n    setEdit(-1)\r\n    setCreateMission(false)\r\n  }, [missions])\r\n\r\n  React.useEffect(() => {\r\n    dispatch(game_1_missionsActions.getAll())\r\n  }, [dispatch, game_1_missionsActions])\r\n\r\n  React.useEffect(() => {\r\n    dispatch(missionsActions.getAll())\r\n  }, [dispatch, missionsActions])\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>Missões jogo 1</div>\r\n        {game1missions.items && game1missions.items.length > 0 && game1missions.items.map((mission, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            {edit !== index ?\r\n              <Mission key={index} mission={mission} />\r\n              : <EditMission mission={mission} onDone={(newState) => {\r\n                  setEdit(-1)\r\n                  dispatch(game_1_missionsActions.update(newState))\r\n                }} /> }\r\n\r\n            {edit !== index ?\r\n              <Button><Link to={`missions/edit/game_1_missions/${mission.id}`}><EditIcon/></Link></Button>\r\n              : <Button onClick={() => setEdit(-1) }><CancelIcon/></Button>\r\n             }\r\n\r\n            <Button onClick={() => dispatch(game_1_missionsActions.delete(mission.id))}><DeleteIcon/></Button>\r\n          </div>\r\n        )}\r\n        <Button onClick={() => setCreateMission(!createMission)}>\r\n          {createMission? 'Cancelar' : 'Criar Missão'}\r\n        </Button>\r\n        {createMission &&  <Redirect to='missions/create'/>}\r\n      </div>\r\n      <div>\r\n        <div>Missões jogo 2</div>\r\n        {missions.items && missions.items.length > 0 && missions.items.map((mission, index) =>\r\n          <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n            {edit !== index ?\r\n              <Mission key={index} mission={mission} />\r\n              : <EditMission mission={mission} onDone={(newState) => {\r\n                  setEdit(-1)\r\n                  dispatch(missionsActions.update(newState))\r\n                }} /> }\r\n\r\n            {edit !== index ?\r\n              <Button><Link to={`missions/edit/${mission.id}`}><EditIcon/></Link></Button>\r\n              : <Button onClick={() => setEdit(-1) }><CancelIcon/></Button>\r\n             }\r\n\r\n            <Button onClick={() => dispatch(missionsActions.delete(mission.id))}><DeleteIcon/></Button>\r\n          </div>\r\n        )}\r\n        <Button onClick={() => setCreateMission(!createMission)}>\r\n          {createMission? 'Cancelar' : 'Criar Missão'}\r\n        </Button>\r\n        {createMission &&  <Redirect to='missions/create'/>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Missions\r\n","import React from 'react'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\nimport { useAlert } from 'react-alert'\r\n\r\nconst CreateCharacter = () => {\r\n  const { charactersActions } = apiActions\r\n  const [name, setName] = React.useState('')\r\n  const [job, setJob] = React.useState('')\r\n  const [civilState, setCivilState] = React.useState('single')\r\n  const civilStates = ['single', 'married', 'divorced', 'widowed']\r\n  const estadosCivis = ['solteir@', 'casad@', 'divorciad@', 'viúv@']\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert()\r\n\r\n  const create = () => {\r\n    dispatch(charactersActions.create({name: name, job: job, civilState: civilState})).then(() => {\r\n        alert.success('Character created!')\r\n    })\r\n    .catch(error => {\r\n        alert.error(error)\r\n    })\r\n    setName('')\r\n    setJob('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>Criador de personagens:</div>\r\n      <div>Nome: <input type='text' value={name} onChange={ e => setName(e.target.value)} /> </div>\r\n      <div>Trabalho: <input type='text' value={job} onChange={ e => setJob(e.target.value)} /> </div>\r\n      <div>Estado civil:\r\n        {civilStates.map((cs, index) =>\r\n          <div key={index}>\r\n            <Radio checked={civilState === civilStates[index]} value={civilStates[index]} onChange={ e => setCivilState(e.target.value)}/>\r\n            {estadosCivis[index]}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button onClick={create}>Criar</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateCharacter\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst CreateLocation = () => {\r\n  const [state, setState] = React.useState({name: ''})\r\n  const dispatch = useDispatch()\r\n  const { locationsActions } = apiActions\r\n\r\n  const create = () => {\r\n    dispatch(locationsActions.create(state))\r\n    setState({name: ''})\r\n  }\r\n  return (\r\n    <div>\r\n      Nome: <input value={state.name} onChange={ e => setState({...state, name:e.target.value})} placeholder='Sala de estar' />\r\n      <Button onClick={create}>Salvar</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateLocation\r\n","import { React, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst CreateQuestion = () => {\r\n    const { questionsActions }= apiActions\r\n    const dispatch = useDispatch()\r\n    const [inputs, setInputs] = useState({\r\n        question: '',\r\n        group: 0,\r\n        correct: true\r\n    })\r\n    const submitted = false\r\n    const classes = useStyles()\r\n    const creating = useSelector(state => state.authentication.registering)\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        console.log('inputs', inputs)\r\n        dispatch(questionsActions.create(inputs))\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                Create Question\r\n                </Typography>\r\n                <form id=\"create-question-form\" onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                            type=\"textArea\"\r\n                            name=\"question\"\r\n                            variant=\"outlined\"\r\n                            id=\"question\"\r\n                            label=\"Question\"\r\n                            fullWidth\r\n                            required\r\n                            className={submitted && (inputs.question === \"\") ? 'danger' : ''}\r\n                            onChange={e => {setInputs(inputs => ({...inputs, question: e.target.value}))}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                            type=\"number\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"group\"\r\n                            label=\"Group\"\r\n                            name=\"group\"\r\n                            required\r\n                            aria-describedby=\"my-helper-text\"\r\n                            className={submitted && !inputs.group ? 'danger' : ''}\r\n                            onChange={e => {setInputs(inputs => ({...inputs,  group: parseInt(e.target.value)}))}}\r\n                            />\r\n                            <span id=\"my-helper-text\">Group is a integer that defines the which questions to show in every step. For example, if a question is group 1, it will be displayed on the first user interaction with a character.</span>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} justify=\"center\">\r\n                            <FormLabel component=\"legend\">Is question correct?</FormLabel>\r\n\r\n                            <RadioGroup\r\n                            aria-label=\"correct\"\r\n                            id=\"correct\"\r\n                            name=\"correct\"\r\n                            value={inputs.correct.toString()}\r\n                            required\r\n                            onChange={e => {setInputs(inputs => ({...inputs, correct: e.target.value === \"true\" ? true : false}))}}\r\n                            >\r\n                                <FormControlLabel value=\"true\" control={<Radio />} label=\"Correct\"/>\r\n                                <FormControlLabel value=\"false\" control={<Radio />} label=\"Incorrect\"/>\r\n                            </RadioGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    >\r\n                    {creating && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                    Create\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreateQuestion\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditMissionCharacter = ({missionCharacter, onDone, questions, cancel}) => {\r\n\r\n  const [state, setState] = React.useState({\r\n    answers: missionCharacter.answers ? [...missionCharacter.answers] : []\r\n  })\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    console.log('question:', question)\r\n    let aQ = _.cloneDeep(missionCharacter.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...state.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setState({\r\n      ...state,\r\n      answers: [\r\n        ...state.answers.slice(0, index),\r\n        changedIndex,\r\n        ...state.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n  const getAnswer = (qId) => {\r\n    let a = state.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    console.log('a:', a)\r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div>Answers:</div>\r\n            {questions.map( (question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>{question.question}</div>\r\n                <input type='text' value={getAnswer(question.id)}\r\n                  onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n              </div>\r\n            )}  \r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAnswer} onChange={e => setState({...state, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAnswer} onChange={e => setState({...state, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={missionCharacter.tip} onChange={e => setState({...state, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação certa:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAcusationAnswer} onChange={e => setState({...state, rightAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação errada:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAcusationAnswer} onChange={e => setState({...state, wrongAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={missionCharacter.endDialog} onChange={e => setState({...state, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(state)}>Salvar</button>\r\n        <button onClick={cancel()}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditMissionCharacter","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditNewMissionCharacter = ({character, onDone, questions, cancel}) => {\r\n\r\n  const [missionCharacter, setmissionCharacter] = React.useState({...character})\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    let aQ = _.cloneDeep(missionCharacter.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...missionCharacter.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setmissionCharacter({\r\n      ...missionCharacter,\r\n      answers: [\r\n        ...missionCharacter.answers.slice(0, index),\r\n        changedIndex,\r\n        ...missionCharacter.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n\r\n  const getAnswer = (qId) => {\r\n    let a = missionCharacter.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    \r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div>Answers:</div>\r\n            {questions.map( (question, qIndex) =>\r\n              <div key={qIndex}>\r\n                <div>{question.question}</div>\r\n                <input type='text' value={getAnswer(question.id)}\r\n                  onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n              </div>\r\n            )}  \r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAnswer} onChange={e => setmissionCharacter({...missionCharacter, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAnswer} onChange={e => setmissionCharacter({...missionCharacter, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={missionCharacter.tip} onChange={e => setmissionCharacter({...missionCharacter, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação certa:\r\n            </div>\r\n            <input type='text' value={missionCharacter.rightAcusationAnswer} onChange={e => setmissionCharacter({...missionCharacter, rightAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação errada:\r\n            </div>\r\n            <input type='text' value={missionCharacter.wrongAcusationAnswer} onChange={e => setmissionCharacter({...missionCharacter, wrongAcusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={missionCharacter.endDialog} onChange={e => setmissionCharacter({...missionCharacter, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(missionCharacter)}>Salvar</button>\r\n        <button onClick={cancel()}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditNewMissionCharacter\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nconst missionCharacterInitialState = (character) => ({\r\n  character: character,\r\n  answers: [],\r\n  tip: '',\r\n  endDialog: '',\r\n  wrongAnswer: '',\r\n  rightAnswer: '',\r\n  wrongAcusationAnswer: '',\r\n  rightAcusationAnswer: '',\r\n  targetCharacter: false,\r\n})\r\n  \r\nexport default missionCharacterInitialState\r\n  \r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { apiActions } from '../../../_actions'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nconst CreateGame1Data = ({data, characters}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onCheckChange = (id, type) => e => {\r\n\r\n    let payload = {id: id, [type]: e.target.checked}\r\n    dispatch(apiActions.game_1_mission_charactersActions.update(payload))\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      Dados do Game1:\r\n      {data && data.map((d, index) =>\r\n        <div>\r\n          <div>{characters.find(character => d.character === character.id).name}</div>\r\n          <div>\r\n            <Checkbox checked={d.showJob} onChange={onCheckChange(d.id, 'showJob')}/>\r\n            Show Job\r\n          </div>\r\n          <div>\r\n            <Checkbox checked={d.showCountry} label='ShowCountry' onChange={onCheckChange(d.id, 'showCountry')}/>\r\n            Show Country\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateGame1Data\r\n","import React from 'react'\r\n\r\nconst Game2Data = () => {\r\n  return (\r\n    <div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game2Data\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport CreateCharacter from '../CreateCharacter'\r\nimport CreateLocation from '../CreateLocation'\r\nimport Question from '../Question'\r\nimport CreateQuestion from '../CreateQuestion'\r\nimport EditMissionCharacter from './components/EditMissionCharacter'\r\nimport EditNewMissionCharacter from './components/EditNewMissionCharacter'\r\nimport missionCharacterInitialState from './missionCharacterInitialState'\r\n\r\n// import { useAlert } from 'react-alert'\r\n\r\nimport CreateGame1Data from './Game1Data'\r\nimport Game2Data from './Game2Data'\r\n\r\nimport { apiActions } from '../../_actions'\r\n\r\n//used for game 1 and 2 coincident data\r\nconst CreateMissionGame1 = (props) => {\r\n  const dispatch = useDispatch()\r\n  // const alert = useAlert()\r\n\r\n  //for edit\r\n  const game = props && props.match? props.match.params.game : null\r\n  const id = props && props.match ? props.match.params.id : null\r\n  const originalMission = useSelector( state => id && state[game].items.length > 0 ? state[game].items.filter(m => m.id === id)[0] : null )\r\n\r\n  const characters = useSelector( state => state.characters)\r\n  const locations = useSelector( state => state.locations)\r\n  const questions = useSelector( state => state.questions)\r\n\r\n  const [state, setState] = React.useState({\r\n    mission: {\r\n      name: '',\r\n      description: '',\r\n      missionCharacters: [],\r\n      locations: [],\r\n      questions:[]\r\n    },\r\n    charactersList: [],\r\n    charactersConfigList: [],\r\n    characterConfig: null,\r\n    newCharacterConfig: null,\r\n  })\r\n\r\n  //for edit\r\n  if(originalMission && !state.mission.id)\r\n    setState({...state, mission: {...originalMission}})\r\n\r\n  //refrashed route\r\n  React.useEffect(() => {\r\n    if(id && !originalMission)\r\n      dispatch(apiActions[game+\"Actions\"].getById(id))\r\n    if(characters.items.length === 0)\r\n      dispatch(apiActions.charactersActions.getAll())\r\n    if(locations.items.length === 0)\r\n      dispatch(apiActions.locationsActions.getAll())\r\n    if(questions.items.length === 0)\r\n      dispatch(apiActions.questionsActions.getAll())\r\n  }, [dispatch, id, originalMission, questions.items.length, locations.items.length, characters.items.length, game])\r\n\r\n  const [createCharacter, setCreateCharacter] = React.useState(false)\r\n  const [createLocation, setCreateLocation] = React.useState(false)\r\n  const [createQuestion, setCreateQuestion] = React.useState(false)\r\n\r\n  const createMission = () => {\r\n/*\r\n    let data = {...state.mission,\r\n      missionCharacters: state.mission.missionCharacters.map(missionCharacter => {\r\n        return missionCharacter.id\r\n      }),\r\n      missionCharactersCreate: [...state.charactersConfigList, ...state.charactersList]\r\n    }\r\n\r\n//  algo muito errado aqui\r\n\r\n//\r\n    state.charactersConfigList = []\r\n    state.charactersList = []\r\n\r\n    dispatch(apiActions.missionsActions.create(data))\r\n\r\n    data = {...state.mission}\r\n\r\n    let data = {...state.mission}\r\n    dispatch(apiActions[game+\"Actions\"].create(data))\r\n  */\r\n  }\r\n\r\n  const editMission = () => {\r\n    // state.mission.missionCharacters = [...state.mission.missionCharacters]\r\n    // state.charactersConfigList = []\r\n    // state.charactersList = []\r\n    let data = {...state.mission,\r\n      missionCharacters: state.mission.missionCharacters.map(missionCharacter => {\r\n        return missionCharacter.id\r\n      }),\r\n      missionCharactersCreate: [...state.charactersConfigList, ...state.charactersList]\r\n    }\r\n\r\n\r\n//  algo errado aqui\r\n//\r\n    state.charactersConfigList = []\r\n    state.charactersList = []\r\n\r\n    dispatch(apiActions.missionsActions.update(data))\r\n\r\n    // data = {...state.mission}\r\n    // dispatch(apiActions[game+\"Actions\"].update(data))\r\n\r\n    data = {...state.mission}\r\n    dispatch(apiActions[game+\"Actions\"].update(data))\r\n  }\r\n\r\n  const addToMission = (type, data) => () => {\r\n    setState({...state, mission: {...state.mission, [type]:[...state.mission[type], data]}})\r\n  }\r\n\r\n  const removeFromMission = (type, data) => () => {\r\n      setState({...state, mission: {...state.mission, [type]: state.mission[type].filter(d => d.id !== data.id)}})\r\n  }\r\n\r\n  const editCharacterConfig = (character) => () => {\r\n    setState({...state, characterConfig: character})\r\n  }\r\n\r\n  const createCharacterConfig = (character) => () => {\r\n    setState({...state, newCharacterConfig: character})\r\n  }\r\n\r\n  const cancelCharacterConfig = () => () => {\r\n    setState({...state, characterConfig: null, newCharacterConfig: null})\r\n  }\r\n\r\n  const addCharacterToList = (character) => () => {\r\n    setState({...state, charactersList: [...state.charactersList, missionCharacterInitialState(character)]})\r\n  }\r\n\r\n  const removeCharacterFromList = (character) => () => {\r\n    setState({...state, charactersList: state.charactersList.filter(d => d.character.id !== character.character.id)})\r\n  }\r\n\r\n  const removeCharacterFromConfigList = (character) => () => {\r\n    setState({...state, charactersConfigList: state.charactersList.filter(d => d.character.id !== character.character.id)})\r\n  }\r\n\r\n  const updateCharacterConfig = (character) => () => {\r\n    dispatch(apiActions.mission_charactersActions.update(character))\r\n    setState({...state, characterConfig: null})\r\n  }\r\n\r\n  const addCharacterConfig = (missionCharacter) => () => {\r\n    setState({...state, charactersConfigList: [...state.charactersConfigList, missionCharacter], charactersList: state.charactersList.filter(d => d.character.id !== missionCharacter.character.id), newCharacterConfig: null})\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <div style={{\r\n          display: 'flex', flexGrow: 1,\r\n          flexShrink: 1,\r\n          flexBasis: 0,\r\n          flexDirection: 'row'}}>\r\n        <div>\r\n          <div>\r\n            <div>Nome:</div>\r\n            <div>\r\n              <input type='text' value={state.mission.name} onChange={e => setState({...state, mission: {...state.mission, name: e.target.value}})} placeholder='Missão maneira'/>\r\n            </div>\r\n          </div>\r\n\r\n          <div>Texto da missão:</div>\r\n          <textarea value={state.mission.description} onChange={e => setState({...state, mission: {...state.mission, description: e.target.value}})} />\r\n          <div>\r\n            {id ?\r\n              <Button onClick={editMission}>{'Salvar Missão'}</Button>\r\n              :<Button onClick={createMission}>{'Criar Missão'}</Button>\r\n            }\r\n          </div>\r\n\r\n          <div>\r\n            <div>Personagens na missão:</div>\r\n            {state.mission.missionCharacters.map( ( missionCharacter, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('missionCharacters', missionCharacter)}><RemoveIcon /></Button>\r\n                <Button onClick={editCharacterConfig(missionCharacter)}>\r\n                  {missionCharacter.character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {state.charactersConfigList.map( ( missionCharacter, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeCharacterFromConfigList('missionCharacters', missionCharacter)}><RemoveIcon /></Button>\r\n                <Button onClick={editCharacterConfig(missionCharacter)}>\r\n                  {missionCharacter.character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {state.charactersList.map( ( character, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeCharacterFromList(character)}><RemoveIcon /></Button>\r\n                <Button onClick={createCharacterConfig(character)}>\r\n                  {character.character.name}\r\n                </Button>\r\n                {state.charactersList.indexOf(character) !== -1 ? <div >!\r\n                  <span>This character has no config!</span>\r\n                </div> : null}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Locais na missão:</div>\r\n            {state.mission.locations.map((location, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('locations', location)}><RemoveIcon /></Button>\r\n                <div>{location.name}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Questions:</div>\r\n            {state.mission.questions.map((question, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={removeFromMission('questions', question)}><RemoveIcon /></Button>\r\n                <Question question={question}/>\r\n              </div>\r\n            )}\r\n          </div>\r\n            {game === 'game_1_missions' &&\r\n              <CreateGame1Data data={state.mission.game_1_mission_characters} characters={state.mission.characters}\r\n                onChangeCharacter={()=>{}} onJobCheckChange={()=>{}} onCountryCheckChange={()=>{}}/>\r\n            }\r\n            {game === 'game2' &&\r\n              <Game2Data />\r\n            }\r\n        </div>\r\n\r\n        <div>\r\n          <div>\r\n            <div>Personagens disponíveis</div>\r\n            {characters.items && characters.items.length > 0 && characters.items\r\n              .filter( character => !state.mission.missionCharacters.find( c => c.character.id === character.id) && !state.charactersList.find( c => c.character.id === character.id) && !state.charactersConfigList.find( c => c.character.id === character.id))\r\n              .map( (character, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addCharacterToList(character)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <Button onClick={editCharacterConfig(character)}>\r\n                  {character.name}\r\n                </Button>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateCharacter(!createCharacter)}>\r\n              {createCharacter ? \"Cancelar\" : \"Criar personagem\"}\r\n            </Button>\r\n            {createCharacter && <CreateCharacter /> }\r\n          </div>\r\n\r\n          <div>\r\n            <div>Locais disponíveis</div>\r\n            {locations.items && locations.items.length > 0 && locations.items\r\n              .filter( location => !state.mission.locations.find( l => l.id === location.id) )\r\n              .map( (location, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addToMission('locations', location)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <div>{location.name}</div>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateLocation(!createLocation)}>\r\n            {createLocation ? \"Cancelar\" : \"Criar local\"}\r\n            </Button>\r\n            {createLocation && <CreateLocation />}\r\n          </div>\r\n\r\n          <div>\r\n            <div>Preset questions</div>\r\n            {questions.items && questions.items.length > 0 && questions.items\r\n              .filter( question => !state.mission.questions.find( c => c.id === question.id) )\r\n              .map( (question, index) =>\r\n              <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Button onClick={addToMission('questions', question)}>\r\n                  <AddIcon />\r\n                </Button>\r\n                <Question question={question}/>\r\n              </div>\r\n            )}\r\n            <Button onClick={() => setCreateQuestion(!createQuestion)}>\r\n              {createQuestion ? \"Cancel\" : \"Create question\"}\r\n            </Button>\r\n            {createQuestion && <CreateQuestion /> }\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <h5>Detalhes do personagem:</h5>\r\n          {state.characterConfig && <EditMissionCharacter missionCharacter={state.characterConfig} onDone={updateCharacterConfig} questions={state.mission.questions} cancel={cancelCharacterConfig}/>}\r\n          {state.newCharacterConfig && <EditNewMissionCharacter character={state.newCharacterConfig} onDone={addCharacterConfig} questions={state.mission.questions} cancel={cancelCharacterConfig}/>}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateMissionGame1\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst EditCharacter = ({character, onDone}) => {\r\n  const [state, setState] = React.useState({\r\n    name: character.name,\r\n    job: character.job ? character.job : '',\r\n    id: character.id,\r\n    answers: character.answers ? [...character.answers] : []\r\n  })\r\n\r\n  const editAnswer = (question, index) => e => {\r\n    let aQ = _.cloneDeep(character.answers.find( answer => answer.question && answer.question.id === question.id))\r\n\r\n    let changedIndex = {...state.answers[index], answer: e.target.value}\r\n    if(!aQ) changedIndex.question = question.id\r\n\r\n    setState({\r\n      ...state,\r\n      answers: [\r\n        ...state.answers.slice(0, index),\r\n        changedIndex,\r\n        ...state.answers.slice(index+1)\r\n      ]\r\n    })\r\n  }\r\n  const getAnswer = (qId) => {\r\n    let a = state.answers.find( answer => answer.question && answer.question.id ? answer.question.id === qId : answer.question === qId)\r\n    \r\n    return a ? a.answer : ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div>\r\n        <div>\r\n          Name:<input type='text' value={state.name} onChange={ e => setState({...state, name: e.target.value}) }/>\r\n        </div>\r\n        <div>\r\n          Job:<input type='text' value={state.job} onChange={ e => setState({...state, job: e.target.value}) } />\r\n        </div>\r\n        <div>\r\n          Country:<input type='text' value={state.country} onChange={ e => setState({...state, country: e.target.value}) } />\r\n        </div>\r\n        <div>{character.civilState}</div>\r\n        <div>\r\n          <div>JOGO 1 - Missões que participa:</div>\r\n          {character.game_1_missions.map((mission, mIndex) =>\r\n            <div key={mIndex}>\r\n              <div>{mIndex+1}: {mission.name}</div>\r\n              <div>\r\n                {mission.questions.map( (question, qIndex) =>\r\n                  <div key={qIndex}>\r\n                    <div>{question.question}</div>\r\n                    <input type='text' value={getAnswer(question.id)}\r\n                      onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <div>JOGO 2 - Missões que participa:</div>\r\n          {character.missions.map((mission, mIndex) =>\r\n            <div key={mIndex}>\r\n              <div>{mIndex+1}: {mission.name}</div>\r\n              <div>\r\n                {mission.questions.map( (question, qIndex) =>\r\n                  <div key={qIndex}>\r\n                    <div>{question.question}</div>\r\n                    <input type='text' value={getAnswer(question.id)}\r\n                      onChange={editAnswer(question, qIndex)} placeholder='Resposta'/>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <div>\r\n              Errou alguma opção:\r\n            </div>\r\n            <input type='text' value={character.wrongAnswer} onChange={e => setState({...state, wrongAnswer: e.target.value})} placeholder='Errou alguma'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Acertou o suficiente:\r\n            </div>\r\n            <input type='text' value={character.rightAnswer} onChange={e => setState({...state, rightAnswer: e.target.value})} placeholder='Acertou o suficiente'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Dica:\r\n            </div>\r\n            <input type='text' value={character.tip} onChange={e => setState({...state, tip: e.target.value})} placeholder='Dica'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Resposta da acusação:\r\n            </div>\r\n            <input type='text' value={character.acusationAnswer} onChange={e => setState({...state, acusationAnswer: e.target.value})} placeholder='Resposta à acusação'/>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Despedida:\r\n            </div>\r\n            <input type='text' value={character.endDialog} onChange={e => setState({...state, endDialog: e.target.value})} placeholder='Despedida'/>\r\n          </div>\r\n        </div>\r\n        <button onClick={onDone(state)}>Salvar</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default EditCharacter\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport Character from '../Character'\r\nimport CreateCharacter from '../CreateCharacter'\r\nimport EditCharacter from '../EditCharacter'\r\n\r\nconst Characters = ({onAdd}) => {\r\n  const { charactersActions } = apiActions\r\n  const [createCharacter, setCreateCharacter] = React.useState(false)\r\n  const [edit, setEdit] = React.useState(-1)\r\n  const dispatch = useDispatch()\r\n  const characters = useSelector( state => state.characters)\r\n\r\n  React.useEffect(()=>{\r\n      dispatch(charactersActions.getAll())\r\n  }, [dispatch, charactersActions])\r\n\r\n  React.useEffect(()=>{\r\n    setEdit(-1)\r\n  }, [characters])\r\n\r\n  return (\r\n    <div>\r\n      <div>Área de personagens</div>\r\n      <button onClick={() => setCreateCharacter(!createCharacter)}>{createCharacter? 'Cancelar' : 'Criar personagem'} </button>\r\n      { createCharacter && <CreateCharacter /> }\r\n      <div>\r\n        <div>All Characters:</div>\r\n        { characters.loading && <div>Loading...</div> }\r\n        <div>\r\n          <span>Nome</span> <span>Estado civil</span> <span>Trabalho</span>\r\n        </div>\r\n        <div>\r\n          {characters.items.map((character, index) =>\r\n            <React.Fragment key={index}>\r\n              {edit === index ?\r\n                <div>\r\n                  <EditCharacter character={character} onDone={ state => () => dispatch(charactersActions.update(state))}/>\r\n                  <Button onClick={ () => setEdit(-1) }><CancelIcon /></Button>\r\n                </div>\r\n                : <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                    <Character character={character}/>\r\n                    <Button onClick={ () => setEdit(index) }><EditIcon /></Button>\r\n                  </div>\r\n              }\r\n              <br/>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Characters\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Question from '../Question'\r\nimport CreateQuestion from '../CreateQuestion'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst Questions = ({onAdd}) => {\r\n  const { questionsActions } = apiActions\r\n  const [createQuestion, setCreateQuestion] = React.useState(false)\r\n  const dispatch = useDispatch()\r\n  const questions = useSelector( state => state.questions)\r\n\r\n  React.useEffect(()=>{\r\n    if(questions.items.length === 0)\r\n      dispatch(questionsActions.getAll())\r\n  }, [dispatch, questionsActions, questions.items.length])\r\n\r\n  const editQuestion = (question) => () => {\r\n\r\n  }\r\n\r\n  const deleteQuestion = (question) => () => dispatch(questionsActions.delete(question.id))\r\n\r\n  return (\r\n    <div>\r\n      <div>Questions</div>\r\n      <button onClick={() => setCreateQuestion(!createQuestion)}>{createQuestion? 'Cancelar' : 'Criar pergunta'} </button>\r\n      { createQuestion && <CreateQuestion /> }\r\n      <div>\r\n        <div>All questions:</div>\r\n        <div>\r\n          <span>Question</span> <span>Correct</span>\r\n        </div>\r\n        <div>\r\n          {questions.items.map((question, index) =>\r\n            <div key={index}>\r\n              <Question question={question}/>\r\n              <Button onClick={editQuestion(question)}><EditIcon/></Button>\r\n              <Button onClick={deleteQuestion(question)}><DeleteIcon/></Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Questions\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { apiActions } from '../../_actions'\r\n\r\nimport Questionnaire from '../Questionnaire'\r\n// import CreateQuestionnaire from '../CreateQuestionnaire'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst Questionnaires = ({onAdd}) => {\r\n  const { questionnairesActions } = apiActions\r\n  const dispatch = useDispatch()\r\n  const questionnaires = useSelector( state => state.questionnaires)\r\n\r\n  React.useEffect(()=>{\r\n    if(questionnaires.items.length === 0)\r\n      dispatch(questionnairesActions.getAll())\r\n  }, [dispatch, questionnairesActions, questionnaires.items.length])\r\n\r\n  const editQuestionnaire = (questionnaire) => () => {\r\n\r\n  }\r\n\r\n  const deleteQuestionnaire = (questionnaire) => () => dispatch(questionnairesActions.delete(questionnaire.id))\r\n\r\n  return (\r\n    <div>\r\n      <div>Questionnaires</div>\r\n      {/* <button onClick={() => setCreateQuestionnaire(!createQuestionnaire)}>{createQuestionnaire? 'Cancel' : 'Create Questionnaire'} </button>\r\n      { createQuestionnaire && <CreateQuestionnaire /> } */}\r\n      <div>\r\n        <div>All questionnaires:</div>\r\n        <div>\r\n          <span>Questionnaire</span>\r\n        </div>\r\n        <div>\r\n          {questionnaires.items.map((questionnaire, index) =>\r\n            <div key={index}>\r\n              <Questionnaire questionnaire={questionnaire}/>\r\n              <Button onClick={editQuestionnaire(questionnaire)}><EditIcon/></Button>\r\n              <Button onClick={deleteQuestionnaire(questionnaire)}><DeleteIcon/></Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Questionnaires\r\n","import React from 'react'\r\nimport { apiActions } from '../../_actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst PlaySessions = () => {\r\n  const dispatch = useDispatch()\r\n  const playSessions = useSelector( state => state.play_sessions.items)\r\n  const { play_sessionsActions } = apiActions\r\n\r\n  React.useEffect(() => {\r\n    dispatch(play_sessionsActions.getAll())\r\n  }, [dispatch, play_sessionsActions])\r\n\r\n  return(\r\n    <div>\r\n      <div>PlaySessions:</div>\r\n      {playSessions.length > 0 && playSessions.map((playSession, index) =>\r\n        <div key={index}>\r\n          <div>User: {playSession.usersPermissionsUser.firstName} {playSession.usersPermissionsUser.lastName}</div>\r\n          <div>Missão: {playSession.mission.name}</div>\r\n          <div>\r\n          <div>PlayerActions:</div>\r\n          {playSession.player_actions.map((playerAction, index) =>\r\n            <div key={index}>TAG:{playerAction.data.tag}</div>\r\n          )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaySessions\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst Config = (props) => {\r\n  return(\r\n    <div id=\"config-dialog\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Config\r\n","import React from 'react'\r\nimport Config from '../Config'\r\n\r\nconst ConfigWindow = ({onConfig, onStatistics, onLeave, onClose}) => {\r\n  return(\r\n    <Config>\r\n      <div className=\"config-option\" onClick={onConfig}>\r\n        <span lang=\"pt-br\">Configurações de jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Game settings</span>\r\n      </div>\r\n      <div className=\"config-option\" onClick={onStatistics}>\r\n        <span lang=\"pt-br\">Estatísticas</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Statistics</span>\r\n      </div>\r\n      <div className=\"config-option\" onClick={onLeave}>\r\n        <span lang=\"pt-br\">Sair do jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Leave game</span>\r\n      </div>\r\n      <div id=\"config-fechar\" onClick={onClose}>×</div>\r\n    </Config>\r\n  )\r\n}\r\n\r\nexport default ConfigWindow\r\n","import React from 'react'\r\nimport Config from '../Config'\r\nimport Button from '@material-ui/core/Button'\r\nimport VolumeMute from '@material-ui/icons/VolumeMute'\r\nimport VolumeUp from '@material-ui/icons/VolumeUp'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\n\r\nconst GameConfig = (\r\n  {\r\n    onVolumeMute, onVolumeUp, volume, onVolumeChange,\r\n    fontSize, onFontSizeChange, assistMode, onAssistModeChange,\r\n    onAccessibilityLeft, onAccessibilityRight,\r\n    onBack, onClose\r\n  }) => {\r\n  return(\r\n    <Config>\r\n      <div id=\"title\">\r\n        <span lang=\"pt-br\">Configurações de jogo</span>\r\n        <div className=\"divider\"></div>\r\n        <span lang=\"en\">Game settings</span>\r\n      </div>\r\n      <table id=\"game-options\">\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Volume</span>\r\n              <span lang=\"en\">Volume</span>\r\n            </td>\r\n            <td>\r\n              <Button onClick={onVolumeMute}>\r\n                <VolumeMute />\r\n              </Button>\r\n                <Slider value={volume} onChange={onVolumeChange}/>\r\n              <Button onClick={onVolumeUp}>\r\n                <VolumeUp />\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Tamanho da fonte</span>\r\n              <span lang=\"en\">Font size</span>\r\n            </td>\r\n            <td id=\"tamanho-fonte\">\r\n              <span className=\"label-pequeno\">Aa</span>\r\n              <Slider value={fontSize} onChange={onFontSizeChange}/>\r\n              <span className=\"label-grande\">Aa</span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Modo assistência</span>\r\n              <span lang=\"en\">Assist mode</span>\r\n            </td>\r\n            <td>\r\n              <Checkbox checked={assistMode} onChange={onAssistModeChange}/>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span lang=\"pt-br\">Acessibilidade</span>\r\n              <span lang=\"en\">Accessibility</span>\r\n            </td>\r\n            <td id=\"tipo-acessibilidade\">\r\n              <Button onClick={onAccessibilityLeft}> {'❮'} </Button>\r\n              <div>\r\n                <span lang=\"pt-br\">Nenhum</span>\r\n                <span lang=\"en\">None</span>\r\n              </div>\r\n              <Button onClick={onAccessibilityRight}> {'❯'} </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td id=\"voltar-cell\" colSpan=\"2\">\r\n              <Button onClick={onBack}>Voltar</Button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div id=\"config-fechar\" onClick={onClose}>×</div>\r\n    </Config>\r\n  )\r\n}\r\n\r\nexport default GameConfig\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { headerActions } from \"../../_actions\";\r\nimport ConfigWindow from \"../../_components/ConfigWindow\";\r\nimport GameConfig from \"../../_components/GameConfig\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { settings } from \"../../img\";\r\nimport \"./index.scss\";\r\nimport { headerConstants } from \"../../_constants\";\r\n\r\nconst GameContext = (props) => {\r\n  const [state, setState] = React.useState({\r\n    volume: 15,\r\n    fontSize: 12,\r\n    assistMode: false,\r\n    accessibility: \"NONE\",\r\n    gameConfig: false,\r\n    back: false,\r\n    config: false,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const music = useSelector((state) => state.music);\r\n  let headerInfo = useSelector((state) => state.header);\r\n\r\n  let { children } = props;\r\n  children = { ...children, props: { ...props } };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n    return () => {\r\n      dispatch(headerActions.clearAll());\r\n      dispatch(headerActions.setState(headerConstants.STATES.NORMAL));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div id=\"game-context\">\r\n      {headerInfo.state === headerConstants.STATES.HIDDEN && (\r\n        <div\r\n          id=\"floating-config-btn\"\r\n          onClick={() => setState({ ...state, config: true })}\r\n        >\r\n          <img src={settings} alt=\"config\" />\r\n        </div>\r\n      )}\r\n      <ReactAudioPlayer\r\n        src={music.url}\r\n        autoPlay\r\n        volume={state.volume / 100}\r\n        loop={true}\r\n      />\r\n      {state.config && (\r\n        <ConfigWindow\r\n          onConfig={() =>\r\n            setState({ ...state, config: false, gameConfig: true })\r\n          }\r\n          onStatistics={() => {}}\r\n          onLeave={() => setState({ ...state, back: true })}\r\n          onClose={() => setState({ ...state, config: false })}\r\n        />\r\n      )}\r\n      {state.gameConfig && (\r\n        <GameConfig\r\n          volume={state.volume}\r\n          onVolumeMute={() => setState({ ...state, volume: 0 })}\r\n          onVolumeUp={() => setState({ ...state, volume: 100 })}\r\n          onVolumeChange={(e, newValue) =>\r\n            setState({ ...state, volume: newValue })\r\n          }\r\n          fontSize={state.fontSize}\r\n          onFontSizeChange={(e, newValue) =>\r\n            setState({ ...state, fontSize: newValue })\r\n          }\r\n          assistMode={state.assistMode}\r\n          onAssistModeChange={(e) =>\r\n            setState({ ...state, assistMode: e.target.checked })\r\n          }\r\n          onAccessibilityLeft={() => {}}\r\n          onAccessibilityRight={() => {}}\r\n          onBack={() => setState({ ...state, gameConfig: false, config: true })}\r\n          onClose={() => setState({ ...state, gameConfig: false })}\r\n        />\r\n      )}\r\n      {children}\r\n      {state.back && <Redirect to=\"/userspace\" />}\r\n    </div>\r\n  );\r\n};\r\nexport default GameContext;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Conversa from \"./_components/Conversa\";\r\nimport { headerActions } from \"./_actions\";\r\nimport { headerConstants } from \"./_constants\";\r\n\r\nconst TestPage = () => {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(headerActions.setState(headerConstants.STATES.HIDDEN));\r\n    return () => {\r\n      dispatch(headerActions.setState(headerConstants.STATES.NORMAL));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const divStyle = {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  };\r\n\r\n  // -------------------------------------------\r\n  // MODIFICAR SOMENTE DAQUI PARA BAIXO\r\n  // -------------------------------------------\r\n\r\n  return (\r\n    <div style={divStyle}>\r\n      {\" \"}\r\n      {/* NÃO MODIFICAR ESSA LINHA */}\r\n      <Conversa\r\n        convOptions={[\r\n          { question: \"Pergunta 1\", answers: [\"Resposta 1.1\", \"Resposta 1.2\"] },\r\n          { question: \"Pergunta 2\", answers: [\"Resposta 2.1\"] },\r\n          { question: \"Pergunta 3\", answers: [\"Resposta 3.1\"] },\r\n          { question: \"Pergunta 4\", answers: [\"Resposta 4.1\"] },\r\n        ]}\r\n      />\r\n    </div> /* NÃO MODIFICAR ESSA LINHA */\r\n  );\r\n\r\n  // -------------------------------------------\r\n  // MODIFICAR SOMENTE ATÉ AQUI\r\n  // -------------------------------------------\r\n};\r\n\r\nexport default TestPage;\r\n","\r\nconst rootUrl = process.env.NODE_ENV === 'development'? ''\r\n              : process.env.NODE_ENV === 'production'? process.env.PUBLIC_URL\r\n              : ''\r\n\r\nexport default rootUrl\r\n","import './App.scss'\r\nimport AppHeader from './_components/AppHeader'\r\nimport Home from './pages/Home'\r\nimport Game1 from './pages/Game1'\r\nimport Game2 from './pages/Game2'\r\nimport Game3 from './pages/Game3'\r\nimport Game4 from './pages/Game4'\r\nimport Game5 from './pages/Game5'\r\nimport Game6 from './pages/Game6'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\"\r\n\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { PrivateRoute } from './_components/PrivateRoute'\r\n// import { history } from './_helpers'\r\nimport Login from './pages/Login'\r\nimport UserSpace from './pages/UserSpace'\r\nimport UsersCRUD from './pages/UsersCRUD'\r\nimport Missions from './pages/Missions'\r\nimport CreateMission from './pages/CreateMission'\r\nimport Characters from './pages/Characters'\r\nimport Questions from './pages/Questions'\r\nimport Register from './pages/Register'\r\nimport Questionnaires from './pages/Questionnaires'\r\nimport PlaySessions from './pages/PlaySessions'\r\nimport GameContext from './pages/GameContext'\r\nimport { headerConstants } from './_constants'\r\nimport TestPage from './TestPage'\r\nimport rootUrl from './rootUrl'\r\n\r\nconst App = () => {\r\n\r\n  let palette = \"palette01\"\r\n  document.getElementsByTagName('html')[0].className = palette\r\n\r\n  let gameMode = useSelector( state => state.header.state ) !== headerConstants.STATES.NORMAL;\r\n  console.log('env:', process.env.NODE_ENV)\r\n  console.log('rootUrl:', rootUrl)\r\n  return (\r\n    <div className={ \"App\" + (gameMode? \" game-mode\" : \"\")}>\r\n      <Router basename={rootUrl}>\r\n        <AppHeader props={{isLogged: useSelector(state => state.authentication.loggedIn)}} />\r\n        <Switch>\r\n          <Redirect path={'/EADLearningTool'} to={'/userspace'}/>\r\n          <Route exact path={'/'} component={Home} />\r\n          <Route exact path={'/home'} component={Home} />\r\n          <Route path={`/login`} component={Login} />\r\n          <Route path={`/register`} component={Register} />\r\n          <PrivateRoute exact path={`/game1/:id`} render={(props) => <GameContext {...props}><Game1 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game2/:id`} render={(props) => <GameContext {...props}><Game2 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game3/:id`} render={(props) => <GameContext {...props}><Game3 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game4/:id`} render={(props) => <GameContext {...props}><Game4 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game5/:id`} render={(props) => <GameContext {...props}><Game5 /></GameContext>} />\r\n          <PrivateRoute exact path={`/game6/:id`} render={(props) => <GameContext {...props}><Game6 /></GameContext>} />\r\n          <PrivateRoute exact path={`/test`} component={TestPage} />\r\n          <PrivateRoute exact path={`/userspace`} component={UserSpace} />\r\n          <PrivateRoute exact path={`/missions`} component={Missions} />\r\n          <PrivateRoute exact path={`/questions`} component={Questions} />\r\n          <PrivateRoute exact path={`/questionnaires`} component={Questionnaires} />\r\n          <PrivateRoute exact path={`/missions/create`} component={CreateMission} />\r\n          <PrivateRoute exact path={`/missions/edit/:game/:id`} component={CreateMission} />\r\n          <PrivateRoute exact path={`/characters`} component={Characters} />\r\n          <PrivateRoute exact path={`/users`} component={UsersCRUD} />\r\n          <PrivateRoute exact path={`/playSessions`} component={PlaySessions}/>\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n/*\r\nreturn (\r\n  <div>\r\n    {/* { alert.message &&\r\n      <div className={`alert ${alert.type}`}>{alert.message}</div>\r\n    })\r\n*/\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport {positions, Provider as AlertProvider} from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\nimport { store } from './_helpers'\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.TOP_RIGHT\r\n}\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <AlertProvider template={AlertTemplate} {...options}>\r\n        <App />\r\n      </AlertProvider>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}